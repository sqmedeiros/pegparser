Regular Annotation (SBLP paper)
Adding labels: Err_1, Err_2, Err_3, Err_4, Err_5, Err_6, Err_7, Err_8, Err_9, Err_10, Err_11, Err_12, Err_13, Err_14, Err_15, Err_16, Err_17, Err_18, Err_19, Err_20, Err_21, Err_22, Err_23, Err_24, Err_25, Err_26, Err_27, Err_28, Err_29, Err_30, Err_31, Err_32, Err_33, Err_34, Err_35, Err_36, Err_37, Err_38, Err_39, Err_40, Err_41, Err_42, Err_43, Err_44, Err_45, Err_46, Err_47, Err_48, Err_49, Err_50, Err_51, Err_52, Err_53, Err_54, Err_55, Err_56, Err_57, Err_58, Err_59, Err_60, Err_61, Err_62, Err_63, Err_64, Err_65, Err_66, Err_67, Err_68, Err_69, Err_70, Err_71, Err_72, Err_73, Err_74, Err_75, 

Property 	nil
translation_unit <-  SKIP external_decl+ !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def^Err_001
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl^Err_002
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum' ID^Err_003  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union ID^Err_004
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator^Err_005)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl^Err_006
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator^Err_007 ')'^Err_008) ('[' const_exp? ']'^Err_009  /  '(' param_type_list ')'  /  '(' id_list? ')'^Err_010)*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...'^Err_011)?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID^Err_012)*
initializer     <-  '{' initializer^Err_013 (',' initializer)* ','? '}'^Err_014  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator^Err_015 ')'^Err_016 ('[' const_exp? ']'^Err_017  /  '(' param_type_list? ')'^Err_018)*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case' const_exp^Err_019 ':'^Err_020 stat^Err_021  /  'default' ':'^Err_022 stat^Err_023  /  exp? ';'  /  compound_stat  /  'if' '(' exp ')' stat 'else' stat  /  'if' '('^Err_024 exp^Err_025 ')'^Err_026 stat^Err_027  /  'switch' '('^Err_028 exp^Err_029 ')'^Err_030 stat^Err_031  /  'while' '('^Err_032 exp^Err_033 ')'^Err_034 stat^Err_035  /  'do' stat^Err_036 'while'^Err_037 '('^Err_038 exp^Err_039 ')'^Err_040 ';'^Err_041  /  'for' '('^Err_042 exp? ';'^Err_043 exp? ';'^Err_044 exp? ')'^Err_045 stat^Err_046  /  'goto' ID^Err_047 ';'^Err_048  /  'continue' ';'^Err_049  /  'break' ';'^Err_050  /  'return' exp? ';'^Err_051
compound_stat   <-  '{' decl* stat* '}'^Err_052
exp             <-  assignment_exp (',' assignment_exp^Err_053)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?' exp ':' conditional_exp  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp^Err_054)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp^Err_055)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp^Err_056)*
exclusive_or_exp <-  and_exp ('^' and_exp^Err_057)*
and_exp         <-  equality_exp ('&' !'&' equality_exp^Err_058)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp^Err_059)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp^Err_060)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp^Err_061)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp^Err_062)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp^Err_063)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp^Err_064  /  '--' unary_exp^Err_065  /  unary_operator cast_exp^Err_066  /  'sizeof' (type_name  /  unary_exp)^Err_067  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp^Err_068 ']'^Err_069  /  '(' (assignment_exp (',' assignment_exp^Err_070)*)? ')'^Err_071  /  '.' ID^Err_072  /  '->' ID^Err_073  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp^Err_074 ')'^Err_075
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

End Regular

Deep Ban
Adding labels: 

Property 	nil
translation_unit <-  SKIP external_decl+ !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum' ID  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union ID
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator ')') ('[' const_exp? ']'  /  '(' param_type_list ')'  /  '(' id_list? ')')*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...')?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID)*
initializer     <-  '{' initializer (',' initializer)* ','? '}'  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator ')' ('[' const_exp? ']'  /  '(' param_type_list? ')')*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case' const_exp ':' stat  /  'default' ':' stat  /  exp? ';'  /  compound_stat  /  'if' '(' exp ')' stat 'else' stat  /  'if' '(' exp ')' stat  /  'switch' '(' exp ')' stat  /  'while' '(' exp ')' stat  /  'do' stat 'while' '(' exp ')' ';'  /  'for' '(' exp? ';' exp? ';' exp? ')' stat  /  'goto' ID ';'  /  'continue' ';'  /  'break' ';'  /  'return' exp? ';'
compound_stat   <-  '{' decl* stat* '}'
exp             <-  assignment_exp (',' assignment_exp)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?' exp ':' conditional_exp  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp)*
exclusive_or_exp <-  and_exp ('^' and_exp)*
and_exp         <-  equality_exp ('&' !'&' equality_exp)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp  /  '--' unary_exp  /  unary_operator cast_exp  /  'sizeof' (type_name  /  unary_exp)  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp ']'  /  '(' (assignment_exp (',' assignment_exp)*)? ')'  /  '.' ID  /  '->' ID  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp ')'
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

End Deep

Unique Labels
Uunique
return	 = 	1
continue	 = 	1
|=	 = 	1
break	 = 	1
&&	 = 	1
static	 = 	1
]	 = 	3
^	 = 	1
<<=	 = 	1
||	 = 	1
[	 = 	3
enum	 = 	2
if	 = 	2
default	 = 	1
++	 = 	2
while	 = 	2
case	 = 	1
typedef	 = 	1
void	 = 	1
%=	 = 	1
+=	 = 	1
do	 = 	1
SKIP	 = 	1
else	 = 	1
extern	 = 	1
int	 = 	1
?	 = 	1
->	 = 	1
:	 = 	5
;	 = 	10
float	 = 	1
const	 = 	1
switch	 = 	1
unsigned	 = 	1
-	 = 	2
register	 = 	1
==	 = 	1
<=	 = 	1
)	 = 	14
*	 = 	4
+	 = 	2
,	 = 	10
%	 = 	1
&	 = 	2
short	 = 	1
(	 = 	14
!	 = 	1
/=	 = 	1
-=	 = 	1
>=	 = 	1
ENUMERATION_CONST	 = 	1
*=	 = 	1
for	 = 	1
auto	 = 	1
^=	 = 	1
STRING	 = 	1
INT_CONST	 = 	1
...	 = 	1
<<	 = 	1
signed	 = 	1
.	 = 	1
>>=	 = 	1
sizeof	 = 	1
--	 = 	2
/	 = 	1
>>	 = 	1
volatile	 = 	1
>	 = 	1
<	 = 	1
double	 = 	1
~	 = 	1
!=	 = 	1
&=	 = 	1
=	 = 	3
FLOAT_CONST	 = 	1
{	 = 	4
|	 = 	1
}	 = 	4
char	 = 	1
ID	 = 	15
goto	 = 	1
union	 = 	1
CHAR_CONST	 = 	1
long	 = 	1
struct	 = 	1
Token 	1	 = 	65
Token 	2	 = 	8
Token 	3	 = 	3
Token 	4	 = 	3
Token 	5	 = 	1
Token 	6	 = 	nil
Token 	7	 = 	nil
Token 	8	 = 	nil
Token 	9	 = 	nil
Token 	10	 = 	2
Unique tokens (# 64): !, !=, %, %=, &&, &=, *=, +=, -=, ->, ., ..., /, /=, <, <<, <<=, <=, ==, >, >=, >>, >>=, ?, CHAR_CONST, ENUMERATION_CONST, FLOAT_CONST, INT_CONST, STRING, ^, ^=, auto, break, case, char, const, continue, default, do, double, else, extern, float, for, goto, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, |, |=, ||, ~
Adding labels: Err_1, Err_2, Err_3, Err_4, Err_5, Err_6, Err_7, Err_8, Err_9, Err_10, Err_11, Err_12, Err_13, Err_14, Err_15, Err_16, Err_17, Err_18, Err_19, Err_20, Err_21, Err_22, Err_23, Err_24, Err_25, Err_26, Err_27, Err_28, Err_29, Err_30, Err_31, Err_32, Err_33, Err_34, Err_35, Err_36, Err_37, Err_38, Err_39, 

Property 	nil
translation_unit <-  SKIP external_decl+ !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum' ID  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union ID
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator ')') ('[' const_exp? ']'  /  '(' param_type_list ')'  /  '(' id_list? ')')*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...')?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID)*
initializer     <-  '{' initializer (',' initializer)* ','? '}'  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator ')' ('[' const_exp? ']'  /  '(' param_type_list? ')')*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case' const_exp^Err_001 ':'^Err_002 stat^Err_003  /  'default' ':'^Err_004 stat^Err_005  /  exp? ';'  /  compound_stat  /  'if' '(' exp ')' stat 'else' stat^Err_006  /  'if' '(' exp ')' stat  /  'switch' '('^Err_007 exp^Err_008 ')'^Err_009 stat^Err_010  /  'while' '(' exp ')' stat  /  'do' stat^Err_011 'while'^Err_012 '('^Err_013 exp^Err_014 ')'^Err_015 ';'^Err_016  /  'for' '('^Err_017 exp? ';'^Err_018 exp? ';'^Err_019 exp? ')'^Err_020 stat^Err_021  /  'goto' ID^Err_022 ';'^Err_023  /  'continue' ';'^Err_024  /  'break' ';'^Err_025  /  'return' exp? ';'^Err_026
compound_stat   <-  '{' decl* stat* '}'
exp             <-  assignment_exp (',' assignment_exp)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?' exp^Err_027 ':'^Err_028 conditional_exp^Err_029  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp^Err_030)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp^Err_031)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp^Err_032)*
exclusive_or_exp <-  and_exp ('^' and_exp^Err_033)*
and_exp         <-  equality_exp ('&' !'&' equality_exp)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp^Err_034)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp^Err_035)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp^Err_036)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp  /  '--' unary_exp  /  unary_operator cast_exp  /  'sizeof' (type_name  /  unary_exp)^Err_037  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp ']'  /  '(' (assignment_exp (',' assignment_exp)*)? ')'  /  '.' ID^Err_038  /  '->' ID^Err_039  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp ')'
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

End Unique

Unique Path (UPath)
Uunique
return	 = 	1
continue	 = 	1
|=	 = 	1
break	 = 	1
&&	 = 	1
static	 = 	1
]	 = 	3
^	 = 	1
<<=	 = 	1
||	 = 	1
[	 = 	3
enum	 = 	2
if	 = 	2
default	 = 	1
++	 = 	2
while	 = 	2
case	 = 	1
typedef	 = 	1
void	 = 	1
%=	 = 	1
+=	 = 	1
do	 = 	1
SKIP	 = 	1
else	 = 	1
extern	 = 	1
int	 = 	1
?	 = 	1
->	 = 	1
:	 = 	5
;	 = 	10
float	 = 	1
const	 = 	1
switch	 = 	1
unsigned	 = 	1
-	 = 	2
register	 = 	1
==	 = 	1
<=	 = 	1
)	 = 	14
*	 = 	4
+	 = 	2
,	 = 	10
%	 = 	1
&	 = 	2
short	 = 	1
(	 = 	14
!	 = 	1
/=	 = 	1
-=	 = 	1
>=	 = 	1
ENUMERATION_CONST	 = 	1
*=	 = 	1
for	 = 	1
auto	 = 	1
^=	 = 	1
STRING	 = 	1
INT_CONST	 = 	1
...	 = 	1
<<	 = 	1
signed	 = 	1
.	 = 	1
>>=	 = 	1
sizeof	 = 	1
--	 = 	2
/	 = 	1
>>	 = 	1
volatile	 = 	1
>	 = 	1
<	 = 	1
double	 = 	1
~	 = 	1
!=	 = 	1
&=	 = 	1
=	 = 	3
FLOAT_CONST	 = 	1
{	 = 	4
|	 = 	1
}	 = 	4
char	 = 	1
ID	 = 	15
goto	 = 	1
union	 = 	1
CHAR_CONST	 = 	1
long	 = 	1
struct	 = 	1
Token 	1	 = 	65
Token 	2	 = 	8
Token 	3	 = 	3
Token 	4	 = 	3
Token 	5	 = 	1
Token 	6	 = 	nil
Token 	7	 = 	nil
Token 	8	 = 	nil
Token 	9	 = 	nil
Token 	10	 = 	2
Unique tokens (# 64): !, !=, %, %=, &&, &=, *=, +=, -=, ->, ., ..., /, /=, <, <<, <<=, <=, ==, >, >=, >>, >>=, ?, CHAR_CONST, ENUMERATION_CONST, FLOAT_CONST, INT_CONST, STRING, ^, ^=, auto, break, case, char, const, continue, default, do, double, else, extern, float, for, goto, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, |, |=, ||, ~
calcTail
translation_unit: 	;, }
external_decl: 	;, }
function_def: 	}
decl_spec: 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
decl: 	;
storage_class_spec: 	auto, extern, register, static, typedef
type_spec: 	__ID, char, double, float, int, long, short, signed, unsigned, void, }
type_qualifier: 	const, volatile
struct_or_union: 	struct, union
init_declarator_list: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
init_declarator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_decl: 	;
spec_qualifier_list: 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier: 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_declarator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
declarator: 	), ], __ID
direct_declarator: 	), ], __ID
pointer: 	*, const, volatile
param_type_list: 	), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_decl: 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
id_list: 	__ID
initializer: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
type_name: 	), *, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
abstract_declarator: 	), *, ], const, volatile
direct_abstract_declarator: 	), ]
typedef_name: 	__ID
stat: 	;, }
compound_stat: 	}
exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
assignment_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
assignment_operator: 	%=, &=, *=, +=, -=, /=, <<=, =, >>=, ^=, |=
conditional_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
const_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
logical_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
logical_and_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
inclusive_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
exclusive_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
and_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
equality_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
relational_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
shift_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
additive_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
multiplicative_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
cast_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
postfix_exp: 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
primary_exp: 	), __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
constant: 	__CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __INT_CONST
unary_operator: 	!, &, *, +, -, ~
COMMENT: 	*/
INT_CONST: 	0, 1, 2, 3, 4, 5, 6, 7, 8, L, U, __DIGIT, __XDIGIT, l, u
FLOAT_CONST: 	., F, L, __DIGIT, __XDIGIT, f, l
XDIGIT: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, a, b, c, d, e, f
DIGIT: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9
CHAR_CONST: 	'
STRING: 	"
ESC_CHAR: 	", ', 0, 1, 2, 3, 4, 5, 6, 7, ?, \\, __XDIGIT, a, b, f, n, r, t, v
ENUMERATION_CONST: 	__ID
ID: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, _, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z
KEYWORDS: 	auto, break, case, char, const, continue, default, do, double, else, enum, extern, float, for, goto, if, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, while
SPACE: 		, 
, , , ,  , __COMMENT
SKIP: 		, 
, , , ,  , __COMMENT, __empty
Global Prefix
translation_unit: 	
external_decl: 	;, }
function_def: 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
decl_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
decl: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
storage_class_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
type_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
type_qualifier: 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
struct_or_union: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
init_declarator_list: 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
init_declarator: 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
struct_decl: 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier_list: 	(, sizeof
spec_qualifier: 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_declarator: 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator: 	,, {
declarator: 	(, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
direct_declarator: 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
pointer: 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_type_list: 	(
param_decl: 	(, ,
id_list: 	(
initializer: 	,, =, {
type_name: 	(, sizeof
abstract_declarator: 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
direct_abstract_declarator: 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
typedef_name: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
stat: 	), :, ;, do, else, {, }
compound_stat: 	), :, ;, ], __ID, do, else, {, }
exp: 	(, ), :, ;, ?, [, do, else, return, {, }
assignment_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
assignment_operator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
conditional_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
const_exp: 	:, =, [, case
logical_or_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
logical_and_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
inclusive_or_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
exclusive_or_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |, |=, ||, }
and_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
equality_exp: 	%=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
relational_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, ==, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
shift_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<=, <=, =, ==, >, >=, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
additive_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
multiplicative_exp: 	!=, %=, &, &&, &=, (, ), *=, +, +=, ,, -, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
cast_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
unary_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
postfix_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
primary_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
constant: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
unary_operator: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
COMMENT: 		, 
, , , ,  , __COMMENT
INT_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
FLOAT_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
XDIGIT: 	__XDIGIT, x
DIGIT: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, __DIGIT, case, do, else, return, sizeof, {, |, |=, ||, }, ~
CHAR_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
STRING: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ESC_CHAR: 	
ENUMERATION_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ID: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, ->, ., /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ], ^, ^=, __ID, auto, case, char, const, do, double, else, enum, extern, float, goto, int, long, register, return, short, signed, sizeof, static, struct, typedef, union, unsigned, void, volatile, {, |, |=, ||, }, ~
KEYWORDS: 	
SPACE: 	
SKIP: 	
calcPrefix
decl	 -> 
	(decl, external_decl): 	;, }
	(decl, compound_stat): 	;, {
	(decl, function_def): 	), ;, ], __ID
	(decl, decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__static	 -> 
	(__static, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
logical_or_exp	 -> 
	(logical_or_exp, conditional_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
	(logical_or_exp, conditional_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
type_spec	 -> 
	(type_spec, spec_qualifier_list): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_spec, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(type_spec, spec_qualifier): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__for	 -> 
	(__for, stat): 	), :, ;, do, else, {, }
struct_or_union	 -> 
	(struct_or_union, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(struct_or_union, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__auto	 -> 
	(__auto, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__const	 -> 
	(__const, type_qualifier): 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__/=	 -> 
	(__/=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__||	 -> 
	(__||, logical_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__do	 -> 
	(__do, stat): 	), :, ;, do, else, {, }
type_qualifier	 -> 
	(type_qualifier, pointer): 	*, const, volatile
	(type_qualifier, spec_qualifier): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_qualifier, pointer): 	*, const, volatile
	(type_qualifier, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(type_qualifier, spec_qualifier_list): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
init_declarator	 -> 
	(init_declarator, init_declarator_list): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(init_declarator, init_declarator_list): 	,
exclusive_or_exp	 -> 
	(exclusive_or_exp, inclusive_or_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
	(exclusive_or_exp, inclusive_or_exp): 	|
__else	 -> 
	(__else, stat): 	;, }
primary_exp	 -> 
	(primary_exp, postfix_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__*=	 -> 
	(__*=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__enum	 -> 
	(__enum, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(__enum, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
conditional_exp	 -> 
	(conditional_exp, assignment_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
	(conditional_exp, conditional_exp): 	:
	(conditional_exp, const_exp): 	:, =, [, case
direct_declarator	 -> 
	(direct_declarator, declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__goto	 -> 
	(__goto, stat): 	), :, ;, do, else, {, }
__if	 -> 
	(__if, stat): 	), :, ;, do, else, {, }
	(__if, stat): 	), :, ;, do, else, {, }
__long	 -> 
	(__long, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__++	 -> 
	(__++, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__++, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
__char	 -> 
	(__char, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__struct	 -> 
	(__struct, struct_or_union): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__->	 -> 
	(__->, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
__&	 -> 
	(__&, and_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__&, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
spec_qualifier_list	 -> 
	(spec_qualifier_list, type_name): 	(, sizeof
__~	 -> 
	(__~, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__>>	 -> 
	(__>>, shift_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__]	 -> 
	(__], direct_abstract_declarator): 	), *, ++, --, [, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__], postfix_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__], direct_declarator): 	), *, ++, --, [, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__case	 -> 
	(__case, stat): 	), :, ;, do, else, {, }
logical_and_exp	 -> 
	(logical_and_exp, logical_or_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
	(logical_and_exp, logical_or_exp): 	||
stat	 -> 
	(stat, stat): 	:
	(stat, stat): 	:
	(stat, compound_stat): 	;, {, }
	(stat, stat): 	)
	(stat, stat): 	else
	(stat, stat): 	)
	(stat, stat): 	)
	(stat, stat): 	do
	(stat, stat): 	)
	(stat, stat): 	)
	(stat, stat): 	:
abstract_declarator	 -> 
	(abstract_declarator, type_name): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(abstract_declarator, direct_abstract_declarator): 	(
	(abstract_declarator, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
function_def	 -> 
	(function_def, external_decl): 	;, }
	(function_def, function_def): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__union	 -> 
	(__union, struct_or_union): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
initializer	 -> 
	(initializer, initializer): 	,
	(initializer, initializer): 	{
	(initializer, init_declarator): 	=
__&=	 -> 
	(__&=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
direct_abstract_declarator	 -> 
	(direct_abstract_declarator, abstract_declarator): 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__...	 -> 
	(__..., param_type_list): 	,
const_exp	 -> 
	(const_exp, direct_abstract_declarator): 	[
	(const_exp, direct_declarator): 	[
	(const_exp, struct_declarator): 	:
	(const_exp, stat): 	case
	(const_exp, enumerator): 	=
__<<=	 -> 
	(__<<=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__double	 -> 
	(__double, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__{	 -> 
	(__{, compound_stat): 	), :, ;, ], __ID, do, else, {, }
	(__{, type_spec): 	__ID, struct, union
	(__{, type_spec): 	__ID, enum
	(__{, initializer): 	,, =, {
__void	 -> 
	(__void, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__=	 -> 
	(__=, init_declarator): 	), ], __ID
	(__=, enumerator): 	__ID
	(__=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
storage_class_spec	 -> 
	(storage_class_spec, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__<=	 -> 
	(__<=, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
equality_exp	 -> 
	(equality_exp, and_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(equality_exp, and_exp): 	&
shift_exp	 -> 
	(shift_exp, relational_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, ==, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(shift_exp, relational_exp): 	<, <=, >, >=
__,	 -> 
	(__,, init_declarator_list): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, struct_decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, type_spec): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, param_type_list): 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__,, initializer): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, initializer): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, postfix_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, id_list): 	__ID
	(__,, exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, param_type_list): 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__typedef	 -> 
	(__typedef, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__--	 -> 
	(__--, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__--, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
init_declarator_list	 -> 
	(init_declarator_list, decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__int	 -> 
	(__int, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__!=	 -> 
	(__!=, equality_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__&&	 -> 
	(__&&, logical_and_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__%=	 -> 
	(__%=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator	 -> 
	(enumerator, type_spec): 	{
	(enumerator, type_spec): 	,
pointer	 -> 
	(pointer, declarator): 	(, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(pointer, pointer): 	*, const, volatile
	(pointer, abstract_declarator): 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(pointer, abstract_declarator): 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__extern	 -> 
	(__extern, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__*	 -> 
	(__*, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__*, pointer): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__*, pointer): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__*, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
cast_exp	 -> 
	(cast_exp, multiplicative_exp): 	!=, %=, &, &&, &=, (, ), *=, +, +=, ,, -, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(cast_exp, multiplicative_exp): 	%, *, /
	(cast_exp, unary_exp): 	!, &, *, +, -, ~
	(cast_exp, cast_exp): 	)
assignment_operator	 -> 
	(assignment_operator, assignment_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__>>=	 -> 
	(__>>=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__float	 -> 
	(__float, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
multiplicative_exp	 -> 
	(multiplicative_exp, additive_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(multiplicative_exp, additive_exp): 	+, -
postfix_exp	 -> 
	(postfix_exp, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__-=	 -> 
	(__-=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__default	 -> 
	(__default, stat): 	), :, ;, do, else, {, }
__^=	 -> 
	(__^=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
additive_exp	 -> 
	(additive_exp, shift_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<=, <=, =, ==, >, >=, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(additive_exp, shift_exp): 	<<, >>
SKIP	 -> 
	(SKIP, translation_unit): 	
id_list	 -> 
	(id_list, direct_declarator): 	(
__(	 -> 
	(__(, direct_declarator): 	), ], __ID
	(__(, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__(, stat): 	while
	(__(, stat): 	if
	(__(, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
	(__(, stat): 	if
	(__(, stat): 	for
	(__(, cast_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
	(__(, stat): 	while
	(__(, direct_abstract_declarator): 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__(, direct_declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__(, direct_abstract_declarator): 	), ]
	(__(, direct_declarator): 	), ], __ID
	(__(, stat): 	switch
__unsigned	 -> 
	(__unsigned, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
struct_declarator	 -> 
	(struct_declarator, struct_decl): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(struct_declarator, struct_decl): 	,
__+	 -> 
	(__+, additive_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__+, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__>	 -> 
	(__>, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__;	 -> 
	(__;, struct_decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, stat): 	), *, ++, --, :, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, do, double, else, float, int, long, short, signed, unsigned, void, volatile, {, }
	(__;, stat): 	(, ), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, stat): 	), *, ++, --, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, return, short, signed, unsigned, void, volatile, }
	(__;, decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__;, stat): 	continue
	(__;, stat): 	break
	(__;, stat): 	__ID
	(__;, stat): 	)
__?	 -> 
	(__?, conditional_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__-	 -> 
	(__-, additive_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__-, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__!	 -> 
	(__!, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ENUMERATION_CONST	 -> 
	(ENUMERATION_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__switch	 -> 
	(__switch, stat): 	), :, ;, do, else, {, }
FLOAT_CONST	 -> 
	(FLOAT_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__/	 -> 
	(__/, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier	 -> 
	(spec_qualifier, struct_decl): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(spec_qualifier, struct_decl): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__continue	 -> 
	(__continue, stat): 	), :, ;, do, else, {, }
__|	 -> 
	(__|, inclusive_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
INT_CONST	 -> 
	(INT_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
constant	 -> 
	(constant, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
param_decl	 -> 
	(param_decl, param_type_list): 	(
	(param_decl, param_type_list): 	,
__register	 -> 
	(__register, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
STRING	 -> 
	(STRING, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__)	 -> 
	(__), postfix_exp): 	(, ), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	(, __ID
	(__), primary_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	), ], __ID
	(__), direct_declarator): 	), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_abstract_declarator): 	), *, ], const, volatile
	(__), stat): 	), *, ++, --, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), cast_exp): 	), *, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_abstract_declarator): 	(, ), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_type_list	 -> 
	(param_type_list, direct_declarator): 	(
	(param_type_list, direct_abstract_declarator): 	(
translation_unit	 -> 
compound_stat	 -> 
	(compound_stat, function_def): 	), ;, ], __ID
	(compound_stat, stat): 	), :, ;, do, else, {, }
exp	 -> 
	(exp, stat): 	(
	(exp, stat): 	return
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, stat): 	), :, ;, do, else, {, }
	(exp, stat): 	(
	(exp, conditional_exp): 	?
	(exp, postfix_exp): 	[
	(exp, stat): 	;
	(exp, stat): 	;
	(exp, primary_exp): 	(
	(exp, stat): 	(
__==	 -> 
	(__==, equality_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__.	 -> 
	(__., postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
assignment_exp	 -> 
	(assignment_exp, initializer): 	,, =, {
	(assignment_exp, exp): 	(, ), :, ;, ?, [, do, else, return, {, }
	(assignment_exp, postfix_exp): 	,
	(assignment_exp, postfix_exp): 	(
	(assignment_exp, assignment_exp): 	%=, &=, *=, +=, -=, /=, <<=, =, >>=, ^=, |=
	(assignment_exp, exp): 	,
__|=	 -> 
	(__|=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
typedef_name	 -> 
	(typedef_name, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__break	 -> 
	(__break, stat): 	), :, ;, do, else, {, }
__short	 -> 
	(__short, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__sizeof	 -> 
	(__sizeof, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
declarator	 -> 
	(declarator, direct_declarator): 	(
	(declarator, init_declarator): 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, struct_declarator): 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(declarator, init_declarator): 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, function_def): 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, struct_declarator): 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_operator	 -> 
	(unary_operator, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__[	 -> 
	(__[, direct_declarator): 	), ], __ID
	(__[, direct_abstract_declarator): 	), ]
	(__[, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
type_name	 -> 
	(type_name, cast_exp): 	(
	(type_name, unary_exp): 	sizeof
__%	 -> 
	(__%, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__+=	 -> 
	(__+=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__while	 -> 
	(__while, stat): 	), :, ;, do, else, {, }
	(__while, stat): 	;, }
__<	 -> 
	(__<, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__volatile	 -> 
	(__volatile, type_qualifier): 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
inclusive_or_exp	 -> 
	(inclusive_or_exp, logical_and_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
	(inclusive_or_exp, logical_and_exp): 	&&
__<<	 -> 
	(__<<, shift_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__>=	 -> 
	(__>=, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__return	 -> 
	(__return, stat): 	), :, ;, do, else, {, }
decl_spec	 -> 
	(decl_spec, decl): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(decl_spec, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(decl_spec, function_def): 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(decl_spec, decl): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
relational_exp	 -> 
	(relational_exp, equality_exp): 	%=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(relational_exp, equality_exp): 	!=, ==
__}	 -> 
	(__}, type_spec): 	;
	(__}, compound_stat): 	;, {, }
	(__}, initializer): 	), *, ++, ,, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__}, type_spec): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
and_exp	 -> 
	(and_exp, exclusive_or_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |, |=, ||, }
	(and_exp, exclusive_or_exp): 	^
__^	 -> 
	(__^, exclusive_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_exp	 -> 
	(unary_exp, unary_exp): 	++
	(unary_exp, cast_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
	(unary_exp, assignment_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
	(unary_exp, unary_exp): 	sizeof
	(unary_exp, unary_exp): 	--
__:	 -> 
	(__:, struct_declarator): 	), ,, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, conditional_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, stat): 	__ID
	(__:, stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, stat): 	default
__signed	 -> 
	(__signed, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
ID	 -> 
	(ID, postfix_exp): 	.
	(ID, id_list): 	,
	(ID, enumerator): 	,, {
	(ID, type_spec): 	enum
	(ID, postfix_exp): 	->
	(ID, direct_declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(ID, stat): 	goto
	(ID, enumerator): 	,, {
	(ID, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(ID, type_spec): 	struct, union
	(ID, stat): 	), :, ;, do, else, {, }
	(ID, typedef_name): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(ID, type_spec): 	struct, union
	(ID, type_spec): 	enum
	(ID, id_list): 	(
CHAR_CONST	 -> 
	(CHAR_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
external_decl	 -> 
	(external_decl, translation_unit): 	;, }
struct_decl	 -> 
	(struct_decl, type_spec): 	;
	(struct_decl, struct_decl): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
isPrefixUniqueFlw s = 	SKIP	translation_unit
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	(	table: 0x560723b57d90	primary_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	pointer	table: 0x560723fb11c0	declarator
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	*	table: 0x560723e309a0	unary_operator
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	decl_spec	table: 0x560723d3b9d0	decl
teve colisao
Nao foi sub	table: 0x560723c0f000	decl_spec	param_decl
Nao foi sub	table: 0x560723e0b8d0	stat	compound_stat
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
foi uniqueEq	storage_class_spec	decl_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; auto ; int ; ] ; { ; float ; unsigned ; char ; } ; extern ; const ; double ; long ; ; ; 
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
Nao foi sub	table: 0x560723de4010	type_qualifier	pointer
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	exp	table: 0x560723f3a240	stat
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	declarator	table: 0x560723dbc250	function_def
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	stat	table: 0x560723cd7150	stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723b7f210	stat
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	decl	table: 0x560723baccc0	decl
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723cba810	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	{	table: 0x560723cbae30	type_spec
teve colisao
Nao foi sub	table: 0x560723e49dd0	decl	compound_stat
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723e7ca90	type_spec
teve colisao
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	decl	table: 0x560723baccc0	decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723f601f0	external_decl
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	{	table: 0x560723e7cd80	type_spec
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	decl	table: 0x560723baccc0	decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723f601f0	external_decl
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	exp	table: 0x560723f3a240	stat
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	direct_declarator	table: 0x560723d80640	declarator
teve colisao
Nao foi sub	table: 0x560723e515c0	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
colide flw	=	table: 0x560723e515c0	assignment_operator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	:	table: 0x560723f39740	stat
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exp	table: 0x560723f3a240	stat
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	decl_spec	table: 0x560723d3b9d0	decl
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d3bcc0	;	decl
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723de4630	type_qualifier	pointer
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723de4630	type_qualifier	pointer
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723fa4080	:	conditional_exp
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	:	table: 0x560723f39740	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723eb4430	ID	stat
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723fb1a90	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723e515c0	assignment_operator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723cd0900	stat
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723b21ad0	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x560723e85e40	direct_abstract_declarator
colide flw	[	table: 0x560723b21ad0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	*	table: 0x560723de4520	pointer
colide flw	*	table: 0x560723e309a0	unary_operator
teve colisao
Nao foi sub	table: 0x560723dbca90	function_def	function_def
Nao foi sub	table: 0x560723fb80d0	pointer	abstract_declarator
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	*	table: 0x560723de3f00	pointer
colide flw	*	table: 0x560723e309a0	unary_operator
teve colisao
Nao foi sub	table: 0x560723dbca90	function_def	function_def
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	param_type_list
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d80af0	ID	direct_declarator
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723d80af0	ID	direct_declarator
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x560723e49cc0	compound_stat
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	compound_stat	table: 0x560723cd0620	stat
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d42550	,	param_type_list
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_name	table: 0x560723d44260	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723c8b900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	exp	table: 0x560723cd6f30	stat
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x560723d2c3b0	postfix_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2f910	primary_exp
teve colisao
Nao foi sub	table: 0x560723d813c0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x560723d813c0	direct_declarator
colide flw	[	table: 0x560723b21ad0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723eb4430	ID	stat
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723fa4080	:	conditional_exp
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723cd63a0	struct_declarator
colide flw	:	table: 0x560723f39740	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	__case	stat
isPrefixUniqueFlw s = 	const_exp	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723cd63a0	:	struct_declarator
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723cd63a0	struct_declarator
colide flw	:	table: 0x560723eb4540	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	__default	stat
isPrefixUniqueFlw s = 	__:	stat
Nao foi sub	table: 0x560723c0f000	decl_spec	param_decl
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723bc4d40	{	initializer
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560723b7edd0	stat
teve colisao
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723b7eee0	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
isPrefixUniqueFlw s = 	stat	stat
colide flw	;	table: 0x560723f28b80	stat
colide flw	stat	table: 0x560723cd7150	stat
colide flw	stat	table: 0x560723e2b180	stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	;	table: 0x560723c8bb20	stat
colide flw	compound_stat	table: 0x560723cd0620	stat
colide flw	stat	table: 0x560723b7f210	stat
teve colisao
isPrefixUniqueFlw s = 	__else	stat
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560723cd0770	stat
teve colisao
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723cd07f0	stat
teve colisao
isPrefixUniqueFlw s = 	exp	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
isPrefixUniqueFlw s = 	__switch	stat
isPrefixUniqueFlw s = 	__(	stat
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560723c8b6e0	stat
teve colisao
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723c8b7f0	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
isPrefixUniqueFlw s = 	__do	stat
isPrefixUniqueFlw s = 	stat	stat
colide flw	compound_stat	table: 0x560723cd0620	stat
teve colisao
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560723cd7640	stat
teve colisao
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723cd7750	stat
teve colisao
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723e2f910	primary_exp
teve colisao
Nao foi sub	table: 0x560723d97580	;	struct_decl
isPrefixUniqueFlw s = 	__for	stat
isPrefixUniqueFlw s = 	__(	stat
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d3bcc0	;	decl
isPrefixUniqueFlw s = 	__;	stat
colide flw	;	table: 0x560723d97580	struct_decl
colide flw	;	table: 0x560723d3bcc0	decl
colide flw	;	table: 0x560723f27f00	stat
colide flw	;	table: 0x560723c8bb20	stat
colide flw	;	table: 0x560723e2ad80	stat
colide flw	;	table: 0x560723cd0400	stat
colide flw	;	table: 0x560723f28b80	stat
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723d3bcc0	;	decl
isPrefixUniqueFlw s = 	__;	stat
colide flw	;	table: 0x560723d97580	struct_decl
colide flw	;	table: 0x560723e2aa90	stat
colide flw	;	table: 0x560723d3bcc0	decl
colide flw	;	table: 0x560723c8bb20	stat
colide flw	;	table: 0x560723f27f00	stat
colide flw	;	table: 0x560723cd0400	stat
colide flw	;	table: 0x560723f28b80	stat
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
isPrefixUniqueFlw s = 	__goto	stat
isPrefixUniqueFlw s = 	ID	stat
isPrefixUniqueFlw s = 	__continue	stat
isPrefixUniqueFlw s = 	__break	stat
isPrefixUniqueFlw s = 	__return	stat
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723e2ad80	;	stat
Nao foi sub	table: 0x560723cd0400	;	stat
Nao foi sub	table: 0x560723d3bcc0	;	decl
Nao foi sub	table: 0x560723cbae30	{	type_spec
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x560723cbae30	type_spec
colide flw	{	table: 0x560723e7cd80	type_spec
colide flw	{	table: 0x560723bc4d40	initializer
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723f28b80	;	stat
Nao foi sub	table: 0x560723fb7520	}	initializer
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd0900	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723f7dbf0	initializer
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	declarator	table: 0x560723fb1980	init_declarator
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	logical_or_exp	conditional_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	*	table: 0x560723de4520	pointer
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
teve colisao
isPrefixUniqueFlw s = 	__?	conditional_exp
isPrefixUniqueFlw s = 	exp	conditional_exp
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723cd63a0	:	struct_declarator
isPrefixUniqueFlw s = 	__:	conditional_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	:	table: 0x560723f39740	stat
colide flw	:	table: 0x560723cd63a0	struct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	stat	table: 0x560723eb4650	stat
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
isPrefixUniqueFlw s = 	__||	logical_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723f3a240	stat
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
isPrefixUniqueFlw s = 	__&&	logical_and_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
isPrefixUniqueFlw s = 	__|	inclusive_or_exp
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd7860	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
isPrefixUniqueFlw s = 	__^	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723e30800	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x560723e30800	unary_operator
teve colisao
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	stat	table: 0x560723eb4650	stat
colide flw	exp	table: 0x560723cd0900	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723fc04e0	unary_exp	cast_exp
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723fbcf50	+	unary_operator
Nao foi sub	table: 0x560723fbd0a0	-	unary_operator
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723fc04e0	unary_exp	cast_exp
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	*	table: 0x560723de3f00	pointer
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	exp	table: 0x560723f3a240	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723de4520	*	pointer
Nao foi sub	table: 0x560724016340	-	additive_exp
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
Nao foi sub	table: 0x560723e54320	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x560723e54320	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e54470	--	postfix_exp
Nao foi sub	table: 0x560723e54470	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x560723e54470	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e54470	--	postfix_exp
Nao foi sub	table: 0x5607240161a0	+	additive_exp
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	cast_exp	table: 0x560723fef900	multiplicative_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	*	table: 0x560723de3f00	pointer
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	-	table: 0x560724016340	additive_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	unary_exp	table: 0x560723fc08c0	unary_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	pointer	table: 0x560723c118a0	abstract_declarator
colide flw	unary_exp	table: 0x560723d43b70	unary_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	stat	table: 0x560723f39850	stat
colide flw	pointer	table: 0x560723fb11c0	declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
teve colisao
Nao foi sub	table: 0x560723cd02d0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	__sizeof	unary_exp
Nao foi sub	table: 0x560723d447c0	postfix_exp	unary_exp
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	unary_exp	table: 0x560723d43b70	unary_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	declarator	table: 0x560723fb1980	init_declarator
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	type_name	table: 0x560723d44260	unary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	unary_exp	table: 0x560723fc08c0	unary_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	cast_exp	table: 0x560723fef900	multiplicative_exp
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x560723d813c0	direct_declarator
colide flw	[	table: 0x560723e85e40	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723e86130	]	direct_abstract_declarator
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723eb39e0	)	direct_abstract_declarator
isPrefixUniqueFlw s = 	__.	postfix_exp
isPrefixUniqueFlw s = 	__->	postfix_exp
Nao foi sub	table: 0x560723fc07b0	++	unary_exp
Nao foi sub	table: 0x560723afc9a0	--	unary_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
foi uniqueEq	constant	primary_exp
return ; >= ; == ; <= ; ) ; * ; + ; , ; % ; & ; && ; ( ; ! ; /= ; ^ ; -= ; <<= ; || ; [ ; >> ; ++ ; << ; -- ; case ; >>= ; &= ; %= ; += ; *= ; != ; else ; } ; ~ ; ? ; / ; { ; : ; ; ; < ; = ; sizeof ; - ; ^= ; do ; | ; > ; |= ; 
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
Nao foi sub	table: 0x560723c7cc70	&	and_exp
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
Nao foi sub	table: 0x5607240161a0	+	additive_exp
Nao foi sub	table: 0x560724016340	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
upathEq	enum
upathEq	struct_or_union
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	(	table: 0x560723b57d90	primary_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	pointer	table: 0x560723fb11c0	declarator
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	*	table: 0x560723e309a0	unary_operator
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	decl_spec	table: 0x560723d3b9d0	decl
teve colisao
Nao foi sub	table: 0x560723c0f000	decl_spec	param_decl
Nao foi sub	table: 0x560723e0b8d0	stat	compound_stat
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
foi uniqueEq	storage_class_spec	decl_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; auto ; int ; ] ; { ; float ; unsigned ; char ; } ; extern ; const ; double ; long ; ; ; 
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
Nao foi sub	table: 0x560723de4010	type_qualifier	pointer
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	exp	table: 0x560723f3a240	stat
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	declarator	table: 0x560723dbc250	function_def
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	stat	table: 0x560723cd7150	stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723b7f210	stat
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	decl	table: 0x560723baccc0	decl
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723cba810	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	{	table: 0x560723cbae30	type_spec
teve colisao
Nao foi sub	table: 0x560723e49dd0	decl	compound_stat
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	decl	table: 0x560723baccc0	decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723f601f0	external_decl
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	{	table: 0x560723e7cd80	type_spec
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	exp	table: 0x560723f3a240	stat
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	direct_declarator	table: 0x560723d80640	declarator
teve colisao
Nao foi sub	table: 0x560723e515c0	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
colide flw	=	table: 0x560723e515c0	assignment_operator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	:	table: 0x560723f39740	stat
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exp	table: 0x560723f3a240	stat
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	decl_spec	table: 0x560723d3b9d0	decl
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d3bcc0	;	decl
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723de4630	type_qualifier	pointer
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723de4630	type_qualifier	pointer
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723fa4080	:	conditional_exp
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	:	table: 0x560723f39740	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723eb4430	ID	stat
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723fb1a90	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723e515c0	assignment_operator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723cd0900	stat
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723b21ad0	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x560723e85e40	direct_abstract_declarator
colide flw	[	table: 0x560723b21ad0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	*	table: 0x560723de4520	pointer
colide flw	*	table: 0x560723e309a0	unary_operator
teve colisao
Nao foi sub	table: 0x560723dbca90	function_def	function_def
Nao foi sub	table: 0x560723fb80d0	pointer	abstract_declarator
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	*	table: 0x560723de3f00	pointer
colide flw	*	table: 0x560723e309a0	unary_operator
teve colisao
Nao foi sub	table: 0x560723dbca90	function_def	function_def
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d80af0	ID	direct_declarator
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723d80af0	ID	direct_declarator
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x560723e49cc0	compound_stat
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	compound_stat	table: 0x560723cd0620	stat
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d42550	,	param_type_list
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_name	table: 0x560723d44260	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723c8b900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	exp	table: 0x560723cd6f30	stat
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x560723d2c3b0	postfix_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2f910	primary_exp
teve colisao
Nao foi sub	table: 0x560723d813c0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x560723d813c0	direct_declarator
colide flw	[	table: 0x560723b21ad0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723eb4430	ID	stat
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723fa4080	:	conditional_exp
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723cd63a0	struct_declarator
colide flw	:	table: 0x560723f39740	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c0f000	decl_spec	param_decl
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723bc4d40	{	initializer
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560723b7edd0	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__if	table: 0x560723cd07f0	table: 0x560723cd0770
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723b7eee0	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560723cd0900	table: 0x560723cd07f0
if ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560723c8b6e0	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__while	table: 0x560723cd7750	table: 0x560723cd7640
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723c8b7f0	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560723cd7860	table: 0x560723cd7750
while ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
Nao foi sub	table: 0x560723cbae30	{	type_spec
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x560723cbae30	type_spec
colide flw	{	table: 0x560723e7cd80	type_spec
colide flw	{	table: 0x560723bc4d40	initializer
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723f28b80	;	stat
Nao foi sub	table: 0x560723fb7520	}	initializer
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd0900	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723f7dbf0	initializer
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	declarator	table: 0x560723fb1980	init_declarator
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
teve colisao
previousEq: 	assignment_exp	, rule: 	assignment_exp	, prev: 	assignment_operator	table: 0x560723e0c8e0	table: 0x560723e0c7d0
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	stat	table: 0x560723eb4650	stat
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723f3a240	stat
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd7860	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723e30800	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x560723e30800	unary_operator
teve colisao
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	stat	table: 0x560723eb4650	stat
colide flw	exp	table: 0x560723cd0900	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723fc04e0	unary_exp	cast_exp
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723fbcf50	+	unary_operator
Nao foi sub	table: 0x560723fbd0a0	-	unary_operator
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723fc04e0	unary_exp	cast_exp
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	*	table: 0x560723de3f00	pointer
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	exp	table: 0x560723f3a240	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723de4520	*	pointer
Nao foi sub	table: 0x560724016340	-	additive_exp
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
Nao foi sub	table: 0x560723e54320	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x560723e54320	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e54470	--	postfix_exp
Nao foi sub	table: 0x560723e54470	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x560723e54470	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e54470	--	postfix_exp
Nao foi sub	table: 0x5607240161a0	+	additive_exp
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	cast_exp	table: 0x560723fef900	multiplicative_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	*	table: 0x560723de3f00	pointer
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	-	table: 0x560724016340	additive_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	unary_exp	table: 0x560723fc08c0	unary_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	pointer	table: 0x560723c118a0	abstract_declarator
colide flw	unary_exp	table: 0x560723d43b70	unary_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	stat	table: 0x560723f39850	stat
colide flw	pointer	table: 0x560723fb11c0	declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
teve colisao
Nao foi sub	table: 0x560723cd02d0	additive_exp	shift_exp
Nao foi sub	table: 0x560723d447c0	postfix_exp	unary_exp
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	unary_exp	table: 0x560723d43b70	unary_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	declarator	table: 0x560723fb1980	init_declarator
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	type_name	table: 0x560723d44260	unary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	unary_exp	table: 0x560723fc08c0	unary_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	cast_exp	table: 0x560723fef900	multiplicative_exp
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x560723d813c0	direct_declarator
colide flw	[	table: 0x560723e85e40	direct_abstract_declarator
teve colisao
previousEq: 	exp	, rule: 	postfix_exp	, prev: 	__[	table: 0x560723d2b590	table: 0x560723b21ad0
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723e86130	]	direct_abstract_declarator
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723eb39e0	)	direct_abstract_declarator
Nao foi sub	table: 0x560723fc07b0	++	unary_exp
Nao foi sub	table: 0x560723afc9a0	--	unary_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
foi uniqueEq	constant	primary_exp
return ; >= ; == ; <= ; ) ; * ; + ; , ; % ; & ; && ; ( ; ! ; /= ; ^ ; -= ; <<= ; || ; [ ; >> ; ++ ; << ; -- ; case ; >>= ; &= ; %= ; += ; *= ; != ; else ; } ; ~ ; ? ; / ; { ; : ; ; ; < ; = ; sizeof ; - ; ^= ; do ; | ; > ; |= ; 
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
Nao foi sub	table: 0x560723c7cc70	&	and_exp
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
Nao foi sub	table: 0x5607240161a0	+	additive_exp
Nao foi sub	table: 0x560724016340	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
unique var2 	storage_class_spec
upathEq	enum
upathEq	struct_or_union
Vai ser agora	struct_or_union	type_spec
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
unique var2 	constant
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	(	table: 0x560723b57d90	primary_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	pointer	table: 0x560723fb11c0	declarator
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	*	table: 0x560723e309a0	unary_operator
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	decl_spec	table: 0x560723d3b9d0	decl
teve colisao
Nao foi sub	table: 0x560723c0f000	decl_spec	param_decl
Nao foi sub	table: 0x560723e0b8d0	stat	compound_stat
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
Nao foi sub	table: 0x560723de4010	type_qualifier	pointer
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	exp	table: 0x560723f3a240	stat
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	declarator	table: 0x560723dbc250	function_def
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	stat	table: 0x560723cd7150	stat
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723b7f210	stat
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	storage_class_spec	table: 0x560723b64a70	decl_spec
colide flw	decl	table: 0x560723baccc0	decl
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723cba810	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	{	table: 0x560723cbae30	type_spec
teve colisao
Nao foi sub	table: 0x560723e49dd0	decl	compound_stat
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	decl	table: 0x560723baccc0	decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	decl	table: 0x560723f601f0	external_decl
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	{	table: 0x560723e7cd80	type_spec
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	exp	table: 0x560723f3a240	stat
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	direct_declarator	table: 0x560723d80640	declarator
teve colisao
Nao foi sub	table: 0x560723e515c0	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
colide flw	=	table: 0x560723e515c0	assignment_operator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier	table: 0x560723d97990	struct_decl
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
teve colisao
Nao foi sub	table: 0x560723b57d90	(	primary_exp
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	:	table: 0x560723f39740	stat
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	decl	table: 0x560723baccc0	decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exp	table: 0x560723f3a240	stat
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	decl_spec	table: 0x560723d3b9d0	decl
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d3bcc0	;	decl
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	decl_spec	table: 0x560723d3bff0	decl
colide flw	type_qualifier	table: 0x560723de4630	pointer
colide flw	type_qualifier	table: 0x560723cd5f20	spec_qualifier
colide flw	type_qualifier	table: 0x560723d3b620	decl_spec
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	type_qualifier	table: 0x560723de4010	pointer
colide flw	decl	table: 0x560723dbc360	function_def
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723d8c030	type_spec
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	decl	table: 0x560723baccc0	decl
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	type_qualifier	table: 0x560723cd59a0	spec_qualifier_list
colide flw	struct_or_union	table: 0x560723cbab40	type_spec
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723de4630	type_qualifier	pointer
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723de4630	type_qualifier	pointer
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723fa4080	:	conditional_exp
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723eb4540	stat
colide flw	:	table: 0x560723f39740	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723eb4430	ID	stat
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723fb1a90	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723e515c0	assignment_operator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723cd0900	stat
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723b21ad0	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x560723e85e40	direct_abstract_declarator
colide flw	[	table: 0x560723b21ad0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	*	table: 0x560723de4520	pointer
colide flw	*	table: 0x560723e309a0	unary_operator
teve colisao
Nao foi sub	table: 0x560723dbca90	function_def	function_def
Nao foi sub	table: 0x560723fb80d0	pointer	abstract_declarator
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	*	table: 0x560723de3f00	pointer
colide flw	*	table: 0x560723e309a0	unary_operator
teve colisao
Nao foi sub	table: 0x560723dbca90	function_def	function_def
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723b57d90	(	primary_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d80af0	ID	direct_declarator
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723ff4240	,	init_declarator_list
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723d80af0	ID	direct_declarator
Nao foi sub	table: 0x560723e49cc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x560723e49cc0	compound_stat
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	compound_stat	table: 0x560723cd0620	stat
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	{	table: 0x560723e49cc0	compound_stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723d42550	,	param_type_list
Nao foi sub	table: 0x560723e0bab0	}	compound_stat
Nao foi sub	table: 0x560723c7cb30	equality_exp	and_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	type_name	table: 0x560723d44260	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723c8b900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	exp	table: 0x560723cd6f30	stat
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x560723d2c3b0	postfix_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2f910	primary_exp
teve colisao
Nao foi sub	table: 0x560723d813c0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x560723d813c0	direct_declarator
colide flw	[	table: 0x560723b21ad0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723fbfda0	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723e2f910	)	primary_exp
Nao foi sub	table: 0x560723eb4430	ID	stat
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723e54ce0	primary_exp
teve colisao
Nao foi sub	table: 0x560723fa4080	:	conditional_exp
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560723fa4080	conditional_exp
colide flw	:	table: 0x560723cd63a0	struct_declarator
colide flw	:	table: 0x560723f39740	stat
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723c0f000	decl_spec	param_decl
Nao foi sub	table: 0x560723e2aa90	;	stat
Nao foi sub	table: 0x560723bc4d40	{	initializer
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560723b7edd0	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__if	table: 0x560723cd07f0	table: 0x560723cd0770
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723b7eee0	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560723cd0900	table: 0x560723cd07f0
if ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560723c8b6e0	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__while	table: 0x560723cd7750	table: 0x560723cd7640
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560723c8b7f0	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560723cd7860	table: 0x560723cd7750
while ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2c880	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723c8ba10	stat
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723fbffc0	cast_exp
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723f28b80	;	stat
Nao foi sub	table: 0x560723cbae30	{	type_spec
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x560723cbae30	type_spec
colide flw	{	table: 0x560723e7cd80	type_spec
colide flw	{	table: 0x560723bc4d40	initializer
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723f28b80	;	stat
Nao foi sub	table: 0x560723fb7520	}	initializer
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd0900	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723f7dbf0	initializer
colide flw	,	table: 0x560723d2bcd0	postfix_exp
colide flw	,	table: 0x560723fc1cc0	id_list
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	declarator	table: 0x560723fb1980	init_declarator
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
teve colisao
previousEq: 	assignment_exp	, rule: 	assignment_exp	, prev: 	assignment_operator	table: 0x560723e0c8e0	table: 0x560723e0c7d0
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x560723fb1a90	init_declarator
colide flw	=	table: 0x560723fb0ae0	enumerator
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	stat	table: 0x560723eb4650	stat
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723f3a240	stat
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	stat	table: 0x560723cd7a80	stat
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd7860	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	stat	table: 0x560723e2b180	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723e30800	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x560723e30800	unary_operator
teve colisao
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	stat	table: 0x560723eb4650	stat
colide flw	exp	table: 0x560723cd0900	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723cd0310	multiplicative_exp	additive_exp
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	stat	table: 0x560723e2b180	stat
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723fc04e0	unary_exp	cast_exp
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560723fbcf50	+	unary_operator
Nao foi sub	table: 0x560723fbd0a0	-	unary_operator
Nao foi sub	table: 0x560723d44cd0	primary_exp	postfix_exp
Nao foi sub	table: 0x560723fc04e0	unary_exp	cast_exp
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	exp	table: 0x560723d2b590	postfix_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	*	table: 0x560723de3f00	pointer
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	++	table: 0x560723e54320	postfix_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	--	table: 0x560723e54470	postfix_exp
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	unary_operator	table: 0x560723d43d90	unary_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	-	table: 0x560724016340	additive_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	exp	table: 0x560723f3a240	stat
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
teve colisao
Nao foi sub	table: 0x560723de4520	*	pointer
Nao foi sub	table: 0x560724016340	-	additive_exp
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	ID	table: 0x560723e54ce0	primary_exp
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723e2f910	)	primary_exp
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x560723e2f910	primary_exp
colide flw	)	table: 0x560723e2c880	direct_declarator
colide flw	)	table: 0x560723d80eb0	direct_declarator
colide flw	)	table: 0x560723eb39e0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7970	stat
colide flw	)	table: 0x560723e85ca0	direct_abstract_declarator
colide flw	)	table: 0x560723cd7040	stat
colide flw	)	table: 0x560723e2c260	direct_declarator
colide flw	)	table: 0x560723b7f100	stat
colide flw	)	table: 0x560723cd0a10	stat
colide flw	)	table: 0x560723e2b070	stat
colide flw	)	table: 0x560723d2c3b0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e7c940	typedef_name	type_spec
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
Nao foi sub	table: 0x560723e54320	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x560723e54320	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e54470	--	postfix_exp
Nao foi sub	table: 0x560723e54470	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x560723e54470	postfix_exp
teve colisao
Nao foi sub	table: 0x560723e54470	--	postfix_exp
Nao foi sub	table: 0x5607240161a0	+	additive_exp
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	+	table: 0x5607240161a0	additive_exp
colide flw	pointer	table: 0x560723de41f0	pointer
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	cast_exp	table: 0x560723fef900	multiplicative_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	*	table: 0x560723de3f00	pointer
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	-	table: 0x560724016340	additive_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	*	table: 0x560723de4520	pointer
colide flw	&	table: 0x560723c7cc70	and_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	unary_exp	table: 0x560723fc08c0	unary_exp
colide flw	*	table: 0x560723fef1d0	multiplicative_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	pointer	table: 0x560723c118a0	abstract_declarator
colide flw	unary_exp	table: 0x560723d43b70	unary_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	declarator	table: 0x560723dbc250	function_def
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	stat	table: 0x560723f39850	stat
colide flw	pointer	table: 0x560723fb11c0	declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
teve colisao
Nao foi sub	table: 0x560723cd02d0	additive_exp	shift_exp
Nao foi sub	table: 0x560723d447c0	postfix_exp	unary_exp
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
Nao foi sub	table: 0x560723e2c040	(	direct_declarator
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	stat	table: 0x560723f39850	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	decl	table: 0x560723f601f0	external_decl
colide flw	ID	table: 0x560723fc1dd0	id_list
colide flw	declarator	table: 0x560723cd61c0	struct_declarator
colide flw	typedef_name	table: 0x560723e7c940	type_spec
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	equality_exp	table: 0x560723c7cf60	and_exp
colide flw	type_spec	table: 0x560723cd5dd0	spec_qualifier
colide flw	init_declarator	table: 0x560723ff41c0	init_declarator_list
colide flw	assignment_exp	table: 0x560723e0c160	exp
colide flw	stat	table: 0x560723e2b180	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723f289a0	stat
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	exp	table: 0x560723e2ae90	stat
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	assignment_exp	table: 0x560723fb79b0	initializer
colide flw	ID	table: 0x560723fb0f20	enumerator
colide flw	exp	table: 0x560723e2aba0	stat
colide flw	declarator	table: 0x560723fb0730	struct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	function_def	table: 0x560723dbca90	function_def
colide flw	multiplicative_exp	table: 0x560723f7df60	additive_exp
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	exp	table: 0x560723e2a8b0	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	stat	table: 0x560723b7e7a0	stat
colide flw	enumerator	table: 0x560723e7ce90	type_spec
colide flw	decl	table: 0x560723baccc0	decl
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
colide flw	logical_and_exp	table: 0x560723d0ceb0	logical_or_exp
colide flw	decl	table: 0x560723e49dd0	compound_stat
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	initializer	table: 0x560723c11480	initializer
colide flw	struct_declarator	table: 0x560723a68130	struct_decl
colide flw	type_spec	table: 0x560723d3b4d0	decl_spec
colide flw	param_decl	table: 0x560723d42660	param_type_list
colide flw	struct_declarator	table: 0x560723d97210	struct_decl
colide flw	decl_spec	table: 0x560723d3b9d0	decl
colide flw	ID	table: 0x560723eb4430	stat
colide flw	initializer	table: 0x560723f7da90	initializer
colide flw	unary_exp	table: 0x560723e0c6c0	assignment_exp
colide flw	enumerator	table: 0x560723e7d0b0	type_spec
colide flw	stat	table: 0x560723e0b8d0	compound_stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	init_declarator_list	table: 0x560723d3bae0	decl
colide flw	assignment_exp	table: 0x560723d2bde0	postfix_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	type_spec	table: 0x560723cd5850	spec_qualifier_list
colide flw	inclusive_or_exp	table: 0x560723d0d5d0	logical_and_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	unary_exp	table: 0x560723d43b70	unary_exp
colide flw	stat	table: 0x560723eb4650	stat
colide flw	logical_or_exp	table: 0x560723fa3d50	conditional_exp
colide flw	assignment_exp	table: 0x560723e0c8e0	assignment_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	and_exp	table: 0x560723c7c600	exclusive_or_exp
colide flw	stat	table: 0x560723cd7150	stat
colide flw	external_decl	table: 0x560723cc9330	translation_unit
colide flw	init_declarator	table: 0x560723ff4350	init_declarator_list
colide flw	declarator	table: 0x560723fb1980	init_declarator
colide flw	function_def	table: 0x560723f600a0	external_decl
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	shift_exp	table: 0x560723ccfdd0	relational_exp
colide flw	relational_exp	table: 0x560723d05c70	equality_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	stat	table: 0x560723f39f10	stat
colide flw	struct_decl	table: 0x560723d97aa0	struct_decl
colide flw	exp	table: 0x560723cd7860	stat
colide flw	struct_decl	table: 0x560723cbaf40	type_spec
colide flw	abstract_declarator	table: 0x560723fc16b0	param_decl
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723fa3f70	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	type_name	table: 0x560723d44260	unary_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	exp	table: 0x560723f3a240	stat
colide flw	cast_exp	table: 0x560723d43ea0	unary_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	initializer	table: 0x560723fb1ba0	init_declarator
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	stat	table: 0x560723b7f210	stat
colide flw	additive_exp	table: 0x560723feebd0	shift_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	spec_qualifier	table: 0x560723fb21a0	struct_decl
colide flw	const_exp	table: 0x560723fb0bf0	enumerator
colide flw	decl_spec	table: 0x560723c0f000	param_decl
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exclusive_or_exp	table: 0x560723b739d0	inclusive_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	unary_exp	table: 0x560723fc08c0	unary_exp
colide flw	stat	table: 0x560723cd7a80	stat
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	unary_exp	table: 0x560723d443b0	unary_exp
colide flw	cast_exp	table: 0x560723fef900	multiplicative_exp
colide flw	decl_spec	table: 0x560723dbc870	function_def
colide flw	conditional_exp	table: 0x560723fa4190	conditional_exp
colide flw	cast_exp	table: 0x560723fc00d0	cast_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	exp	table: 0x560723c8b900	stat
colide flw	declarator	table: 0x560723fb1ed0	init_declarator
colide flw	declarator	table: 0x560723fc1560	param_decl
colide flw	ID	table: 0x560723eb4260	typedef_name
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	ID	table: 0x560723fb09d0	enumerator
colide flw	exp	table: 0x560723cd0900	stat
colide flw	const_exp	table: 0x560723f39630	stat
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	abstract_declarator	table: 0x560723fb7d60	type_name
colide flw	const_exp	table: 0x560723a990a0	struct_declarator
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	exp	table: 0x560723d2b590	postfix_exp
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x560723d813c0	direct_declarator
colide flw	[	table: 0x560723e85e40	direct_abstract_declarator
teve colisao
previousEq: 	exp	, rule: 	postfix_exp	, prev: 	__[	table: 0x560723d2b590	table: 0x560723b21ad0
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	const_exp	table: 0x560723e85f50	direct_abstract_declarator
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	const_exp	table: 0x560723e2bb30	direct_declarator
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723aeb310	const_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
teve colisao
Nao foi sub	table: 0x560723e86130	]	direct_abstract_declarator
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
colide flw	(	table: 0x560723b57d90	primary_exp
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	exp	table: 0x560723cd7860	stat
colide flw	exp	table: 0x560723e2f800	primary_exp
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723d42550	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x560723ff4240	init_declarator_list
colide flw	,	table: 0x560723b70800	struct_decl
colide flw	,	table: 0x560723e7cfa0	type_spec
colide flw	,	table: 0x560723d42550	param_type_list
colide flw	,	table: 0x560723e0c050	exp
colide flw	,	table: 0x560723fc1cc0	id_list
colide flw	,	table: 0x560723f7dbf0	initializer
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
Nao foi sub	table: 0x560723eb39e0	)	direct_abstract_declarator
Nao foi sub	table: 0x560723fc07b0	++	unary_exp
Nao foi sub	table: 0x560723afc9a0	--	unary_exp
Nao foi sub	table: 0x560723eb4260	ID	typedef_name
Nao foi sub	table: 0x560723e85a80	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x560723e85a80	direct_abstract_declarator
colide flw	(	table: 0x560723fbfda0	cast_exp
colide flw	(	table: 0x560723d2bab0	postfix_exp
colide flw	(	table: 0x560723e2c040	direct_declarator
colide flw	(	table: 0x560723e2c590	direct_declarator
colide flw	(	table: 0x560723e86460	direct_abstract_declarator
colide flw	(	table: 0x560723d80c40	direct_declarator
teve colisao
Nao foi sub	table: 0x560723c7c3e0	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x560723b7eff0	stat
colide flw	and_exp	table: 0x560723c7c3e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560723cd02d0	shift_exp
colide flw	ID	table: 0x560723fc1bb0	id_list
colide flw	exp	table: 0x560723c8b900	stat
colide flw	multiplicative_exp	table: 0x560723cd0310	additive_exp
colide flw	conditional_exp	table: 0x560723e51320	assignment_exp
colide flw	logical_or_exp	table: 0x5607240197b0	conditional_exp
colide flw	type_name	table: 0x560723fbfeb0	cast_exp
colide flw	direct_abstract_declarator	table: 0x560723e85710	abstract_declarator
colide flw	exp	table: 0x560723cd6f30	stat
colide flw	cast_exp	table: 0x560723f7e460	multiplicative_exp
colide flw	param_type_list	table: 0x560723ba7680	direct_abstract_declarator
colide flw	unary_exp	table: 0x560723fc04e0	cast_exp
colide flw	shift_exp	table: 0x560723d06170	relational_exp
colide flw	spec_qualifier_list	table: 0x560723fb7c50	type_name
colide flw	param_type_list	table: 0x560723e2c150	direct_declarator
colide flw	declarator	table: 0x560723d80d50	direct_declarator
colide flw	exclusive_or_exp	table: 0x560723d0dad0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560723e85b90	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x560723d0d3b0	logical_and_exp
colide flw	logical_and_exp	table: 0x560723bd8e40	logical_or_exp
colide flw	primary_exp	table: 0x560723d44cd0	postfix_exp
colide flw	assignment_exp	table: 0x560723d2bbc0	postfix_exp
colide flw	assignment_exp	table: 0x560723e0bf40	exp
colide flw	equality_exp	table: 0x560723c7cb30	and_exp
colide flw	exp	table: 0x560723cd7860	stat
colide flw	param_decl	table: 0x560723d42440	param_type_list
colide flw	pointer	table: 0x560723fb80d0	abstract_declarator
colide flw	constant	table: 0x560723e54f80	primary_exp
colide flw	direct_declarator	table: 0x560723d80640	declarator
colide flw	*	table: 0x560723de4520	pointer
colide flw	ID	table: 0x560723d80af0	direct_declarator
colide flw	relational_exp	table: 0x560723d05720	equality_exp
colide flw	postfix_exp	table: 0x560723d447c0	unary_exp
colide flw	exp	table: 0x560723cd0900	stat
colide flw	id_list	table: 0x560723e2c6a0	direct_declarator
teve colisao
Nao foi sub	table: 0x560723d2c3b0	)	postfix_exp
Nao foi sub	table: 0x560723c7cc70	&	and_exp
Nao foi sub	table: 0x560723fef1d0	*	multiplicative_exp
Nao foi sub	table: 0x5607240161a0	+	additive_exp
Nao foi sub	table: 0x560724016340	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
unique var2 	storage_class_spec
upathEq	enum
upathEq	struct_or_union
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
unique var2 	constant
Unique vars: translation_unit, external_decl, 
matchUPath: translation_unit, external_decl, storage_class_spec, type_qualifier, struct_or_union, constant, 
addEq	(	nil	stat
addEq	(	nil	stat
Adding labels: Err_1, Err_2, Err_3, Err_4, Err_5, Err_6, Err_7, Err_8, Err_9, Err_10, Err_11, Err_12, Err_13, Err_14, Err_15, Err_16, Err_17, Err_18, Err_19, Err_20, Err_21, Err_22, Err_23, Err_24, Err_25, Err_26, Err_27, Err_28, Err_29, Err_30, Err_31, Err_32, Err_33, Err_34, Err_35, Err_36, Err_37, Err_38, Err_39, Err_40, Err_41, Err_42, Err_43, Err_44, Err_45, Err_46, Err_47, Err_48, 

Property 	nil
translation_unit <-  SKIP external_decl+^Err_001 !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum' ID^Err_002  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union ID^Err_003
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator ')') ('[' const_exp? ']'  /  '(' param_type_list ')'  /  '(' id_list? ')')*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...')?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID)*
initializer     <-  '{' initializer (',' initializer)* ','? '}'  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator ')' ('[' const_exp? ']'  /  '(' param_type_list? ')')*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case' const_exp^Err_004 ':'^Err_005 stat^Err_006  /  'default' ':'^Err_007 stat^Err_008  /  exp? ';'  /  compound_stat  /  'if' '('^Err_009 exp ')' stat 'else' stat^Err_010  /  'if' '('^Err_011 exp^Err_012 ')'^Err_013 stat^Err_014  /  'switch' '('^Err_015 exp^Err_016 ')'^Err_017 stat^Err_018  /  'while' '('^Err_019 exp ')' stat  /  'do' stat^Err_020 'while'^Err_021 '('^Err_022 exp^Err_023 ')'^Err_024 ';'^Err_025  /  'for' '('^Err_026 exp? ';'^Err_027 exp? ';'^Err_028 exp? ')'^Err_029 stat^Err_030  /  'goto' ID^Err_031 ';'^Err_032  /  'continue' ';'^Err_033  /  'break' ';'^Err_034  /  'return' exp? ';'^Err_035
compound_stat   <-  '{' decl* stat* '}'
exp             <-  assignment_exp (',' assignment_exp)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?' exp^Err_036 ':'^Err_037 conditional_exp^Err_038  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp^Err_039)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp^Err_040)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp^Err_041)*
exclusive_or_exp <-  and_exp ('^' and_exp^Err_042)*
and_exp         <-  equality_exp ('&' !'&' equality_exp)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp^Err_043)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp^Err_044)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp^Err_045)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp  /  '--' unary_exp  /  unary_operator cast_exp  /  'sizeof' (type_name  /  unary_exp)^Err_046  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp ']'  /  '(' (assignment_exp (',' assignment_exp)*)? ')'  /  '.' ID^Err_047  /  '->' ID^Err_048  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp ')'
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

Property 	unique
translation_unit <-  SKIP_unique external_decl_unique+_unique^Err_001 !.
external_decl   <-  (function_def  /  decl_unique)_unique
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def
decl_spec       <-  storage_class_spec_unique  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl
storage_class_spec <-  ('auto'_unique  /  ('register'_unique  /  ('static'_unique  /  ('extern'_unique  /  'typedef'_unique)_unique)_unique)_unique)_unique
type_spec       <-  'void'_unique  /  'char'_unique  /  'short'_unique  /  'int'_unique  /  'long'_unique  /  'float'_unique  /  'double'_unique  /  'signed'_unique  /  'unsigned'_unique  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum'_unique ID_unique^Err_002  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union_unique ID_unique^Err_003
type_qualifier  <-  ('const'_unique  /  'volatile'_unique)_unique
struct_or_union <-  ('struct'_unique  /  'union'_unique)_unique
init_declarator_list <-  init_declarator (',' init_declarator)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator ')') ('[' const_exp? ']'  /  '(' param_type_list ')'  /  '(' id_list? ')')*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...'_unique)?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID)*
initializer     <-  '{' initializer (',' initializer)* ','? '}'  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator ')' ('[' const_exp? ']'  /  '(' param_type_list? ')')*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case'_unique const_exp_unique^Err_004 ':'_unique^Err_005 stat_unique^Err_006  /  'default'_unique ':'_unique^Err_007 stat_unique^Err_008  /  exp? ';'  /  compound_stat  /  'if' '('^Err_009 exp ')' stat 'else'_unique stat_unique^Err_010  /  'if'_unique '('_unique^Err_011 exp_unique^Err_012 ')'_unique^Err_013 stat_unique^Err_014  /  'switch'_unique '('_unique^Err_015 exp_unique^Err_016 ')'_unique^Err_017 stat_unique^Err_018  /  'while' '('^Err_019 exp ')' stat  /  ('do'_unique stat_unique^Err_020 'while'_unique^Err_021 '('_unique^Err_022 exp_unique^Err_023 ')'_unique^Err_024 ';'_unique^Err_025  /  ('for'_unique '('_unique^Err_026 exp_unique?_unique ';'_unique^Err_027 exp_unique?_unique ';'_unique^Err_028 exp_unique?_unique ')'_unique^Err_029 stat_unique^Err_030  /  ('goto'_unique ID_unique^Err_031 ';'_unique^Err_032  /  ('continue'_unique ';'_unique^Err_033  /  ('break'_unique ';'_unique^Err_034  /  'return'_unique exp_unique?_unique ';'_unique^Err_035)_unique)_unique)_unique)_unique)_unique
compound_stat   <-  '{' decl* stat* '}'
exp             <-  assignment_exp (',' assignment_exp)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  ('*='_unique  /  ('/='_unique  /  ('%='_unique  /  ('+='_unique  /  ('-='_unique  /  ('<<='_unique  /  ('>>='_unique  /  ('&='_unique  /  ('^='_unique  /  '|='_unique)_unique)_unique)_unique)_unique)_unique)_unique)_unique)_unique)_unique
conditional_exp <-  logical_or_exp '?'_unique exp_unique^Err_036 ':'_unique^Err_037 conditional_exp_unique^Err_038  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||'_unique logical_and_exp_unique^Err_039)*
logical_and_exp <-  inclusive_or_exp ('&&'_unique inclusive_or_exp_unique^Err_040)*
inclusive_or_exp <-  exclusive_or_exp ('|'_unique !'|' exclusive_or_exp_unique^Err_041)*
exclusive_or_exp <-  and_exp ('^'_unique and_exp_unique^Err_042)*
and_exp         <-  equality_exp ('&' !'&' equality_exp)*
equality_exp    <-  relational_exp ((('=='_unique  /  '!='_unique)_unique) relational_exp_unique^Err_043)*
relational_exp  <-  shift_exp ((('<='_unique  /  ('>='_unique  /  ('<'_unique  /  '>'_unique)_unique)_unique)_unique) shift_exp_unique^Err_044)*
shift_exp       <-  additive_exp ((('<<'_unique  /  '>>'_unique)_unique) additive_exp_unique^Err_045)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp)*
multiplicative_exp <-  cast_exp (('*'  /  ('/'_unique  /  '%'_unique)_unique) cast_exp)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp  /  '--' unary_exp  /  unary_operator cast_exp  /  'sizeof'_unique ((type_name  /  unary_exp_unique)_unique)^Err_046  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp ']'  /  '(' (assignment_exp (',' assignment_exp)*)? ')'  /  '.'_unique ID_unique^Err_047  /  '->'_unique ID_unique^Err_048  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING_unique  /  constant_unique  /  '(' exp ')'
constant        <-  (INT_CONST_unique  /  (CHAR_CONST_unique  /  (FLOAT_CONST_unique  /  ENUMERATION_CONST_unique)_unique)_unique)_unique
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  ('~'_unique  /  '!'_unique)_unique	

End UPath

Deep UPath
Uunique
return	 = 	1
continue	 = 	1
|=	 = 	1
break	 = 	1
&&	 = 	1
static	 = 	1
]	 = 	3
^	 = 	1
<<=	 = 	1
||	 = 	1
[	 = 	3
enum	 = 	2
if	 = 	2
default	 = 	1
++	 = 	2
while	 = 	2
case	 = 	1
typedef	 = 	1
void	 = 	1
%=	 = 	1
+=	 = 	1
do	 = 	1
SKIP	 = 	1
else	 = 	1
extern	 = 	1
int	 = 	1
?	 = 	1
->	 = 	1
:	 = 	5
;	 = 	10
float	 = 	1
const	 = 	1
switch	 = 	1
unsigned	 = 	1
-	 = 	2
register	 = 	1
==	 = 	1
<=	 = 	1
)	 = 	14
*	 = 	4
+	 = 	2
,	 = 	10
%	 = 	1
&	 = 	2
short	 = 	1
(	 = 	14
!	 = 	1
/=	 = 	1
-=	 = 	1
>=	 = 	1
ENUMERATION_CONST	 = 	1
*=	 = 	1
for	 = 	1
auto	 = 	1
^=	 = 	1
STRING	 = 	1
INT_CONST	 = 	1
...	 = 	1
<<	 = 	1
signed	 = 	1
.	 = 	1
>>=	 = 	1
sizeof	 = 	1
--	 = 	2
/	 = 	1
>>	 = 	1
volatile	 = 	1
>	 = 	1
<	 = 	1
double	 = 	1
~	 = 	1
!=	 = 	1
&=	 = 	1
=	 = 	3
FLOAT_CONST	 = 	1
{	 = 	4
|	 = 	1
}	 = 	4
char	 = 	1
ID	 = 	15
goto	 = 	1
union	 = 	1
CHAR_CONST	 = 	1
long	 = 	1
struct	 = 	1
Token 	1	 = 	65
Token 	2	 = 	8
Token 	3	 = 	3
Token 	4	 = 	3
Token 	5	 = 	1
Token 	6	 = 	nil
Token 	7	 = 	nil
Token 	8	 = 	nil
Token 	9	 = 	nil
Token 	10	 = 	2
Unique tokens (# 64): !, !=, %, %=, &&, &=, *=, +=, -=, ->, ., ..., /, /=, <, <<, <<=, <=, ==, >, >=, >>, >>=, ?, CHAR_CONST, ENUMERATION_CONST, FLOAT_CONST, INT_CONST, STRING, ^, ^=, auto, break, case, char, const, continue, default, do, double, else, extern, float, for, goto, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, |, |=, ||, ~
calcTail
translation_unit: 	;, }
external_decl: 	;, }
function_def: 	}
decl_spec: 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
decl: 	;
storage_class_spec: 	auto, extern, register, static, typedef
type_spec: 	__ID, char, double, float, int, long, short, signed, unsigned, void, }
type_qualifier: 	const, volatile
struct_or_union: 	struct, union
init_declarator_list: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
init_declarator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_decl: 	;
spec_qualifier_list: 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier: 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_declarator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
declarator: 	), ], __ID
direct_declarator: 	), ], __ID
pointer: 	*, const, volatile
param_type_list: 	), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_decl: 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
id_list: 	__ID
initializer: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
type_name: 	), *, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
abstract_declarator: 	), *, ], const, volatile
direct_abstract_declarator: 	), ]
typedef_name: 	__ID
stat: 	;, }
compound_stat: 	}
exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
assignment_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
assignment_operator: 	%=, &=, *=, +=, -=, /=, <<=, =, >>=, ^=, |=
conditional_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
const_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
logical_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
logical_and_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
inclusive_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
exclusive_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
and_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
equality_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
relational_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
shift_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
additive_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
multiplicative_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
cast_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
postfix_exp: 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
primary_exp: 	), __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
constant: 	__CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __INT_CONST
unary_operator: 	!, &, *, +, -, ~
COMMENT: 	*/
INT_CONST: 	0, 1, 2, 3, 4, 5, 6, 7, 8, L, U, __DIGIT, __XDIGIT, l, u
FLOAT_CONST: 	., F, L, __DIGIT, __XDIGIT, f, l
XDIGIT: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, a, b, c, d, e, f
DIGIT: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9
CHAR_CONST: 	'
STRING: 	"
ESC_CHAR: 	", ', 0, 1, 2, 3, 4, 5, 6, 7, ?, \\, __XDIGIT, a, b, f, n, r, t, v
ENUMERATION_CONST: 	__ID
ID: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, _, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z
KEYWORDS: 	auto, break, case, char, const, continue, default, do, double, else, enum, extern, float, for, goto, if, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, while
SPACE: 		, 
, , , ,  , __COMMENT
SKIP: 		, 
, , , ,  , __COMMENT, __empty
Global Prefix
translation_unit: 	
external_decl: 	;, }
function_def: 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
decl_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
decl: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
storage_class_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
type_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
type_qualifier: 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
struct_or_union: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
init_declarator_list: 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
init_declarator: 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
struct_decl: 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier_list: 	(, sizeof
spec_qualifier: 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_declarator: 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator: 	,, {
declarator: 	(, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
direct_declarator: 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
pointer: 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_type_list: 	(
param_decl: 	(, ,
id_list: 	(
initializer: 	,, =, {
type_name: 	(, sizeof
abstract_declarator: 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
direct_abstract_declarator: 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
typedef_name: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
stat: 	), :, ;, do, else, {, }
compound_stat: 	), :, ;, ], __ID, do, else, {, }
exp: 	(, ), :, ;, ?, [, do, else, return, {, }
assignment_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
assignment_operator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
conditional_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
const_exp: 	:, =, [, case
logical_or_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
logical_and_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
inclusive_or_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
exclusive_or_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |, |=, ||, }
and_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
equality_exp: 	%=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
relational_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, ==, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
shift_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<=, <=, =, ==, >, >=, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
additive_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
multiplicative_exp: 	!=, %=, &, &&, &=, (, ), *=, +, +=, ,, -, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
cast_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
unary_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
postfix_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
primary_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
constant: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
unary_operator: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
COMMENT: 		, 
, , , ,  , __COMMENT
INT_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
FLOAT_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
XDIGIT: 	__XDIGIT, x
DIGIT: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, __DIGIT, case, do, else, return, sizeof, {, |, |=, ||, }, ~
CHAR_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
STRING: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ESC_CHAR: 	
ENUMERATION_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ID: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, ->, ., /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ], ^, ^=, __ID, auto, case, char, const, do, double, else, enum, extern, float, goto, int, long, register, return, short, signed, sizeof, static, struct, typedef, union, unsigned, void, volatile, {, |, |=, ||, }, ~
KEYWORDS: 	
SPACE: 	
SKIP: 	
calcPrefix
decl	 -> 
	(decl, external_decl): 	;, }
	(decl, decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(decl, function_def): 	), ;, ], __ID
	(decl, compound_stat): 	;, {
__static	 -> 
	(__static, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
logical_or_exp	 -> 
	(logical_or_exp, conditional_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
	(logical_or_exp, conditional_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
type_spec	 -> 
	(type_spec, spec_qualifier_list): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_spec, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(type_spec, spec_qualifier): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__for	 -> 
	(__for, stat): 	), :, ;, do, else, {, }
struct_or_union	 -> 
	(struct_or_union, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(struct_or_union, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__auto	 -> 
	(__auto, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__const	 -> 
	(__const, type_qualifier): 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__/=	 -> 
	(__/=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__||	 -> 
	(__||, logical_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__do	 -> 
	(__do, stat): 	), :, ;, do, else, {, }
type_qualifier	 -> 
	(type_qualifier, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(type_qualifier, spec_qualifier): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_qualifier, pointer): 	*, const, volatile
	(type_qualifier, spec_qualifier_list): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_qualifier, pointer): 	*, const, volatile
init_declarator	 -> 
	(init_declarator, init_declarator_list): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(init_declarator, init_declarator_list): 	,
exclusive_or_exp	 -> 
	(exclusive_or_exp, inclusive_or_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
	(exclusive_or_exp, inclusive_or_exp): 	|
__else	 -> 
	(__else, stat): 	;, }
primary_exp	 -> 
	(primary_exp, postfix_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__*=	 -> 
	(__*=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__enum	 -> 
	(__enum, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(__enum, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
conditional_exp	 -> 
	(conditional_exp, conditional_exp): 	:
	(conditional_exp, assignment_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
	(conditional_exp, const_exp): 	:, =, [, case
direct_declarator	 -> 
	(direct_declarator, declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__goto	 -> 
	(__goto, stat): 	), :, ;, do, else, {, }
__if	 -> 
	(__if, stat): 	), :, ;, do, else, {, }
	(__if, stat): 	), :, ;, do, else, {, }
__long	 -> 
	(__long, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__++	 -> 
	(__++, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__++, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
__char	 -> 
	(__char, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__struct	 -> 
	(__struct, struct_or_union): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__->	 -> 
	(__->, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
__&	 -> 
	(__&, and_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__&, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
spec_qualifier_list	 -> 
	(spec_qualifier_list, type_name): 	(, sizeof
__~	 -> 
	(__~, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__>>	 -> 
	(__>>, shift_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__]	 -> 
	(__], postfix_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__], direct_abstract_declarator): 	), *, ++, --, [, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__], direct_declarator): 	), *, ++, --, [, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__case	 -> 
	(__case, stat): 	), :, ;, do, else, {, }
logical_and_exp	 -> 
	(logical_and_exp, logical_or_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
	(logical_and_exp, logical_or_exp): 	||
stat	 -> 
	(stat, stat): 	)
	(stat, stat): 	)
	(stat, stat): 	)
	(stat, stat): 	:
	(stat, stat): 	)
	(stat, compound_stat): 	;, {, }
	(stat, stat): 	:
	(stat, stat): 	else
	(stat, stat): 	:
	(stat, stat): 	do
	(stat, stat): 	)
abstract_declarator	 -> 
	(abstract_declarator, type_name): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(abstract_declarator, direct_abstract_declarator): 	(
	(abstract_declarator, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
function_def	 -> 
	(function_def, external_decl): 	;, }
	(function_def, function_def): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__union	 -> 
	(__union, struct_or_union): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
initializer	 -> 
	(initializer, initializer): 	{
	(initializer, init_declarator): 	=
	(initializer, initializer): 	,
__&=	 -> 
	(__&=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
direct_abstract_declarator	 -> 
	(direct_abstract_declarator, abstract_declarator): 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__...	 -> 
	(__..., param_type_list): 	,
const_exp	 -> 
	(const_exp, direct_declarator): 	[
	(const_exp, stat): 	case
	(const_exp, direct_abstract_declarator): 	[
	(const_exp, struct_declarator): 	:
	(const_exp, enumerator): 	=
__<<=	 -> 
	(__<<=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__double	 -> 
	(__double, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__{	 -> 
	(__{, compound_stat): 	), :, ;, ], __ID, do, else, {, }
	(__{, type_spec): 	__ID, struct, union
	(__{, initializer): 	,, =, {
	(__{, type_spec): 	__ID, enum
__void	 -> 
	(__void, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__=	 -> 
	(__=, enumerator): 	__ID
	(__=, init_declarator): 	), ], __ID
	(__=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
storage_class_spec	 -> 
	(storage_class_spec, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__<=	 -> 
	(__<=, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
equality_exp	 -> 
	(equality_exp, and_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(equality_exp, and_exp): 	&
shift_exp	 -> 
	(shift_exp, relational_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, ==, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(shift_exp, relational_exp): 	<, <=, >, >=
__,	 -> 
	(__,, id_list): 	__ID
	(__,, initializer): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, init_declarator_list): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, postfix_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, struct_decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, type_spec): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, initializer): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, param_type_list): 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__,, param_type_list): 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__typedef	 -> 
	(__typedef, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__--	 -> 
	(__--, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__--, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
init_declarator_list	 -> 
	(init_declarator_list, decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__int	 -> 
	(__int, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__!=	 -> 
	(__!=, equality_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__&&	 -> 
	(__&&, logical_and_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__%=	 -> 
	(__%=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator	 -> 
	(enumerator, type_spec): 	{
	(enumerator, type_spec): 	,
pointer	 -> 
	(pointer, declarator): 	(, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(pointer, abstract_declarator): 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(pointer, pointer): 	*, const, volatile
	(pointer, abstract_declarator): 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__extern	 -> 
	(__extern, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__*	 -> 
	(__*, pointer): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__*, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__*, pointer): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__*, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
cast_exp	 -> 
	(cast_exp, unary_exp): 	!, &, *, +, -, ~
	(cast_exp, cast_exp): 	)
	(cast_exp, multiplicative_exp): 	%, *, /
	(cast_exp, multiplicative_exp): 	!=, %=, &, &&, &=, (, ), *=, +, +=, ,, -, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
assignment_operator	 -> 
	(assignment_operator, assignment_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__>>=	 -> 
	(__>>=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__float	 -> 
	(__float, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
multiplicative_exp	 -> 
	(multiplicative_exp, additive_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(multiplicative_exp, additive_exp): 	+, -
postfix_exp	 -> 
	(postfix_exp, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__-=	 -> 
	(__-=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__default	 -> 
	(__default, stat): 	), :, ;, do, else, {, }
__^=	 -> 
	(__^=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
additive_exp	 -> 
	(additive_exp, shift_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<=, <=, =, ==, >, >=, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(additive_exp, shift_exp): 	<<, >>
SKIP	 -> 
	(SKIP, translation_unit): 	
id_list	 -> 
	(id_list, direct_declarator): 	(
__(	 -> 
	(__(, direct_declarator): 	), ], __ID
	(__(, stat): 	if
	(__(, direct_declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__(, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
	(__(, direct_abstract_declarator): 	), ]
	(__(, direct_declarator): 	), ], __ID
	(__(, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__(, cast_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
	(__(, stat): 	for
	(__(, direct_abstract_declarator): 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__(, stat): 	switch
	(__(, stat): 	while
	(__(, stat): 	while
	(__(, stat): 	if
__unsigned	 -> 
	(__unsigned, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
struct_declarator	 -> 
	(struct_declarator, struct_decl): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(struct_declarator, struct_decl): 	,
__+	 -> 
	(__+, additive_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__+, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__>	 -> 
	(__>, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__;	 -> 
	(__;, stat): 	continue
	(__;, stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, return, short, signed, unsigned, void, volatile, }
	(__;, stat): 	)
	(__;, stat): 	__ID
	(__;, struct_decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__;, stat): 	(, ), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, stat): 	), *, ++, --, :, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, do, double, else, float, int, long, short, signed, unsigned, void, volatile, {, }
	(__;, stat): 	), *, ++, --, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, stat): 	break
__?	 -> 
	(__?, conditional_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__-	 -> 
	(__-, additive_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__-, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__!	 -> 
	(__!, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ENUMERATION_CONST	 -> 
	(ENUMERATION_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__switch	 -> 
	(__switch, stat): 	), :, ;, do, else, {, }
FLOAT_CONST	 -> 
	(FLOAT_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__/	 -> 
	(__/, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier	 -> 
	(spec_qualifier, struct_decl): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(spec_qualifier, struct_decl): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__continue	 -> 
	(__continue, stat): 	), :, ;, do, else, {, }
__|	 -> 
	(__|, inclusive_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
INT_CONST	 -> 
	(INT_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
constant	 -> 
	(constant, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
param_decl	 -> 
	(param_decl, param_type_list): 	(
	(param_decl, param_type_list): 	,
__register	 -> 
	(__register, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
STRING	 -> 
	(STRING, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__)	 -> 
	(__), direct_abstract_declarator): 	), *, ], const, volatile
	(__), stat): 	), *, ++, --, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	(, __ID
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_abstract_declarator): 	(, ), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__), direct_declarator): 	), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__), primary_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), postfix_exp): 	(, ), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	), ], __ID
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), cast_exp): 	), *, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
param_type_list	 -> 
	(param_type_list, direct_declarator): 	(
	(param_type_list, direct_abstract_declarator): 	(
translation_unit	 -> 
compound_stat	 -> 
	(compound_stat, function_def): 	), ;, ], __ID
	(compound_stat, stat): 	), :, ;, do, else, {, }
exp	 -> 
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, conditional_exp): 	?
	(exp, primary_exp): 	(
	(exp, postfix_exp): 	[
	(exp, stat): 	return
	(exp, stat): 	;
	(exp, stat): 	(
	(exp, stat): 	), :, ;, do, else, {, }
	(exp, stat): 	;
	(exp, stat): 	(
__==	 -> 
	(__==, equality_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__.	 -> 
	(__., postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
assignment_exp	 -> 
	(assignment_exp, exp): 	,
	(assignment_exp, postfix_exp): 	(
	(assignment_exp, initializer): 	,, =, {
	(assignment_exp, assignment_exp): 	%=, &=, *=, +=, -=, /=, <<=, =, >>=, ^=, |=
	(assignment_exp, postfix_exp): 	,
	(assignment_exp, exp): 	(, ), :, ;, ?, [, do, else, return, {, }
__|=	 -> 
	(__|=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
typedef_name	 -> 
	(typedef_name, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__break	 -> 
	(__break, stat): 	), :, ;, do, else, {, }
__short	 -> 
	(__short, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__sizeof	 -> 
	(__sizeof, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
declarator	 -> 
	(declarator, init_declarator): 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, struct_declarator): 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(declarator, struct_declarator): 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(declarator, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, function_def): 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, init_declarator): 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, direct_declarator): 	(
unary_operator	 -> 
	(unary_operator, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__[	 -> 
	(__[, direct_declarator): 	), ], __ID
	(__[, direct_abstract_declarator): 	), ]
	(__[, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
type_name	 -> 
	(type_name, cast_exp): 	(
	(type_name, unary_exp): 	sizeof
__%	 -> 
	(__%, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__+=	 -> 
	(__+=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__while	 -> 
	(__while, stat): 	), :, ;, do, else, {, }
	(__while, stat): 	;, }
__<	 -> 
	(__<, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__volatile	 -> 
	(__volatile, type_qualifier): 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
inclusive_or_exp	 -> 
	(inclusive_or_exp, logical_and_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
	(inclusive_or_exp, logical_and_exp): 	&&
__<<	 -> 
	(__<<, shift_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__>=	 -> 
	(__>=, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__return	 -> 
	(__return, stat): 	), :, ;, do, else, {, }
decl_spec	 -> 
	(decl_spec, decl): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(decl_spec, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(decl_spec, function_def): 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(decl_spec, decl): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
relational_exp	 -> 
	(relational_exp, equality_exp): 	%=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(relational_exp, equality_exp): 	!=, ==
__}	 -> 
	(__}, type_spec): 	;
	(__}, compound_stat): 	;, {, }
	(__}, initializer): 	), *, ++, ,, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__}, type_spec): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
and_exp	 -> 
	(and_exp, exclusive_or_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |, |=, ||, }
	(and_exp, exclusive_or_exp): 	^
__^	 -> 
	(__^, exclusive_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_exp	 -> 
	(unary_exp, cast_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
	(unary_exp, unary_exp): 	sizeof
	(unary_exp, assignment_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
	(unary_exp, unary_exp): 	--
	(unary_exp, unary_exp): 	++
__:	 -> 
	(__:, stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, conditional_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, stat): 	default
	(__:, stat): 	__ID
	(__:, struct_declarator): 	), ,, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__signed	 -> 
	(__signed, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
ID	 -> 
	(ID, enumerator): 	,, {
	(ID, enumerator): 	,, {
	(ID, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(ID, postfix_exp): 	->
	(ID, stat): 	goto
	(ID, type_spec): 	struct, union
	(ID, type_spec): 	enum
	(ID, direct_declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(ID, id_list): 	,
	(ID, id_list): 	(
	(ID, stat): 	), :, ;, do, else, {, }
	(ID, typedef_name): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(ID, type_spec): 	struct, union
	(ID, postfix_exp): 	.
	(ID, type_spec): 	enum
CHAR_CONST	 -> 
	(CHAR_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
external_decl	 -> 
	(external_decl, translation_unit): 	;, }
struct_decl	 -> 
	(struct_decl, type_spec): 	;
	(struct_decl, struct_decl): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
isPrefixUniqueFlw s = 	SKIP	translation_unit
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	*	table: 0x560723db6330	unary_operator
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	pointer	table: 0x560724278f70	declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	decl	table: 0x56072422caf0	function_def
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724283d00	compound_stat	stat
Nao foi sub	table: 0x56072427bab0	type_qualifier	pointer
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	storage_class_spec	decl_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; auto ; int ; ] ; { ; float ; unsigned ; char ; } ; extern ; const ; double ; long ; ; ; 
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427c0d0	type_qualifier	pointer
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	stat	table: 0x560724144120	stat
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	stat	table: 0x560724142430	stat
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	stat	table: 0x560724284f10	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724283900	stat
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724143d20	;	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	stat	table: 0x560724144120	stat
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	stat	table: 0x560724142430	stat
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	stat	table: 0x560724284f10	stat
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723ea2b80	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	{	table: 0x560723ea31a0	type_spec
teve colisao
Nao foi sub	table: 0x56072414a530	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724146ca0	}	compound_stat
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560724230450	type_spec
teve colisao
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	{	table: 0x560724230740	type_spec
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724146ca0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	exp	table: 0x560724283900	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x56072427e510	initializer
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560724148100	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x560724278860	enumerator
colide flw	=	table: 0x560724148100	assignment_operator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
teve colisao
Nao foi sub	table: 0x5607242825f0	:	stat
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	:	table: 0x5607242825f0	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	:	table: 0x560724281f90	stat
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	exp	table: 0x560724283900	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072422d220	function_def	function_def
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	decl	table: 0x56072422caf0	function_def
teve colisao
Nao foi sub	table: 0x560723ea6f40	spec_qualifier	struct_decl
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724149f30	:	conditional_exp
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x560724281f90	stat
colide flw	:	table: 0x560724149f30	conditional_exp
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724279a40	ID	direct_declarator
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560723ea59a0	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x560723ea59a0	init_declarator
colide flw	=	table: 0x560724148100	assignment_operator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724281e50	ID	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724278720	ID	enumerator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724280730	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560724280150	pointer	abstract_declarator
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560724280950	)	direct_abstract_declarator
Nao foi sub	table: 0x560723db2a30	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x560724280af0	direct_abstract_declarator
colide flw	[	table: 0x560723db2a30	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560723db3010	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560723db3940	)	postfix_exp
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	*	table: 0x560723db6330	unary_operator
teve colisao
Nao foi sub	table: 0x560723ea7540	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	*	table: 0x560723db6330	unary_operator
teve colisao
Nao foi sub	table: 0x560723ea7540	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	param_type_list
Nao foi sub	table: 0x560723ce6e10	function_def	external_decl
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x560723db4c60	ID	primary_exp
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
teve colisao
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x56072427e510	initializer
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x560723ea51f0	init_declarator_list
teve colisao
Nao foi sub	table: 0x560724278ca0	ID	enumerator
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x5607241467d0	compound_stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	compound_stat	table: 0x560724283d00	stat
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
Nao foi sub	table: 0x560724146ca0	}	compound_stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x560724142d60	stat
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143850	stat
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_name	table: 0x560723db1e20	unary_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	exp	table: 0x5607241418e0	stat
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560723db3940	)	postfix_exp
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072427a2f0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x56072427a2f0	direct_declarator
colide flw	[	table: 0x560723db2a30	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560723db5080	primary_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560724278720	ID	enumerator
Nao foi sub	table: 0x560724278720	ID	enumerator
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560724278010	:	struct_declarator
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724278010	struct_declarator
colide flw	:	table: 0x560724149f30	conditional_exp
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	__case	stat
isPrefixUniqueFlw s = 	const_exp	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724278010	:	struct_declarator
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724278010	struct_declarator
colide flw	:	table: 0x560724281f90	stat
colide flw	:	table: 0x560724149f30	conditional_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	__default	stat
isPrefixUniqueFlw s = 	__:	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072427e2f0	{	initializer
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560724284ad0	stat
teve colisao
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724284be0	stat
teve colisao
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	exp	table: 0x560724142210	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	stat	stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	;	table: 0x560724145890	stat
colide flw	compound_stat	table: 0x560724283d00	stat
colide flw	;	table: 0x560724142f80	stat
colide flw	stat	table: 0x560724142430	stat
colide flw	stat	table: 0x560724284f10	stat
colide flw	stat	table: 0x560724144120	stat
teve colisao
isPrefixUniqueFlw s = 	__else	stat
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560724283e50	stat
teve colisao
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724283ed0	stat
teve colisao
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	exp	table: 0x560724142210	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	__switch	stat
isPrefixUniqueFlw s = 	__(	stat
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560724142b40	stat
teve colisao
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724142c50	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	__do	stat
isPrefixUniqueFlw s = 	stat	stat
colide flw	compound_stat	table: 0x560724283d00	stat
teve colisao
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560724141ff0	stat
teve colisao
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724142100	stat
teve colisao
isPrefixUniqueFlw s = 	exp	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072422df30	;	decl
isPrefixUniqueFlw s = 	__for	stat
isPrefixUniqueFlw s = 	__(	stat
Nao foi sub	table: 0x560724280150	pointer	abstract_declarator
Nao foi sub	table: 0x56072422df30	;	decl
isPrefixUniqueFlw s = 	__;	stat
colide flw	;	table: 0x560724142f80	stat
colide flw	;	table: 0x56072422df30	decl
colide flw	;	table: 0x560723ea6b80	struct_decl
colide flw	;	table: 0x560724143d20	stat
colide flw	;	table: 0x560724145890	stat
colide flw	;	table: 0x560724144bb0	stat
colide flw	;	table: 0x560724283ae0	stat
teve colisao
Nao foi sub	table: 0x560723ea6f40	spec_qualifier	struct_decl
Nao foi sub	table: 0x56072422df30	;	decl
isPrefixUniqueFlw s = 	__;	stat
colide flw	;	table: 0x560724142f80	stat
colide flw	;	table: 0x56072422df30	decl
colide flw	;	table: 0x560723ea6b80	struct_decl
colide flw	;	table: 0x560724283ae0	stat
colide flw	;	table: 0x560724145890	stat
colide flw	;	table: 0x560724144bb0	stat
colide flw	;	table: 0x560724143a30	stat
teve colisao
Nao foi sub	table: 0x560723ea6f40	spec_qualifier	struct_decl
Nao foi sub	table: 0x56072427b150	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560723db52a0	primary_exp
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db3940	postfix_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	__goto	stat
isPrefixUniqueFlw s = 	ID	stat
isPrefixUniqueFlw s = 	__continue	stat
isPrefixUniqueFlw s = 	__break	stat
isPrefixUniqueFlw s = 	__return	stat
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072427e2f0	{	initializer
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x56072427e2f0	initializer
colide flw	{	table: 0x560724230740	type_spec
colide flw	{	table: 0x560723ea31a0	type_spec
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427f390	}	initializer
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x560724283900	stat
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	stat	table: 0x560724142430	stat
colide flw	exp	table: 0x560724284cf0	stat
colide flw	stat	table: 0x5607242835d0	stat
colide flw	exp	table: 0x5607241456b0	stat
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	declarator	table: 0x560723ea5860	init_declarator
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x560723ea59a0	init_declarator
colide flw	=	table: 0x560724278860	enumerator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x560724278860	enumerator
colide flw	=	table: 0x560723ea59a0	init_declarator
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	logical_or_exp	conditional_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
teve colisao
isPrefixUniqueFlw s = 	__?	conditional_exp
isPrefixUniqueFlw s = 	exp	conditional_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
teve colisao
Nao foi sub	table: 0x560724278010	:	struct_declarator
isPrefixUniqueFlw s = 	__:	conditional_exp
colide flw	:	table: 0x560724278010	struct_declarator
colide flw	:	table: 0x560724281f90	stat
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	ID	table: 0x56072427db10	id_list
colide flw	stat	table: 0x5607242835d0	stat
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
isPrefixUniqueFlw s = 	__||	logical_or_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	stat	table: 0x5607242835d0	stat
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	exp	table: 0x560724284cf0	stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
isPrefixUniqueFlw s = 	__&&	logical_and_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
isPrefixUniqueFlw s = 	__|	inclusive_or_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
isPrefixUniqueFlw s = 	__^	exclusive_or_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x5607241456b0	stat
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x560723db6190	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x560723db6190	unary_operator
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x560724142d60	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x5607241456b0	stat
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x560724284cf0	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560723db28f0	primary_exp	postfix_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560723db6510	+	unary_operator
Nao foi sub	table: 0x560723db6660	-	unary_operator
Nao foi sub	table: 0x560723db28f0	primary_exp	postfix_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	exp	table: 0x560724143e30	stat
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	exp	table: 0x560724284cf0	stat
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	ID	table: 0x56072427db10	id_list
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	stat	table: 0x5607242835d0	stat
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427b9a0	*	pointer
Nao foi sub	table: 0x560723db4f00	constant	primary_exp
Nao foi sub	table: 0x56072427a910	(	direct_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x560723db42a0	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
Nao foi sub	table: 0x560723db43f0	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
Nao foi sub	table: 0x56072427bfc0	*	pointer
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	stat	table: 0x5607242835d0	stat
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	unary_exp	table: 0x560723db1350	unary_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	unary_exp	table: 0x560723db1700	unary_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	pointer	table: 0x560724278f70	declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	stat	table: 0x560724284f10	stat
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	cast_exp	table: 0x560723db02d0	multiplicative_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	pointer	table: 0x560724280150	abstract_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	stat	table: 0x560724142430	stat
colide flw	stat	table: 0x560724284420	stat
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	__sizeof	unary_exp
Nao foi sub	table: 0x56072427fb50	spec_qualifier_list	type_name
Nao foi sub	table: 0x560723db28f0	primary_exp	postfix_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	unary_exp	table: 0x560723db1700	unary_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	type_name	table: 0x560723db1e20	unary_exp
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	unary_exp	table: 0x560723db1350	unary_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x560724143e30	stat
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x560724142d60	stat
colide flw	declarator	table: 0x560723ea5860	init_declarator
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	cast_exp	table: 0x560723db02d0	multiplicative_exp
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560724284cf0	stat
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	stat	table: 0x5607242835d0	stat
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	exp	table: 0x5607241456b0	stat
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x56072427a2f0	direct_declarator
colide flw	[	table: 0x560724280af0	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
teve colisao
Nao foi sub	table: 0x560724280de0	]	direct_abstract_declarator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
teve colisao
Nao foi sub	table: 0x560724278f70	pointer	declarator
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__.	postfix_exp
isPrefixUniqueFlw s = 	__->	postfix_exp
Nao foi sub	table: 0x560723db1240	++	unary_exp
Nao foi sub	table: 0x560723db15f0	--	unary_exp
Nao foi sub	table: 0x560724279a40	ID	direct_declarator
foi uniqueEq	constant	primary_exp
return ; >= ; == ; <= ; ) ; * ; + ; , ; % ; & ; && ; ( ; ! ; /= ; ^ ; -= ; <<= ; || ; [ ; >> ; ++ ; << ; -- ; case ; >>= ; &= ; %= ; += ; *= ; != ; else ; } ; ~ ; ? ; / ; { ; : ; ; ; < ; = ; sizeof ; - ; ^= ; do ; | ; > ; |= ; 
Nao foi sub	table: 0x56072427a910	(	direct_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x56072414d880	&	and_exp
Nao foi sub	table: 0x56072427b9a0	*	pointer
Nao foi sub	table: 0x56072427e760	+	additive_exp
Nao foi sub	table: 0x56072427e900	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
upathEq	enum
upathEq	struct_or_union
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	*	table: 0x560723db6330	unary_operator
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	pointer	table: 0x560724278f70	declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	decl	table: 0x56072422caf0	function_def
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724283d00	compound_stat	stat
Nao foi sub	table: 0x56072427bab0	type_qualifier	pointer
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	storage_class_spec	decl_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; auto ; int ; ] ; { ; float ; unsigned ; char ; } ; extern ; const ; double ; long ; ; ; 
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427c0d0	type_qualifier	pointer
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	stat	table: 0x560724144120	stat
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	stat	table: 0x560724142430	stat
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	stat	table: 0x560724284f10	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724283900	stat
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724143d20	;	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	stat	table: 0x560724144120	stat
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	stat	table: 0x560724142430	stat
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	stat	table: 0x560724284f10	stat
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723ea2b80	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	{	table: 0x560723ea31a0	type_spec
teve colisao
Nao foi sub	table: 0x56072414a530	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724146ca0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	{	table: 0x560724230740	type_spec
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724146ca0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	exp	table: 0x560724283900	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x56072427e510	initializer
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560724148100	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x560724278860	enumerator
colide flw	=	table: 0x560724148100	assignment_operator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
teve colisao
Nao foi sub	table: 0x5607242825f0	:	stat
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	:	table: 0x5607242825f0	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	:	table: 0x560724281f90	stat
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	exp	table: 0x560724283900	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072422d220	function_def	function_def
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	decl	table: 0x56072422caf0	function_def
teve colisao
Nao foi sub	table: 0x560723ea6f40	spec_qualifier	struct_decl
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724149f30	:	conditional_exp
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x560724281f90	stat
colide flw	:	table: 0x560724149f30	conditional_exp
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724279a40	ID	direct_declarator
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560723ea59a0	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x560723ea59a0	init_declarator
colide flw	=	table: 0x560724148100	assignment_operator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724281e50	ID	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724278720	ID	enumerator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724280730	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560724280150	pointer	abstract_declarator
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560724280950	)	direct_abstract_declarator
Nao foi sub	table: 0x560723db2a30	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x560724280af0	direct_abstract_declarator
colide flw	[	table: 0x560723db2a30	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560723db3010	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560723db3940	)	postfix_exp
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	*	table: 0x560723db6330	unary_operator
teve colisao
Nao foi sub	table: 0x560723ea7540	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	*	table: 0x560723db6330	unary_operator
teve colisao
Nao foi sub	table: 0x560723ea7540	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427f120	,	initializer
Nao foi sub	table: 0x560723ce6e10	function_def	external_decl
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x560723db4c60	ID	primary_exp
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
teve colisao
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x56072427e510	initializer
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x560723ea51f0	init_declarator_list
teve colisao
Nao foi sub	table: 0x560724278ca0	ID	enumerator
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x5607241467d0	compound_stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	compound_stat	table: 0x560724283d00	stat
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
Nao foi sub	table: 0x560724146ca0	}	compound_stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x560724142d60	stat
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143850	stat
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_name	table: 0x560723db1e20	unary_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	exp	table: 0x5607241418e0	stat
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560723db3940	)	postfix_exp
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072427a2f0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x56072427a2f0	direct_declarator
colide flw	[	table: 0x560723db2a30	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560723db5080	primary_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560724278720	ID	enumerator
Nao foi sub	table: 0x560724278720	ID	enumerator
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560724278010	:	struct_declarator
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724278010	struct_declarator
colide flw	:	table: 0x560724149f30	conditional_exp
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072427e2f0	{	initializer
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560724284ad0	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__if	table: 0x560724283ed0	table: 0x560724283e50
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724284be0	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560724283fe0	table: 0x560724283ed0
if ; 
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	exp	table: 0x560724142210	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560724142b40	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__while	table: 0x560724142100	table: 0x560724141ff0
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724142c50	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560724142210	table: 0x560724142100
while ; 
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427e2f0	{	initializer
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x56072427e2f0	initializer
colide flw	{	table: 0x560724230740	type_spec
colide flw	{	table: 0x560723ea31a0	type_spec
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427f390	}	initializer
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x560724283900	stat
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	stat	table: 0x560724142430	stat
colide flw	exp	table: 0x560724284cf0	stat
colide flw	stat	table: 0x5607242835d0	stat
colide flw	exp	table: 0x5607241456b0	stat
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	declarator	table: 0x560723ea5860	init_declarator
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x560723ea59a0	init_declarator
colide flw	=	table: 0x560724278860	enumerator
teve colisao
previousEq: 	assignment_exp	, rule: 	assignment_exp	, prev: 	assignment_operator	table: 0x560724147ad0	table: 0x5607241479c0
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x560724278860	enumerator
colide flw	=	table: 0x560723ea59a0	init_declarator
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	ID	table: 0x56072427db10	id_list
colide flw	stat	table: 0x5607242835d0	stat
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	stat	table: 0x5607242835d0	stat
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	exp	table: 0x560724284cf0	stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x5607241456b0	stat
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x560723db6190	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x560723db6190	unary_operator
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x560724142d60	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x5607241456b0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x560724284cf0	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560723db6510	+	unary_operator
Nao foi sub	table: 0x560723db6660	-	unary_operator
Nao foi sub	table: 0x560723db28f0	primary_exp	postfix_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	exp	table: 0x560724143e30	stat
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	exp	table: 0x560724284cf0	stat
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	ID	table: 0x56072427db10	id_list
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	stat	table: 0x5607242835d0	stat
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427b9a0	*	pointer
Nao foi sub	table: 0x560723db4f00	constant	primary_exp
Nao foi sub	table: 0x56072427a910	(	direct_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x560723db42a0	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
Nao foi sub	table: 0x560723db43f0	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
Nao foi sub	table: 0x56072427bfc0	*	pointer
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	stat	table: 0x5607242835d0	stat
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	unary_exp	table: 0x560723db1350	unary_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	unary_exp	table: 0x560723db1700	unary_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	pointer	table: 0x560724278f70	declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	stat	table: 0x560724284f10	stat
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	cast_exp	table: 0x560723db02d0	multiplicative_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	pointer	table: 0x560724280150	abstract_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	stat	table: 0x560724142430	stat
colide flw	stat	table: 0x560724284420	stat
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427fb50	spec_qualifier_list	type_name
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	unary_exp	table: 0x560723db1700	unary_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	type_name	table: 0x560723db1e20	unary_exp
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	unary_exp	table: 0x560723db1350	unary_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x560724143e30	stat
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x560724142d60	stat
colide flw	declarator	table: 0x560723ea5860	init_declarator
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	cast_exp	table: 0x560723db02d0	multiplicative_exp
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560724284cf0	stat
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	stat	table: 0x5607242835d0	stat
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	exp	table: 0x5607241456b0	stat
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x56072427a2f0	direct_declarator
colide flw	[	table: 0x560724280af0	direct_abstract_declarator
teve colisao
previousEq: 	exp	, rule: 	postfix_exp	, prev: 	__[	table: 0x560723db2b40	table: 0x560723db2a30
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
teve colisao
Nao foi sub	table: 0x560724280de0	]	direct_abstract_declarator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
teve colisao
Nao foi sub	table: 0x560724278f70	pointer	declarator
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560723db1240	++	unary_exp
Nao foi sub	table: 0x560723db15f0	--	unary_exp
Nao foi sub	table: 0x560724279a40	ID	direct_declarator
foi uniqueEq	constant	primary_exp
return ; >= ; == ; <= ; ) ; * ; + ; , ; % ; & ; && ; ( ; ! ; /= ; ^ ; -= ; <<= ; || ; [ ; >> ; ++ ; << ; -- ; case ; >>= ; &= ; %= ; += ; *= ; != ; else ; } ; ~ ; ? ; / ; { ; : ; ; ; < ; = ; sizeof ; - ; ^= ; do ; | ; > ; |= ; 
Nao foi sub	table: 0x56072427a910	(	direct_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x56072414d880	&	and_exp
Nao foi sub	table: 0x56072427b9a0	*	pointer
Nao foi sub	table: 0x56072427e760	+	additive_exp
Nao foi sub	table: 0x56072427e900	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
unique var2 	storage_class_spec
upathEq	enum
upathEq	struct_or_union
Vai ser agora	struct_or_union	type_spec
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
unique var2 	constant
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	*	table: 0x560723db6330	unary_operator
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	pointer	table: 0x560724278f70	declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	decl	table: 0x56072422caf0	function_def
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724283d00	compound_stat	stat
Nao foi sub	table: 0x56072427bab0	type_qualifier	pointer
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427c0d0	type_qualifier	pointer
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	stat	table: 0x560724144120	stat
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	stat	table: 0x560724142430	stat
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	stat	table: 0x560724284f10	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724283900	stat
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724143d20	;	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	stat	table: 0x560724144120	stat
colide flw	storage_class_spec	table: 0x56072422d5c0	decl_spec
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	stat	table: 0x560724141b00	stat
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	stat	table: 0x560724142430	stat
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	stat	table: 0x560724284f10	stat
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x560723ea2b80	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	{	table: 0x560723ea31a0	type_spec
teve colisao
Nao foi sub	table: 0x56072414a530	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724146ca0	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	{	table: 0x560724230740	type_spec
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724146ca0	}	compound_stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	exp	table: 0x560724283900	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x56072427e510	initializer
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560724148100	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x560724278860	enumerator
colide flw	=	table: 0x560724148100	assignment_operator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	spec_qualifier	table: 0x560723ea6f40	struct_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	decl	table: 0x56072422caf0	function_def
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
teve colisao
Nao foi sub	table: 0x5607242825f0	:	stat
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	:	table: 0x5607242825f0	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	:	table: 0x560724281f90	stat
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	exp	table: 0x560724283900	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	decl	table: 0x56072422e370	decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072422d220	function_def	function_def
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	type_qualifier	table: 0x56072427bab0	pointer
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	type_qualifier	table: 0x560724277b30	spec_qualifier
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	decl_spec	table: 0x56072422e260	decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	type_qualifier	table: 0x56072422d860	decl_spec
colide flw	struct_or_union	table: 0x560723ea3980	type_spec
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_or_union	table: 0x560723ea2eb0	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	type_qualifier	table: 0x560723ea7540	spec_qualifier_list
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_qualifier	table: 0x56072427c0d0	pointer
colide flw	decl	table: 0x56072422caf0	function_def
teve colisao
Nao foi sub	table: 0x560723ea6f40	spec_qualifier	struct_decl
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724149f30	:	conditional_exp
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x560724281f90	stat
colide flw	:	table: 0x560724149f30	conditional_exp
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724279a40	ID	direct_declarator
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560723ea59a0	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x560723ea59a0	init_declarator
colide flw	=	table: 0x560724148100	assignment_operator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724281e50	ID	stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x560724278720	ID	enumerator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724280730	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x560724280150	pointer	abstract_declarator
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560724280950	)	direct_abstract_declarator
Nao foi sub	table: 0x560723db2a30	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x560724280af0	direct_abstract_declarator
colide flw	[	table: 0x560723db2a30	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560723db3010	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560723db3940	)	postfix_exp
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	*	table: 0x560723db6330	unary_operator
teve colisao
Nao foi sub	table: 0x560723ea7540	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x56072422d220	function_def	function_def
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	*	table: 0x560723db6330	unary_operator
teve colisao
Nao foi sub	table: 0x560723ea7540	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427f120	,	initializer
Nao foi sub	table: 0x560723ce6e10	function_def	external_decl
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x560723db4c60	ID	primary_exp
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
teve colisao
Nao foi sub	table: 0x56072427f120	,	initializer
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x56072427e510	initializer
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x560723ea51f0	init_declarator_list
teve colisao
Nao foi sub	table: 0x560724278ca0	ID	enumerator
Nao foi sub	table: 0x5607241467d0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x5607241467d0	compound_stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	{	table: 0x5607241467d0	compound_stat
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	compound_stat	table: 0x560724283d00	stat
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
Nao foi sub	table: 0x560724146ca0	}	compound_stat
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x560724142d60	stat
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143850	stat
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_name	table: 0x560723db1e20	unary_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142210	stat
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	exp	table: 0x5607241418e0	stat
colide flw	exp	table: 0x560724283fe0	stat
teve colisao
Nao foi sub	table: 0x560723db3940	)	postfix_exp
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072427a2f0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x56072427a2f0	direct_declarator
colide flw	[	table: 0x560723db2a30	postfix_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560723db5080	primary_exp
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560724278720	ID	enumerator
Nao foi sub	table: 0x560724278720	ID	enumerator
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	ID	table: 0x560724281c80	typedef_name
teve colisao
Nao foi sub	table: 0x560724278010	:	struct_declarator
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724278010	struct_declarator
colide flw	:	table: 0x560724149f30	conditional_exp
colide flw	:	table: 0x5607242825f0	stat
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422df30	;	decl
Nao foi sub	table: 0x56072427e2f0	{	initializer
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x560724284ad0	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__if	table: 0x560724283ed0	table: 0x560724283e50
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724284be0	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560724283fe0	table: 0x560724283ed0
if ; 
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	exp	table: 0x560724142210	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x560724142b40	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__while	table: 0x560724142100	table: 0x560724141ff0
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x560724142c50	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x560724142210	table: 0x560724142100
while ; 
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560724142e70	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db0a50	cast_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427e2f0	{	initializer
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x56072427e2f0	initializer
colide flw	{	table: 0x560724230740	type_spec
colide flw	{	table: 0x560723ea31a0	type_spec
teve colisao
Nao foi sub	table: 0x560724277b30	type_qualifier	spec_qualifier
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427f390	}	initializer
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x560724283900	stat
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	stat	table: 0x560724142430	stat
colide flw	exp	table: 0x560724284cf0	stat
colide flw	stat	table: 0x5607242835d0	stat
colide flw	exp	table: 0x5607241456b0	stat
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723db3230	postfix_exp
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	declarator	table: 0x560723ea5860	init_declarator
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x560723ea59a0	init_declarator
colide flw	=	table: 0x560724278860	enumerator
teve colisao
previousEq: 	assignment_exp	, rule: 	assignment_exp	, prev: 	assignment_operator	table: 0x560724147ad0	table: 0x5607241479c0
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072414cf90	and_exp	exclusive_or_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x560724278860	enumerator
colide flw	=	table: 0x560723ea59a0	init_declarator
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	ID	table: 0x56072427db10	id_list
colide flw	stat	table: 0x5607242835d0	stat
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	stat	table: 0x5607242835d0	stat
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	exp	table: 0x560724284cf0	stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x5607241456b0	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	exp	table: 0x5607241456b0	stat
colide flw	const_exp	table: 0x5607242824e0	stat
teve colisao
Nao foi sub	table: 0x560723db6190	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x560723db6190	unary_operator
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	exp	table: 0x560724142d60	stat
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x5607241456b0	stat
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x560724284cf0	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exp	table: 0x560724142d60	stat
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	exp	table: 0x560724284cf0	stat
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	exp	table: 0x560724143e30	stat
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exp	table: 0x5607241456b0	stat
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	stat	table: 0x5607242835d0	stat
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560723db6510	+	unary_operator
Nao foi sub	table: 0x560723db6660	-	unary_operator
Nao foi sub	table: 0x560723db28f0	primary_exp	postfix_exp
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	unary_operator	table: 0x560723db1920	unary_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	exp	table: 0x560724143e30	stat
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	exp	table: 0x560724142d60	stat
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x5607241456b0	stat
colide flw	exp	table: 0x560724284cf0	stat
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	ID	table: 0x56072427db10	id_list
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	stat	table: 0x5607242835d0	stat
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x56072427b9a0	*	pointer
Nao foi sub	table: 0x560723db4f00	constant	primary_exp
Nao foi sub	table: 0x56072427a910	(	direct_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	ID	table: 0x560723db4c60	primary_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	exp	table: 0x5607241418e0	stat
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x560724280950	direct_abstract_declarator
colide flw	)	table: 0x560724144010	stat
colide flw	)	table: 0x56072427b150	direct_declarator
colide flw	)	table: 0x560724142320	stat
colide flw	)	table: 0x560724284e00	stat
colide flw	)	table: 0x5607242840f0	stat
colide flw	)	table: 0x560724281400	direct_abstract_declarator
colide flw	)	table: 0x56072427ab30	direct_declarator
colide flw	)	table: 0x5607241419f0	stat
colide flw	)	table: 0x560724279de0	direct_declarator
colide flw	)	table: 0x560723db3940	postfix_exp
colide flw	)	table: 0x560723db52a0	primary_exp
teve colisao
Nao foi sub	table: 0x56072427ae60	(	direct_declarator
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x560723db42a0	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x560723db42a0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
Nao foi sub	table: 0x560723db43f0	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x560723db43f0	postfix_exp
teve colisao
Nao foi sub	table: 0x560723dafba0	*	multiplicative_exp
Nao foi sub	table: 0x56072427bfc0	*	pointer
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	stat	table: 0x5607242835d0	stat
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	unary_exp	table: 0x560723db1350	unary_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	-	table: 0x56072427e900	additive_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	declarator	table: 0x56072422c9e0	function_def
colide flw	*	table: 0x560723dafba0	multiplicative_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	&	table: 0x56072414d880	and_exp
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	unary_exp	table: 0x560723db1700	unary_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	pointer	table: 0x56072427bc90	pointer
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	pointer	table: 0x560724278f70	declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	*	table: 0x56072427b9a0	pointer
colide flw	stat	table: 0x560724284f10	stat
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	cast_exp	table: 0x560723db02d0	multiplicative_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	pointer	table: 0x560724280150	abstract_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	stat	table: 0x560724142430	stat
colide flw	stat	table: 0x560724284420	stat
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	+	table: 0x56072427e760	additive_exp
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
teve colisao
Nao foi sub	table: 0x560724282de0	additive_exp	shift_exp
Nao foi sub	table: 0x56072427fb50	spec_qualifier_list	type_name
Nao foi sub	table: 0x56072422caf0	decl	function_def
Nao foi sub	table: 0x56072422caf0	decl	function_def
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	additive_exp	table: 0x560723dae220	shift_exp
colide flw	stat	table: 0x5607242820a0	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	shift_exp	table: 0x56072414f6e0	relational_exp
colide flw	unary_exp	table: 0x560723db1700	unary_exp
colide flw	decl_spec	table: 0x56072422d000	function_def
colide flw	initializer	table: 0x560723ea5ab0	init_declarator
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier	table: 0x560723ea60b0	struct_decl
colide flw	declarator	table: 0x560724278450	struct_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	type_spec	table: 0x56072422d710	decl_spec
colide flw	initializer	table: 0x56072427e400	initializer
colide flw	exp	table: 0x5607241418e0	stat
colide flw	decl_spec	table: 0x56072422dc10	decl
colide flw	function_def	table: 0x56072422d220	function_def
colide flw	enumerator	table: 0x560723e354e0	type_spec
colide flw	type_name	table: 0x560723db1e20	unary_exp
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	init_declarator_list	table: 0x56072422dd20	decl
colide flw	const_exp	table: 0x560724278970	enumerator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	cast_exp	table: 0x560723db1a30	unary_exp
colide flw	typedef_name	table: 0x560724230300	type_spec
colide flw	decl	table: 0x5607242561a0	external_decl
colide flw	declarator	table: 0x560723ea5de0	init_declarator
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	relational_exp	table: 0x56072414e730	equality_exp
colide flw	const_exp	table: 0x5607242824e0	stat
colide flw	exclusive_or_exp	table: 0x56072414c950	inclusive_or_exp
colide flw	stat	table: 0x560724141b00	stat
colide flw	struct_declarator	table: 0x560723ea67e0	struct_decl
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	init_declarator	table: 0x560723ea5300	init_declarator_list
colide flw	unary_exp	table: 0x560723db1350	unary_exp
colide flw	stat	table: 0x560724146ac0	compound_stat
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	function_def	table: 0x560723ce6e10	external_decl
colide flw	assignment_exp	table: 0x560723db3340	postfix_exp
colide flw	stat	table: 0x560724282700	stat
colide flw	ID	table: 0x560724278ca0	enumerator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	declarator	table: 0x56072427d460	param_decl
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	assignment_exp	table: 0x560724147ad0	assignment_exp
colide flw	equality_exp	table: 0x56072414db70	and_exp
colide flw	exp	table: 0x560724283900	stat
colide flw	ID	table: 0x56072427dd60	id_list
colide flw	stat	table: 0x560724142430	stat
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	stat	table: 0x560724144120	stat
colide flw	decl	table: 0x56072422e370	decl
colide flw	decl_spec	table: 0x56072427d280	param_decl
colide flw	initializer	table: 0x5607241feb70	initializer
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	type_spec	table: 0x5607242779e0	spec_qualifier
colide flw	exp	table: 0x560724143e30	stat
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	abstract_declarator	table: 0x56072427fc60	type_name
colide flw	stat	table: 0x560724284f10	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	stat	table: 0x560724284420	stat
colide flw	exp	table: 0x560724143b40	stat
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	ID	table: 0x560724281e50	stat
colide flw	exp	table: 0x560724143850	stat
colide flw	assignment_exp	table: 0x56072427f880	initializer
colide flw	exp	table: 0x560724142d60	stat
colide flw	declarator	table: 0x560723ea5860	init_declarator
colide flw	declarator	table: 0x560724277e00	struct_declarator
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	struct_decl	table: 0x560723ea7050	struct_decl
colide flw	cast_exp	table: 0x560723db02d0	multiplicative_exp
colide flw	param_decl	table: 0x56072427c7c0	param_type_list
colide flw	logical_or_exp	table: 0x560724149c00	conditional_exp
colide flw	multiplicative_exp	table: 0x56072427eba0	additive_exp
colide flw	struct_decl	table: 0x560723ea32b0	type_spec
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	unary_exp	table: 0x5607241478b0	assignment_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	init_declarator	table: 0x560723ea5140	init_declarator_list
colide flw	exp	table: 0x560724284cf0	stat
colide flw	external_decl	table: 0x560723f7e3e0	translation_unit
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	unary_exp	table: 0x560723db1f70	unary_exp
colide flw	stat	table: 0x5607242835d0	stat
colide flw	logical_and_exp	table: 0x56072414b810	logical_or_exp
colide flw	abstract_declarator	table: 0x56072427d5b0	param_decl
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	ID	table: 0x560724281c80	typedef_name
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	and_exp	table: 0x56072414d1e0	exclusive_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bfc0	logical_and_exp
colide flw	const_exp	table: 0x560724278120	struct_declarator
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	ID	table: 0x560724278720	enumerator
colide flw	exp	table: 0x560723db2b40	postfix_exp
colide flw	enumerator	table: 0x560724230850	type_spec
colide flw	struct_declarator	table: 0x560723e20680	struct_decl
colide flw	exp	table: 0x560724149e20	conditional_exp
colide flw	conditional_exp	table: 0x56072414a040	conditional_exp
colide flw	type_spec	table: 0x560723ea73f0	spec_qualifier_list
colide flw	decl	table: 0x5607241468e0	compound_stat
colide flw	ID	table: 0x56072427db10	id_list
colide flw	assignment_exp	table: 0x560724147350	exp
colide flw	cast_exp	table: 0x560723db0b60	cast_exp
colide flw	exp	table: 0x5607241456b0	stat
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x56072427a2f0	direct_declarator
colide flw	[	table: 0x560724280af0	direct_abstract_declarator
teve colisao
previousEq: 	exp	, rule: 	postfix_exp	, prev: 	__[	table: 0x560723db2b40	table: 0x560723db2a30
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	const_exp	table: 0x560724280c00	direct_abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	conditional_exp	table: 0x56072414b3f0	const_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	const_exp	table: 0x56072427a400	direct_declarator
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
teve colisao
Nao foi sub	table: 0x560724280de0	]	direct_abstract_declarator
Nao foi sub	table: 0x560723db0830	(	cast_exp
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	(	table: 0x560723db5080	primary_exp
teve colisao
Nao foi sub	table: 0x560724278f70	pointer	declarator
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724283fe0	stat
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	exp	table: 0x560724142210	stat
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	exp	table: 0x560723db5190	primary_exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	exp	table: 0x5607241418e0	stat
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724284cf0	stat
colide flw	id_list	table: 0x56072427af70	direct_declarator
teve colisao
Nao foi sub	table: 0x56072427c6b0	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x56072427dc50	id_list
colide flw	,	table: 0x560723ea51f0	init_declarator_list
colide flw	,	table: 0x560723ea66d0	struct_decl
colide flw	,	table: 0x560724230960	type_spec
colide flw	,	table: 0x56072427c6b0	param_type_list
colide flw	,	table: 0x560724147240	exp
colide flw	,	table: 0x56072427e510	initializer
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x560723db1240	++	unary_exp
Nao foi sub	table: 0x560723db15f0	--	unary_exp
Nao foi sub	table: 0x560724279a40	ID	direct_declarator
Nao foi sub	table: 0x56072427a910	(	direct_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x560723db0830	cast_exp
colide flw	(	table: 0x56072427a910	direct_declarator
colide flw	(	table: 0x560723db3010	postfix_exp
colide flw	(	table: 0x56072427ae60	direct_declarator
colide flw	(	table: 0x560724281110	direct_abstract_declarator
colide flw	(	table: 0x560724280730	direct_abstract_declarator
colide flw	(	table: 0x560724279bc0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607241478b0	unary_exp	assignment_exp
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x560724142d60	stat
colide flw	and_exp	table: 0x56072414cf90	exclusive_or_exp
colide flw	exp	table: 0x560724284cf0	stat
colide flw	additive_exp	table: 0x560724282de0	shift_exp
colide flw	equality_exp	table: 0x56072414d740	and_exp
colide flw	constant	table: 0x560723db4f00	primary_exp
colide flw	inclusive_or_exp	table: 0x56072414bd70	logical_and_exp
colide flw	abstract_declarator	table: 0x560724280840	direct_abstract_declarator
colide flw	ID	table: 0x560724279a40	direct_declarator
colide flw	cast_exp	table: 0x560723dafa60	multiplicative_exp
colide flw	id_list	table: 0x56072427af70	direct_declarator
colide flw	param_type_list	table: 0x560724281220	direct_abstract_declarator
colide flw	primary_exp	table: 0x560723db28f0	postfix_exp
colide flw	postfix_exp	table: 0x560723db2380	unary_exp
colide flw	multiplicative_exp	table: 0x56072427e620	additive_exp
colide flw	direct_abstract_declarator	table: 0x560724280330	abstract_declarator
colide flw	pointer	table: 0x560724280000	abstract_declarator
colide flw	assignment_exp	table: 0x560724147130	exp
colide flw	ID	table: 0x56072427db10	id_list
colide flw	conditional_exp	table: 0x560724147e00	assignment_exp
colide flw	exclusive_or_exp	table: 0x56072414c520	inclusive_or_exp
colide flw	spec_qualifier_list	table: 0x56072427fb50	type_name
colide flw	param_decl	table: 0x56072427c570	param_type_list
colide flw	exp	table: 0x5607241418e0	stat
colide flw	relational_exp	table: 0x56072414e1b0	equality_exp
colide flw	type_name	table: 0x560723db0940	cast_exp
colide flw	param_type_list	table: 0x56072427aa20	direct_declarator
colide flw	assignment_exp	table: 0x560723db3120	postfix_exp
colide flw	declarator	table: 0x560724279cd0	direct_declarator
colide flw	*	table: 0x56072427bfc0	pointer
colide flw	exp	table: 0x560724142210	stat
colide flw	logical_or_exp	table: 0x56072414a530	conditional_exp
colide flw	unary_exp	table: 0x560723db0f70	cast_exp
colide flw	shift_exp	table: 0x56072414ec90	relational_exp
colide flw	direct_declarator	table: 0x560724279150	declarator
colide flw	exp	table: 0x560724283fe0	stat
colide flw	logical_and_exp	table: 0x56072414b5c0	logical_or_exp
teve colisao
Nao foi sub	table: 0x560724144010	)	stat
Nao foi sub	table: 0x56072414d880	&	and_exp
Nao foi sub	table: 0x56072427b9a0	*	pointer
Nao foi sub	table: 0x56072427e760	+	additive_exp
Nao foi sub	table: 0x56072427e900	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
unique var2 	storage_class_spec
upathEq	enum
upathEq	struct_or_union
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
unique var2 	constant
Unique vars: translation_unit, external_decl, 
matchUPath: translation_unit, external_decl, storage_class_spec, type_qualifier, struct_or_union, constant, 
addEq	(	nil	stat
addEq	(	nil	stat
Adding labels: Err_1, Err_2, Err_3, Err_4, Err_5, Err_6, Err_7, Err_8, Err_9, Err_10, Err_11, Err_12, Err_13, Err_14, Err_15, Err_16, Err_17, Err_18, Err_19, Err_20, Err_21, Err_22, Err_23, Err_24, Err_25, Err_26, Err_27, Err_28, Err_29, Err_30, Err_31, Err_32, Err_33, Err_34, Err_35, Err_36, Err_37, Err_38, Err_39, Err_40, Err_41, Err_42, Err_43, Err_44, Err_45, Err_46, Err_47, Err_48, 

Property 	nil
translation_unit <-  SKIP external_decl+^Err_001 !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum' ID^Err_002  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union ID^Err_003
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator ')') ('[' const_exp? ']'  /  '(' param_type_list ')'  /  '(' id_list? ')')*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...')?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID)*
initializer     <-  '{' initializer (',' initializer)* ','? '}'  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator ')' ('[' const_exp? ']'  /  '(' param_type_list? ')')*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case' const_exp^Err_004 ':'^Err_005 stat^Err_006  /  'default' ':'^Err_007 stat^Err_008  /  exp? ';'  /  compound_stat  /  'if' '('^Err_009 exp ')' stat 'else' stat^Err_010  /  'if' '('^Err_011 exp^Err_012 ')'^Err_013 stat^Err_014  /  'switch' '('^Err_015 exp^Err_016 ')'^Err_017 stat^Err_018  /  'while' '('^Err_019 exp ')' stat  /  'do' stat^Err_020 'while'^Err_021 '('^Err_022 exp^Err_023 ')'^Err_024 ';'^Err_025  /  'for' '('^Err_026 exp? ';'^Err_027 exp? ';'^Err_028 exp? ')'^Err_029 stat^Err_030  /  'goto' ID^Err_031 ';'^Err_032  /  'continue' ';'^Err_033  /  'break' ';'^Err_034  /  'return' exp? ';'^Err_035
compound_stat   <-  '{' decl* stat* '}'
exp             <-  assignment_exp (',' assignment_exp)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?' exp^Err_036 ':'^Err_037 conditional_exp^Err_038  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp^Err_039)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp^Err_040)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp^Err_041)*
exclusive_or_exp <-  and_exp ('^' and_exp^Err_042)*
and_exp         <-  equality_exp ('&' !'&' equality_exp)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp^Err_043)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp^Err_044)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp^Err_045)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp  /  '--' unary_exp  /  unary_operator cast_exp  /  'sizeof' (type_name  /  unary_exp)^Err_046  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp ']'  /  '(' (assignment_exp (',' assignment_exp)*)? ')'  /  '.' ID^Err_047  /  '->' ID^Err_048  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp ')'
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

End DeepUPath

Annotating All expressions
Adding labels: Err_1, Err_2, Err_3, Err_4, Err_5, Err_6, Err_7, Err_8, Err_9, Err_10, Err_11, Err_12, Err_13, Err_14, Err_15, Err_16, Err_17, Err_18, Err_19, Err_20, Err_21, Err_22, Err_23, Err_24, Err_25, Err_26, Err_27, Err_28, Err_29, Err_30, Err_31, Err_32, Err_33, Err_34, Err_35, Err_36, Err_37, Err_38, Err_39, Err_40, Err_41, Err_42, Err_43, Err_44, Err_45, Err_46, Err_47, Err_48, Err_49, Err_50, Err_51, Err_52, Err_53, Err_54, Err_55, Err_56, Err_57, Err_58, Err_59, Err_60, Err_61, Err_62, Err_63, Err_64, Err_65, Err_66, Err_67, Err_68, Err_69, Err_70, Err_71, Err_72, Err_73, Err_74, Err_75, Err_76, Err_77, Err_78, Err_79, Err_80, Err_81, Err_82, Err_83, Err_84, Err_85, Err_86, Err_87, Err_88, Err_89, Err_90, Err_91, Err_92, Err_93, Err_94, Err_95, Err_96, Err_97, Err_98, Err_99, Err_100, Err_101, Err_102, Err_103, Err_104, Err_105, Err_106, Err_107, Err_108, Err_109, Err_110, Err_111, Err_112, Err_113, Err_114, 

Property 	nil
translation_unit <-  SKIP external_decl+ !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat^Err_001  /  decl_spec function_def^Err_002
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'^Err_003  /  decl_spec decl^Err_004
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{'^Err_005 enumerator^Err_006 (',' enumerator^Err_007)* '}'^Err_008  /  'enum' ID^Err_009  /  struct_or_union ID? '{'^Err_010 struct_decl+^Err_011 '}'^Err_012  /  struct_or_union ID^Err_013
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator^Err_014)*
init_declarator <-  declarator '='^Err_015 initializer^Err_016  /  declarator
struct_decl     <-  spec_qualifier struct_declarator^Err_017 (',' struct_declarator^Err_018)* ';'^Err_019  /  spec_qualifier struct_decl^Err_020
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp^Err_021  /  declarator
enumerator      <-  ID '='^Err_022 const_exp^Err_023  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator^Err_024 ')'^Err_025) ('[' const_exp? ']'^Err_026  /  '(' param_type_list^Err_027 ')'^Err_028  /  '(' id_list? ')'^Err_029)*
pointer         <-  '*' type_qualifier* pointer^Err_030  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl^Err_031)* (',' '...'^Err_032)?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID^Err_033)*
initializer     <-  '{' initializer^Err_034 (',' initializer^Err_035)* ','? '}'^Err_036  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator^Err_037 ')'^Err_038 ('[' const_exp? ']'^Err_039  /  '(' param_type_list? ')'^Err_040)*
typedef_name    <-  ID
stat            <-  ID ':'^Err_041 stat^Err_042  /  'case' const_exp^Err_043 ':'^Err_044 stat^Err_045  /  'default' ':'^Err_046 stat^Err_047  /  exp? ';'  /  compound_stat  /  'if' '('^Err_048 exp^Err_049 ')'^Err_050 stat^Err_051 'else'^Err_052 stat^Err_053  /  'if' '('^Err_054 exp^Err_055 ')'^Err_056 stat^Err_057  /  'switch' '('^Err_058 exp^Err_059 ')'^Err_060 stat^Err_061  /  'while' '('^Err_062 exp^Err_063 ')'^Err_064 stat^Err_065  /  'do' stat^Err_066 'while'^Err_067 '('^Err_068 exp^Err_069 ')'^Err_070 ';'^Err_071  /  'for' '('^Err_072 exp? ';'^Err_073 exp? ';'^Err_074 exp? ')'^Err_075 stat^Err_076  /  'goto' ID^Err_077 ';'^Err_078  /  'continue' ';'^Err_079  /  'break' ';'^Err_080  /  'return' exp? ';'^Err_081
compound_stat   <-  '{' decl* stat* '}'^Err_082
exp             <-  assignment_exp (',' assignment_exp^Err_083)*
assignment_exp  <-  unary_exp assignment_operator^Err_084 assignment_exp^Err_085  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?'^Err_086 exp^Err_087 ':'^Err_088 conditional_exp^Err_089  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp^Err_090)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp^Err_091)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp^Err_092)*
exclusive_or_exp <-  and_exp ('^' and_exp^Err_093)*
and_exp         <-  equality_exp ('&' !'&' equality_exp^Err_094)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp^Err_095)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp^Err_096)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp^Err_097)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp^Err_098)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp^Err_099)*
cast_exp        <-  '(' type_name^Err_100 ')'^Err_101 cast_exp^Err_102  /  unary_exp
unary_exp       <-  '++' unary_exp^Err_103  /  '--' unary_exp^Err_104  /  unary_operator cast_exp^Err_105  /  'sizeof' (type_name  /  unary_exp)^Err_106  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp^Err_107 ']'^Err_108  /  '(' (assignment_exp (',' assignment_exp^Err_109)*)? ')'^Err_110  /  '.' ID^Err_111  /  '->' ID^Err_112  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp^Err_113 ')'^Err_114
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

End All

UPath Deep
Uunique
return	 = 	1
continue	 = 	1
|=	 = 	1
break	 = 	1
&&	 = 	1
static	 = 	1
]	 = 	3
^	 = 	1
<<=	 = 	1
||	 = 	1
[	 = 	3
enum	 = 	2
if	 = 	2
default	 = 	1
++	 = 	2
while	 = 	2
case	 = 	1
typedef	 = 	1
void	 = 	1
%=	 = 	1
+=	 = 	1
do	 = 	1
SKIP	 = 	1
else	 = 	1
extern	 = 	1
int	 = 	1
?	 = 	1
->	 = 	1
:	 = 	5
;	 = 	10
float	 = 	1
const	 = 	1
switch	 = 	1
unsigned	 = 	1
-	 = 	2
register	 = 	1
==	 = 	1
<=	 = 	1
)	 = 	14
*	 = 	4
+	 = 	2
,	 = 	10
%	 = 	1
&	 = 	2
short	 = 	1
(	 = 	14
!	 = 	1
/=	 = 	1
-=	 = 	1
>=	 = 	1
ENUMERATION_CONST	 = 	1
*=	 = 	1
for	 = 	1
auto	 = 	1
^=	 = 	1
STRING	 = 	1
INT_CONST	 = 	1
...	 = 	1
<<	 = 	1
signed	 = 	1
.	 = 	1
>>=	 = 	1
sizeof	 = 	1
--	 = 	2
/	 = 	1
>>	 = 	1
volatile	 = 	1
>	 = 	1
<	 = 	1
double	 = 	1
~	 = 	1
!=	 = 	1
&=	 = 	1
=	 = 	3
FLOAT_CONST	 = 	1
{	 = 	4
|	 = 	1
}	 = 	4
char	 = 	1
ID	 = 	15
goto	 = 	1
union	 = 	1
CHAR_CONST	 = 	1
long	 = 	1
struct	 = 	1
Token 	1	 = 	65
Token 	2	 = 	8
Token 	3	 = 	3
Token 	4	 = 	3
Token 	5	 = 	1
Token 	6	 = 	nil
Token 	7	 = 	nil
Token 	8	 = 	nil
Token 	9	 = 	nil
Token 	10	 = 	2
Unique tokens (# 64): !, !=, %, %=, &&, &=, *=, +=, -=, ->, ., ..., /, /=, <, <<, <<=, <=, ==, >, >=, >>, >>=, ?, CHAR_CONST, ENUMERATION_CONST, FLOAT_CONST, INT_CONST, STRING, ^, ^=, auto, break, case, char, const, continue, default, do, double, else, extern, float, for, goto, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, |, |=, ||, ~
calcTail
translation_unit: 	;, }
external_decl: 	;, }
function_def: 	}
decl_spec: 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
decl: 	;
storage_class_spec: 	auto, extern, register, static, typedef
type_spec: 	__ID, char, double, float, int, long, short, signed, unsigned, void, }
type_qualifier: 	const, volatile
struct_or_union: 	struct, union
init_declarator_list: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
init_declarator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_decl: 	;
spec_qualifier_list: 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier: 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_declarator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
declarator: 	), ], __ID
direct_declarator: 	), ], __ID
pointer: 	*, const, volatile
param_type_list: 	), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_decl: 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
id_list: 	__ID
initializer: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
type_name: 	), *, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
abstract_declarator: 	), *, ], const, volatile
direct_abstract_declarator: 	), ]
typedef_name: 	__ID
stat: 	;, }
compound_stat: 	}
exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
assignment_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
assignment_operator: 	%=, &=, *=, +=, -=, /=, <<=, =, >>=, ^=, |=
conditional_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
const_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
logical_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
logical_and_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
inclusive_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
exclusive_or_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
and_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
equality_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
relational_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
shift_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
additive_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
multiplicative_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
cast_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_exp: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
postfix_exp: 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
primary_exp: 	), __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
constant: 	__CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __INT_CONST
unary_operator: 	!, &, *, +, -, ~
COMMENT: 	*/
INT_CONST: 	0, 1, 2, 3, 4, 5, 6, 7, 8, L, U, __DIGIT, __XDIGIT, l, u
FLOAT_CONST: 	., F, L, __DIGIT, __XDIGIT, f, l
XDIGIT: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, a, b, c, d, e, f
DIGIT: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9
CHAR_CONST: 	'
STRING: 	"
ESC_CHAR: 	", ', 0, 1, 2, 3, 4, 5, 6, 7, ?, \\, __XDIGIT, a, b, f, n, r, t, v
ENUMERATION_CONST: 	__ID
ID: 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, _, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z
KEYWORDS: 	auto, break, case, char, const, continue, default, do, double, else, enum, extern, float, for, goto, if, int, long, register, return, short, signed, sizeof, static, struct, switch, typedef, union, unsigned, void, volatile, while
SPACE: 		, 
, , , ,  , __COMMENT
SKIP: 		, 
, , , ,  , __COMMENT, __empty
Global Prefix
translation_unit: 	
external_decl: 	;, }
function_def: 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
decl_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
decl: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
storage_class_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
type_spec: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
type_qualifier: 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
struct_or_union: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
init_declarator_list: 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
init_declarator: 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
struct_decl: 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier_list: 	(, sizeof
spec_qualifier: 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
struct_declarator: 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator: 	,, {
declarator: 	(, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
direct_declarator: 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
pointer: 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
param_type_list: 	(
param_decl: 	(, ,
id_list: 	(
initializer: 	,, =, {
type_name: 	(, sizeof
abstract_declarator: 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
direct_abstract_declarator: 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
typedef_name: 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
stat: 	), :, ;, do, else, {, }
compound_stat: 	), :, ;, ], __ID, do, else, {, }
exp: 	(, ), :, ;, ?, [, do, else, return, {, }
assignment_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
assignment_operator: 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
conditional_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
const_exp: 	:, =, [, case
logical_or_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
logical_and_exp: 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
inclusive_or_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
exclusive_or_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |, |=, ||, }
and_exp: 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
equality_exp: 	%=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
relational_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, ==, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
shift_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<=, <=, =, ==, >, >=, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
additive_exp: 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
multiplicative_exp: 	!=, %=, &, &&, &=, (, ), *=, +, +=, ,, -, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
cast_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
unary_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
postfix_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
primary_exp: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
constant: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
unary_operator: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
COMMENT: 		, 
, , , ,  , __COMMENT
INT_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
FLOAT_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
XDIGIT: 	__XDIGIT, x
DIGIT: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, __DIGIT, case, do, else, return, sizeof, {, |, |=, ||, }, ~
CHAR_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
STRING: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ESC_CHAR: 	
ENUMERATION_CONST: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ID: 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, ->, ., /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ], ^, ^=, __ID, auto, case, char, const, do, double, else, enum, extern, float, goto, int, long, register, return, short, signed, sizeof, static, struct, typedef, union, unsigned, void, volatile, {, |, |=, ||, }, ~
KEYWORDS: 	
SPACE: 	
SKIP: 	
calcPrefix
decl	 -> 
	(decl, function_def): 	), ;, ], __ID
	(decl, external_decl): 	;, }
	(decl, compound_stat): 	;, {
	(decl, decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__static	 -> 
	(__static, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
logical_or_exp	 -> 
	(logical_or_exp, conditional_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
	(logical_or_exp, conditional_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
type_spec	 -> 
	(type_spec, spec_qualifier_list): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_spec, spec_qualifier): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_spec, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__for	 -> 
	(__for, stat): 	), :, ;, do, else, {, }
struct_or_union	 -> 
	(struct_or_union, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(struct_or_union, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__auto	 -> 
	(__auto, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__const	 -> 
	(__const, type_qualifier): 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__/=	 -> 
	(__/=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__||	 -> 
	(__||, logical_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__do	 -> 
	(__do, stat): 	), :, ;, do, else, {, }
type_qualifier	 -> 
	(type_qualifier, spec_qualifier): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(type_qualifier, pointer): 	*, const, volatile
	(type_qualifier, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(type_qualifier, pointer): 	*, const, volatile
	(type_qualifier, spec_qualifier_list): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
init_declarator	 -> 
	(init_declarator, init_declarator_list): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(init_declarator, init_declarator_list): 	,
exclusive_or_exp	 -> 
	(exclusive_or_exp, inclusive_or_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
	(exclusive_or_exp, inclusive_or_exp): 	|
__else	 -> 
	(__else, stat): 	;, }
primary_exp	 -> 
	(primary_exp, postfix_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__*=	 -> 
	(__*=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__enum	 -> 
	(__enum, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(__enum, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
conditional_exp	 -> 
	(conditional_exp, assignment_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
	(conditional_exp, conditional_exp): 	:
	(conditional_exp, const_exp): 	:, =, [, case
direct_declarator	 -> 
	(direct_declarator, declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__goto	 -> 
	(__goto, stat): 	), :, ;, do, else, {, }
__if	 -> 
	(__if, stat): 	), :, ;, do, else, {, }
	(__if, stat): 	), :, ;, do, else, {, }
__long	 -> 
	(__long, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__++	 -> 
	(__++, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__++, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
__char	 -> 
	(__char, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__struct	 -> 
	(__struct, struct_or_union): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__->	 -> 
	(__->, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
__&	 -> 
	(__&, and_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__&, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
spec_qualifier_list	 -> 
	(spec_qualifier_list, type_name): 	(, sizeof
__~	 -> 
	(__~, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__>>	 -> 
	(__>>, shift_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__]	 -> 
	(__], postfix_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__], direct_declarator): 	), *, ++, --, [, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__], direct_abstract_declarator): 	), *, ++, --, [, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__case	 -> 
	(__case, stat): 	), :, ;, do, else, {, }
logical_and_exp	 -> 
	(logical_and_exp, logical_or_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, }
	(logical_and_exp, logical_or_exp): 	||
stat	 -> 
	(stat, stat): 	)
	(stat, stat): 	)
	(stat, stat): 	:
	(stat, stat): 	:
	(stat, stat): 	else
	(stat, stat): 	)
	(stat, compound_stat): 	;, {, }
	(stat, stat): 	do
	(stat, stat): 	)
	(stat, stat): 	)
	(stat, stat): 	:
abstract_declarator	 -> 
	(abstract_declarator, type_name): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(abstract_declarator, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(abstract_declarator, direct_abstract_declarator): 	(
function_def	 -> 
	(function_def, external_decl): 	;, }
	(function_def, function_def): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__union	 -> 
	(__union, struct_or_union): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
initializer	 -> 
	(initializer, init_declarator): 	=
	(initializer, initializer): 	{
	(initializer, initializer): 	,
__&=	 -> 
	(__&=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
direct_abstract_declarator	 -> 
	(direct_abstract_declarator, abstract_declarator): 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__...	 -> 
	(__..., param_type_list): 	,
const_exp	 -> 
	(const_exp, direct_abstract_declarator): 	[
	(const_exp, stat): 	case
	(const_exp, enumerator): 	=
	(const_exp, direct_declarator): 	[
	(const_exp, struct_declarator): 	:
__<<=	 -> 
	(__<<=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__double	 -> 
	(__double, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__{	 -> 
	(__{, initializer): 	,, =, {
	(__{, type_spec): 	__ID, struct, union
	(__{, compound_stat): 	), :, ;, ], __ID, do, else, {, }
	(__{, type_spec): 	__ID, enum
__void	 -> 
	(__void, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__=	 -> 
	(__=, enumerator): 	__ID
	(__=, init_declarator): 	), ], __ID
	(__=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
storage_class_spec	 -> 
	(storage_class_spec, decl_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__<=	 -> 
	(__<=, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
equality_exp	 -> 
	(equality_exp, and_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(equality_exp, and_exp): 	&
shift_exp	 -> 
	(shift_exp, relational_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, ==, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(shift_exp, relational_exp): 	<, <=, >, >=
__,	 -> 
	(__,, struct_decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, initializer): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, postfix_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, param_type_list): 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__,, id_list): 	__ID
	(__,, initializer): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, type_spec): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, init_declarator_list): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__,, param_type_list): 	), *, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__typedef	 -> 
	(__typedef, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__--	 -> 
	(__--, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__--, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
init_declarator_list	 -> 
	(init_declarator_list, decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__int	 -> 
	(__int, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__!=	 -> 
	(__!=, equality_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__&&	 -> 
	(__&&, logical_and_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__%=	 -> 
	(__%=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
enumerator	 -> 
	(enumerator, type_spec): 	{
	(enumerator, type_spec): 	,
pointer	 -> 
	(pointer, abstract_declarator): 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(pointer, pointer): 	*, const, volatile
	(pointer, declarator): 	(, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(pointer, abstract_declarator): 	(, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
__extern	 -> 
	(__extern, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__*	 -> 
	(__*, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__*, pointer): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__*, pointer): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__*, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
cast_exp	 -> 
	(cast_exp, unary_exp): 	!, &, *, +, -, ~
	(cast_exp, cast_exp): 	)
	(cast_exp, multiplicative_exp): 	%, *, /
	(cast_exp, multiplicative_exp): 	!=, %=, &, &&, &=, (, ), *=, +, +=, ,, -, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
assignment_operator	 -> 
	(assignment_operator, assignment_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__>>=	 -> 
	(__>>=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__float	 -> 
	(__float, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
multiplicative_exp	 -> 
	(multiplicative_exp, additive_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(multiplicative_exp, additive_exp): 	+, -
postfix_exp	 -> 
	(postfix_exp, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__-=	 -> 
	(__-=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__default	 -> 
	(__default, stat): 	), :, ;, do, else, {, }
__^=	 -> 
	(__^=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
additive_exp	 -> 
	(additive_exp, shift_exp): 	!=, %=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <, <<=, <=, =, ==, >, >=, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(additive_exp, shift_exp): 	<<, >>
SKIP	 -> 
	(SKIP, translation_unit): 	
id_list	 -> 
	(id_list, direct_declarator): 	(
__(	 -> 
	(__(, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
	(__(, direct_declarator): 	), ], __ID
	(__(, direct_abstract_declarator): 	(, *, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__(, stat): 	if
	(__(, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(__(, cast_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
	(__(, direct_declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__(, stat): 	for
	(__(, direct_declarator): 	), ], __ID
	(__(, direct_abstract_declarator): 	), ]
	(__(, stat): 	while
	(__(, stat): 	if
	(__(, stat): 	while
	(__(, stat): 	switch
__unsigned	 -> 
	(__unsigned, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
struct_declarator	 -> 
	(struct_declarator, struct_decl): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(struct_declarator, struct_decl): 	,
__+	 -> 
	(__+, additive_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__+, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__>	 -> 
	(__>, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__;	 -> 
	(__;, stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, return, short, signed, unsigned, void, volatile, }
	(__;, stat): 	)
	(__;, stat): 	__ID
	(__;, stat): 	break
	(__;, stat): 	), *, ++, --, :, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, do, double, else, float, int, long, short, signed, unsigned, void, volatile, {, }
	(__;, stat): 	(, ), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, struct_decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, stat): 	), *, ++, --, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__;, decl): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__;, stat): 	continue
__?	 -> 
	(__?, conditional_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__-	 -> 
	(__-, additive_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__-, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__!	 -> 
	(__!, unary_operator): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
ENUMERATION_CONST	 -> 
	(ENUMERATION_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__switch	 -> 
	(__switch, stat): 	), :, ;, do, else, {, }
FLOAT_CONST	 -> 
	(FLOAT_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__/	 -> 
	(__/, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
spec_qualifier	 -> 
	(spec_qualifier, struct_decl): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(spec_qualifier, struct_decl): 	;, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__continue	 -> 
	(__continue, stat): 	), :, ;, do, else, {, }
__|	 -> 
	(__|, inclusive_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
INT_CONST	 -> 
	(INT_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
constant	 -> 
	(constant, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
param_decl	 -> 
	(param_decl, param_type_list): 	(
	(param_decl, param_type_list): 	,
__register	 -> 
	(__register, storage_class_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
STRING	 -> 
	(STRING, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__)	 -> 
	(__), stat): 	), *, ++, --, ;, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	), ], __ID
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__), primary_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_abstract_declarator): 	), *, ], const, volatile
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), cast_exp): 	), *, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), postfix_exp): 	(, ), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__), direct_declarator): 	(, __ID
	(__), direct_abstract_declarator): 	(, ), *, ..., ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(__), stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
param_type_list	 -> 
	(param_type_list, direct_declarator): 	(
	(param_type_list, direct_abstract_declarator): 	(
translation_unit	 -> 
compound_stat	 -> 
	(compound_stat, function_def): 	), ;, ], __ID
	(compound_stat, stat): 	), :, ;, do, else, {, }
exp	 -> 
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, stat): 	return
	(exp, stat): 	(
	(exp, stat): 	(
	(exp, primary_exp): 	(
	(exp, postfix_exp): 	[
	(exp, stat): 	), :, ;, do, else, {, }
	(exp, stat): 	(
	(exp, conditional_exp): 	?
	(exp, stat): 	;
	(exp, stat): 	;
	(exp, stat): 	(
__==	 -> 
	(__==, equality_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__.	 -> 
	(__., postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
assignment_exp	 -> 
	(assignment_exp, assignment_exp): 	%=, &=, *=, +=, -=, /=, <<=, =, >>=, ^=, |=
	(assignment_exp, postfix_exp): 	,
	(assignment_exp, postfix_exp): 	(
	(assignment_exp, initializer): 	,, =, {
	(assignment_exp, exp): 	,
	(assignment_exp, exp): 	(, ), :, ;, ?, [, do, else, return, {, }
__|=	 -> 
	(__|=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
typedef_name	 -> 
	(typedef_name, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__break	 -> 
	(__break, stat): 	), :, ;, do, else, {, }
__short	 -> 
	(__short, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
__sizeof	 -> 
	(__sizeof, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
declarator	 -> 
	(declarator, function_def): 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, struct_declarator): 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(declarator, direct_declarator): 	(
	(declarator, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, init_declarator): 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, init_declarator): 	,, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(declarator, struct_declarator): 	,, __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_operator	 -> 
	(unary_operator, unary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
__[	 -> 
	(__[, direct_abstract_declarator): 	), ]
	(__[, direct_declarator): 	), ], __ID
	(__[, postfix_exp): 	), ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING
type_name	 -> 
	(type_name, cast_exp): 	(
	(type_name, unary_exp): 	sizeof
__%	 -> 
	(__%, multiplicative_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__+=	 -> 
	(__+=, assignment_operator): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__while	 -> 
	(__while, stat): 	), :, ;, do, else, {, }
	(__while, stat): 	;, }
__<	 -> 
	(__<, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__volatile	 -> 
	(__volatile, type_qualifier): 	), *, ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
inclusive_or_exp	 -> 
	(inclusive_or_exp, logical_and_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |=, ||, }
	(inclusive_or_exp, logical_and_exp): 	&&
__<<	 -> 
	(__<<, shift_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__>=	 -> 
	(__>=, relational_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__return	 -> 
	(__return, stat): 	), :, ;, do, else, {, }
decl_spec	 -> 
	(decl_spec, decl): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(decl_spec, param_decl): 	__ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(decl_spec, decl): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(decl_spec, function_def): 	;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
relational_exp	 -> 
	(relational_exp, equality_exp): 	%=, &, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }
	(relational_exp, equality_exp): 	!=, ==
__}	 -> 
	(__}, type_spec): 	;
	(__}, compound_stat): 	;, {, }
	(__}, type_spec): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__}, initializer): 	), *, ++, ,, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
and_exp	 -> 
	(and_exp, exclusive_or_exp): 	%=, &&, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, case, do, else, return, {, |, |=, ||, }
	(and_exp, exclusive_or_exp): 	^
__^	 -> 
	(__^, exclusive_or_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
unary_exp	 -> 
	(unary_exp, cast_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, +=, ,, -, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, {, |, |=, ||, }, ~
	(unary_exp, unary_exp): 	sizeof
	(unary_exp, assignment_exp): 	%=, &=, (, ), *=, +=, ,, -=, /=, :, ;, <<=, =, >>=, ?, [, ^=, do, else, return, {, |=, }
	(unary_exp, unary_exp): 	--
	(unary_exp, unary_exp): 	++
__:	 -> 
	(__:, stat): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, stat): 	__ID
	(__:, struct_declarator): 	), ,, ], __ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
	(__:, stat): 	default
	(__:, conditional_exp): 	), *, ++, --, ], __CHAR_CONST, __ENUMERATION_CONST, __FLOAT_CONST, __ID, __INT_CONST, __STRING, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
__signed	 -> 
	(__signed, type_spec): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
ID	 -> 
	(ID, type_spec): 	struct, union
	(ID, id_list): 	,
	(ID, postfix_exp): 	.
	(ID, stat): 	goto
	(ID, postfix_exp): 	->
	(ID, id_list): 	(
	(ID, type_spec): 	enum
	(ID, stat): 	), :, ;, do, else, {, }
	(ID, typedef_name): 	), ;, ], __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, {, }
	(ID, primary_exp): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
	(ID, enumerator): 	,, {
	(ID, type_spec): 	struct, union
	(ID, enumerator): 	,, {
	(ID, direct_declarator): 	(, *, ,, ;, __ID, auto, char, const, double, extern, float, int, long, register, short, signed, static, typedef, unsigned, void, volatile, }
	(ID, type_spec): 	enum
CHAR_CONST	 -> 
	(CHAR_CONST, constant): 	!, !=, %, %=, &, &&, &=, (, ), *, *=, +, ++, +=, ,, -, --, -=, /, /=, :, ;, <, <<, <<=, <=, =, ==, >, >=, >>, >>=, ?, [, ^, ^=, case, do, else, return, sizeof, {, |, |=, ||, }, ~
external_decl	 -> 
	(external_decl, translation_unit): 	;, }
struct_decl	 -> 
	(struct_decl, type_spec): 	;
	(struct_decl, struct_decl): 	__ID, char, const, double, float, int, long, short, signed, unsigned, void, volatile, }
isPrefixUniqueFlw s = 	SKIP	translation_unit
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	function_def	table: 0x560724714610	function_def
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	pointer	table: 0x56072452c100	declarator
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072469c310	{	type_spec
Nao foi sub	table: 0x560724294920	assignment_exp	exp
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	declarator	table: 0x560724331270	function_def
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x560724331380	function_def
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
colide flw	function_def	table: 0x560724714610	function_def
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
foi uniqueEq	storage_class_spec	decl_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; auto ; int ; ] ; { ; float ; unsigned ; char ; } ; extern ; const ; double ; long ; ; ; 
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072452e880	type_qualifier	pointer
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	declarator	table: 0x560724331270	function_def
colide flw	function_def	table: 0x560724714610	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	stat	table: 0x5607243afab0	stat
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	exp	table: 0x5607243b2420	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	function_def	table: 0x560724714610	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	stat	table: 0x5607243afab0	stat
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x56072469cf80	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x56072469d5d0	{	type_spec
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x56072469d5d0	type_spec
colide flw	{	table: 0x560724293fc0	compound_stat
teve colisao
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	initializer	table: 0x5607245311d0	initializer
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x560724294490	}	compound_stat
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x56072469c020	type_spec
teve colisao
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl	table: 0x560724331380	function_def
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560724293fc0	compound_stat
colide flw	{	table: 0x56072469c310	type_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x560724294490	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl	table: 0x560724331380	function_def
colide flw	decl	table: 0x5607242940d0	compound_stat
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	decl	table: 0x560724470a70	decl
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
teve colisao
Nao foi sub	table: 0x5607242958f0	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x56072452b9f0	enumerator
colide flw	=	table: 0x5607242958f0	assignment_operator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x560724470a70	decl	decl
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	decl	table: 0x560724331380	function_def
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	:	table: 0x5607243ad210	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	:	table: 0x5607243acb60	stat
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x56072452f930	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x56072469c530	type_spec
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x560724530a20	id_list
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x560724470a70	decl	decl
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724715050	decl_spec	decl
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724715050	decl_spec	decl
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243ad210	:	stat
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x5607243acb60	stat
colide flw	:	table: 0x5607243ad210	stat
colide flw	:	table: 0x560724297720	conditional_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243ac850	ID	typedef_name
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
teve colisao
Nao foi sub	table: 0x56072469fdd0	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x56072469fdd0	init_declarator
colide flw	=	table: 0x5607242958f0	assignment_operator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243ac850	ID	typedef_name
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072452dc30	(	direct_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a6580	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x5607243ab6c0	direct_abstract_declarator
colide flw	[	table: 0x5607246a6580	postfix_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	*	table: 0x56072452ed90	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
teve colisao
Nao foi sub	table: 0x56072452a710	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x560724530230	declarator	param_decl
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	*	table: 0x56072452e770	pointer
teve colisao
Nao foi sub	table: 0x56072452a710	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	param_type_list
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x56072469c530	type_spec
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x560724293fc0	compound_stat
teve colisao
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	{	table: 0x560724293fc0	compound_stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	compound_stat	table: 0x5607243ae920	stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
teve colisao
Nao foi sub	table: 0x56072452f930	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x56072452f480	,	param_type_list
Nao foi sub	table: 0x560724294490	}	compound_stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	type_name	table: 0x5607246a5970	unary_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exp	table: 0x5607243b1640	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a8e60	primary_exp
colide flw	)	table: 0x5607243b02d0	stat
teve colisao
Nao foi sub	table: 0x56072452d0c0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x56072452d0c0	direct_declarator
colide flw	[	table: 0x5607246a6580	postfix_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452d6e0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x56072452be30	ID	enumerator
Nao foi sub	table: 0x56072452be30	ID	enumerator
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x560724297720	:	conditional_exp
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724297720	conditional_exp
colide flw	:	table: 0x56072452b1a0	struct_declarator
colide flw	:	table: 0x5607243ad210	stat
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	__case	stat
isPrefixUniqueFlw s = 	const_exp	stat
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
teve colisao
Nao foi sub	table: 0x56072452b1a0	:	struct_declarator
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x5607243acb60	stat
colide flw	:	table: 0x56072452b1a0	struct_declarator
colide flw	:	table: 0x560724297720	conditional_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	__default	stat
isPrefixUniqueFlw s = 	__:	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x5607247140c0	compound_stat	function_def
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x5607243af670	stat
teve colisao
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243af780	stat
teve colisao
Nao foi sub	table: 0x560724532ea0	pointer	abstract_declarator
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	stat	stat
colide flw	compound_stat	table: 0x5607243ae920	stat
colide flw	;	table: 0x5607243b4170	stat
colide flw	;	table: 0x5607243b1860	stat
colide flw	stat	table: 0x5607243afab0	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	stat	table: 0x5607243b03e0	stat
teve colisao
isPrefixUniqueFlw s = 	__else	stat
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x5607243aea70	stat
teve colisao
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243aeaf0	stat
teve colisao
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607246a8e60	primary_exp
colide flw	)	table: 0x5607243b02d0	stat
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	__switch	stat
isPrefixUniqueFlw s = 	__(	stat
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x5607243b1420	stat
teve colisao
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243b1530	stat
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	exp	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	__do	stat
isPrefixUniqueFlw s = 	stat	stat
colide flw	compound_stat	table: 0x5607243ae920	stat
teve colisao
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x5607243b08d0	stat
teve colisao
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243b09e0	stat
teve colisao
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607246a8e60	primary_exp
colide flw	)	table: 0x5607243b02d0	stat
teve colisao
Nao foi sub	table: 0x5607244728d0	;	struct_decl
isPrefixUniqueFlw s = 	__for	stat
isPrefixUniqueFlw s = 	__(	stat
Nao foi sub	table: 0x5607242955f0	conditional_exp	assignment_exp
Nao foi sub	table: 0x5607243b4170	;	stat
isPrefixUniqueFlw s = 	__;	stat
colide flw	;	table: 0x5607244728d0	struct_decl
colide flw	;	table: 0x5607243b4170	stat
colide flw	;	table: 0x5607243b3490	stat
colide flw	;	table: 0x5607243b1860	stat
colide flw	;	table: 0x5607243ae700	stat
colide flw	;	table: 0x560724715370	decl
colide flw	;	table: 0x5607243b2600	stat
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607243b4170	;	stat
isPrefixUniqueFlw s = 	__;	stat
colide flw	;	table: 0x5607244728d0	struct_decl
colide flw	;	table: 0x5607243b4170	stat
colide flw	;	table: 0x5607243b3490	stat
colide flw	;	table: 0x5607243b1860	stat
colide flw	;	table: 0x5607243ae700	stat
colide flw	;	table: 0x560724715370	decl
colide flw	;	table: 0x5607243b2310	stat
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x56072452d900	)	direct_declarator
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x560724715370	;	decl
isPrefixUniqueFlw s = 	__goto	stat
isPrefixUniqueFlw s = 	ID	stat
isPrefixUniqueFlw s = 	__continue	stat
isPrefixUniqueFlw s = 	__break	stat
isPrefixUniqueFlw s = 	__return	stat
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b2310	;	stat
Nao foi sub	table: 0x5607243b2600	;	stat
Nao foi sub	table: 0x5607243ae700	;	stat
Nao foi sub	table: 0x560724715370	;	decl
Nao foi sub	table: 0x5607245310c0	{	initializer
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x5607245310c0	initializer
colide flw	{	table: 0x56072469d5d0	type_spec
colide flw	{	table: 0x56072469c310	type_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x56072469c9b0	}	type_spec
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x5607243afab0	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	declarator	table: 0x56072469fc90	init_declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x56072469fdd0	init_declarator
colide flw	=	table: 0x56072452b9f0	enumerator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x56072452b9f0	enumerator
colide flw	=	table: 0x56072469fdd0	init_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	logical_or_exp	conditional_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
teve colisao
isPrefixUniqueFlw s = 	__?	conditional_exp
isPrefixUniqueFlw s = 	exp	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x56072452b1a0	:	struct_declarator
isPrefixUniqueFlw s = 	__:	conditional_exp
colide flw	:	table: 0x5607243acb60	stat
colide flw	:	table: 0x5607243ad210	stat
colide flw	:	table: 0x56072452b1a0	struct_declarator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x560724294920	assignment_exp	exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	stat	table: 0x5607243ad320	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
isPrefixUniqueFlw s = 	__||	logical_or_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243ad320	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
isPrefixUniqueFlw s = 	__&&	logical_and_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	const_exp	table: 0x56072452bb00	enumerator
teve colisao
isPrefixUniqueFlw s = 	__|	inclusive_or_exp
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
isPrefixUniqueFlw s = 	__^	exclusive_or_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	+	table: 0x560724531580	additive_exp
teve colisao
Nao foi sub	table: 0x5607246a9d50	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x5607246a9d50	unary_operator
teve colisao
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	+	table: 0x560724531580	additive_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
teve colisao
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	+	table: 0x560724531580	additive_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	exp	table: 0x5607243ae520	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607243b1640	stat
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	&	table: 0x56072429b010	and_exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	+	table: 0x560724531580	additive_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	declarator	table: 0x56072452af90	struct_declarator
teve colisao
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	+	table: 0x560724531580	additive_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	&	table: 0x56072429b010	and_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607243b2710	stat
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	exp	table: 0x5607243af890	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
teve colisao
Nao foi sub	table: 0x5607246aa0d0	+	unary_operator
Nao foi sub	table: 0x5607246aa220	-	unary_operator
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	*	table: 0x56072452e770	pointer
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	exp	table: 0x5607243b2710	stat
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	function_def	table: 0x560724714610	function_def
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	+	table: 0x560724531580	additive_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b1640	stat
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x5607246a7df0	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
teve colisao
Nao foi sub	table: 0x5607246a6b60	(	postfix_exp
Nao foi sub	table: 0x5607246a7f40	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x5607246a7f40	postfix_exp
teve colisao
Nao foi sub	table: 0x5607246a6b60	(	postfix_exp
Nao foi sub	table: 0x560724531580	+	additive_exp
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	unary_exp	table: 0x5607246a4ea0	unary_exp
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	+	table: 0x560724531580	additive_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	*	table: 0x56072452e770	pointer
colide flw	stat	table: 0x5607243af040	stat
colide flw	stat	table: 0x5607243afab0	stat
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	-	table: 0x560724531720	additive_exp
colide flw	pointer	table: 0x560724532ff0	abstract_declarator
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	unary_exp	table: 0x5607246a5250	unary_exp
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	declarator	table: 0x560724331270	function_def
colide flw	stat	table: 0x5607243acc70	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	cast_exp	table: 0x5607246a3e20	multiplicative_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	pointer	table: 0x56072452c100	declarator
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	function_def	table: 0x560724714610	function_def
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b0d10	stat
teve colisao
Nao foi sub	table: 0x560724531580	+	additive_exp
isPrefixUniqueFlw s = 	__sizeof	unary_exp
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	declarator	table: 0x56072469fc90	init_declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_name	table: 0x5607246a5970	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	unary_exp	table: 0x5607246a4ea0	unary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	exp	table: 0x5607243af890	stat
colide flw	unary_exp	table: 0x5607246a5250	unary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	function_def	table: 0x560724714610	function_def
colide flw	cast_exp	table: 0x5607246a3e20	multiplicative_exp
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x5607243ab6c0	direct_abstract_declarator
colide flw	[	table: 0x56072452d0c0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x56072452d3b0	]	direct_declarator
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607242955f0	conditional_exp	assignment_exp
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__.	postfix_exp
isPrefixUniqueFlw s = 	__->	postfix_exp
Nao foi sub	table: 0x5607246a4d90	++	unary_exp
Nao foi sub	table: 0x5607246a5140	--	unary_exp
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
foi uniqueEq	constant	primary_exp
return ; >= ; == ; <= ; ) ; * ; + ; , ; % ; & ; && ; ( ; ! ; /= ; ^ ; -= ; <<= ; || ; [ ; >> ; ++ ; << ; -- ; case ; >>= ; &= ; %= ; += ; *= ; != ; else ; } ; ~ ; ? ; / ; { ; : ; ; ; < ; = ; sizeof ; - ; ^= ; do ; | ; > ; |= ; 
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x56072429b010	&	and_exp
Nao foi sub	table: 0x56072452ed90	*	pointer
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x560724531720	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
upathEq	enum
upathEq	struct_or_union
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	function_def	table: 0x560724714610	function_def
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	pointer	table: 0x56072452c100	declarator
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072469c310	{	type_spec
Nao foi sub	table: 0x560724294920	assignment_exp	exp
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	declarator	table: 0x560724331270	function_def
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x560724331380	function_def
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
colide flw	function_def	table: 0x560724714610	function_def
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
foi uniqueEq	storage_class_spec	decl_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; auto ; int ; ] ; { ; float ; unsigned ; char ; } ; extern ; const ; double ; long ; ; ; 
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072452e880	type_qualifier	pointer
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	declarator	table: 0x560724331270	function_def
colide flw	function_def	table: 0x560724714610	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	stat	table: 0x5607243afab0	stat
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	exp	table: 0x5607243b2420	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	function_def	table: 0x560724714610	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	stat	table: 0x5607243afab0	stat
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x56072469cf80	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x56072469d5d0	{	type_spec
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x56072469d5d0	type_spec
colide flw	{	table: 0x560724293fc0	compound_stat
teve colisao
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	initializer	table: 0x5607245311d0	initializer
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x560724294490	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl	table: 0x560724331380	function_def
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560724293fc0	compound_stat
colide flw	{	table: 0x56072469c310	type_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x560724294490	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	decl	table: 0x560724470a70	decl
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
teve colisao
Nao foi sub	table: 0x5607242958f0	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x56072452b9f0	enumerator
colide flw	=	table: 0x5607242958f0	assignment_operator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x560724470a70	decl	decl
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	decl	table: 0x560724331380	function_def
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	:	table: 0x5607243ad210	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	:	table: 0x5607243acb60	stat
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x56072452f930	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x56072469c530	type_spec
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x560724530a20	id_list
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x560724470a70	decl	decl
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724715050	decl_spec	decl
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724715050	decl_spec	decl
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243ad210	:	stat
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x5607243acb60	stat
colide flw	:	table: 0x5607243ad210	stat
colide flw	:	table: 0x560724297720	conditional_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243ac850	ID	typedef_name
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
teve colisao
Nao foi sub	table: 0x56072469fdd0	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x56072469fdd0	init_declarator
colide flw	=	table: 0x5607242958f0	assignment_operator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243ac850	ID	typedef_name
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072452dc30	(	direct_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a6580	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x5607243ab6c0	direct_abstract_declarator
colide flw	[	table: 0x5607246a6580	postfix_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	*	table: 0x56072452ed90	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
teve colisao
Nao foi sub	table: 0x56072452a710	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x560724530230	declarator	param_decl
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	*	table: 0x56072452e770	pointer
teve colisao
Nao foi sub	table: 0x56072452a710	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x56072469c530	type_spec
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x560724293fc0	compound_stat
teve colisao
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	{	table: 0x560724293fc0	compound_stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	compound_stat	table: 0x5607243ae920	stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
teve colisao
Nao foi sub	table: 0x56072452f930	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x56072452f480	,	param_type_list
Nao foi sub	table: 0x560724294490	}	compound_stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	type_name	table: 0x5607246a5970	unary_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exp	table: 0x5607243b1640	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a8e60	primary_exp
colide flw	)	table: 0x5607243b02d0	stat
teve colisao
Nao foi sub	table: 0x56072452d0c0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x56072452d0c0	direct_declarator
colide flw	[	table: 0x5607246a6580	postfix_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452d6e0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x56072452be30	ID	enumerator
Nao foi sub	table: 0x56072452be30	ID	enumerator
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x560724297720	:	conditional_exp
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724297720	conditional_exp
colide flw	:	table: 0x56072452b1a0	struct_declarator
colide flw	:	table: 0x5607243ad210	stat
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x5607247140c0	compound_stat	function_def
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x5607243af670	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__if	table: 0x5607243aeaf0	table: 0x5607243aea70
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243af780	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x5607243aec00	table: 0x5607243aeaf0
if ; 
Nao foi sub	table: 0x560724532ea0	pointer	abstract_declarator
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x5607243b1420	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__while	table: 0x5607243b09e0	table: 0x5607243b08d0
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243b1530	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x5607243b0af0	table: 0x5607243b09e0
while ; 
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	exp	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607245310c0	{	initializer
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x5607245310c0	initializer
colide flw	{	table: 0x56072469d5d0	type_spec
colide flw	{	table: 0x56072469c310	type_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x56072469c9b0	}	type_spec
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x5607243afab0	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	declarator	table: 0x56072469fc90	init_declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x56072469fdd0	init_declarator
colide flw	=	table: 0x56072452b9f0	enumerator
teve colisao
previousEq: 	assignment_exp	, rule: 	assignment_exp	, prev: 	assignment_operator	table: 0x5607242952c0	table: 0x5607242951b0
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x56072452b9f0	enumerator
colide flw	=	table: 0x56072469fdd0	init_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	stat	table: 0x5607243ad320	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243ad320	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	const_exp	table: 0x56072452bb00	enumerator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	+	table: 0x560724531580	additive_exp
teve colisao
Nao foi sub	table: 0x5607246a9d50	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x5607246a9d50	unary_operator
teve colisao
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	+	table: 0x560724531580	additive_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	+	table: 0x560724531580	additive_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	exp	table: 0x5607243ae520	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607243b1640	stat
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	&	table: 0x56072429b010	and_exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	+	table: 0x560724531580	additive_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	declarator	table: 0x56072452af90	struct_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	+	table: 0x560724531580	additive_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	&	table: 0x56072429b010	and_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607243b2710	stat
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	exp	table: 0x5607243af890	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
teve colisao
Nao foi sub	table: 0x5607246aa0d0	+	unary_operator
Nao foi sub	table: 0x5607246aa220	-	unary_operator
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	*	table: 0x56072452e770	pointer
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	exp	table: 0x5607243b2710	stat
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	function_def	table: 0x560724714610	function_def
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	+	table: 0x560724531580	additive_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b1640	stat
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x5607246a7df0	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
teve colisao
Nao foi sub	table: 0x5607246a6b60	(	postfix_exp
Nao foi sub	table: 0x5607246a7f40	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x5607246a7f40	postfix_exp
teve colisao
Nao foi sub	table: 0x5607246a6b60	(	postfix_exp
Nao foi sub	table: 0x560724531580	+	additive_exp
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	unary_exp	table: 0x5607246a4ea0	unary_exp
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	+	table: 0x560724531580	additive_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	*	table: 0x56072452e770	pointer
colide flw	stat	table: 0x5607243af040	stat
colide flw	stat	table: 0x5607243afab0	stat
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	-	table: 0x560724531720	additive_exp
colide flw	pointer	table: 0x560724532ff0	abstract_declarator
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	unary_exp	table: 0x5607246a5250	unary_exp
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	declarator	table: 0x560724331270	function_def
colide flw	stat	table: 0x5607243acc70	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	cast_exp	table: 0x5607246a3e20	multiplicative_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	pointer	table: 0x56072452c100	declarator
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	function_def	table: 0x560724714610	function_def
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b0d10	stat
teve colisao
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	declarator	table: 0x56072469fc90	init_declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_name	table: 0x5607246a5970	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	unary_exp	table: 0x5607246a4ea0	unary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	exp	table: 0x5607243af890	stat
colide flw	unary_exp	table: 0x5607246a5250	unary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	function_def	table: 0x560724714610	function_def
colide flw	cast_exp	table: 0x5607246a3e20	multiplicative_exp
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x5607243ab6c0	direct_abstract_declarator
colide flw	[	table: 0x56072452d0c0	direct_declarator
teve colisao
previousEq: 	exp	, rule: 	postfix_exp	, prev: 	__[	table: 0x5607246a6690	table: 0x5607246a6580
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x56072452d3b0	]	direct_declarator
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607242955f0	conditional_exp	assignment_exp
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a4d90	++	unary_exp
Nao foi sub	table: 0x5607246a5140	--	unary_exp
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
foi uniqueEq	constant	primary_exp
return ; >= ; == ; <= ; ) ; * ; + ; , ; % ; & ; && ; ( ; ! ; /= ; ^ ; -= ; <<= ; || ; [ ; >> ; ++ ; << ; -- ; case ; >>= ; &= ; %= ; += ; *= ; != ; else ; } ; ~ ; ? ; / ; { ; : ; ; ; < ; = ; sizeof ; - ; ^= ; do ; | ; > ; |= ; 
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x56072429b010	&	and_exp
Nao foi sub	table: 0x56072452ed90	*	pointer
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x560724531720	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
unique var2 	storage_class_spec
upathEq	enum
upathEq	struct_or_union
Vai ser agora	struct_or_union	type_spec
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
unique var2 	constant
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	declarator	function_def
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	function_def	table: 0x560724714610	function_def
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	pointer	table: 0x56072452c100	declarator
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072469c310	{	type_spec
Nao foi sub	table: 0x560724294920	assignment_exp	exp
isPrefixUniqueFlw s = 	decl_spec	function_def
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	declarator	table: 0x560724331270	function_def
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x560724331380	function_def
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
colide flw	function_def	table: 0x560724714610	function_def
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072452e880	type_qualifier	pointer
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	declarator	table: 0x560724331270	function_def
colide flw	function_def	table: 0x560724714610	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	stat	table: 0x5607243afab0	stat
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	exp	table: 0x5607243b2420	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	decl_spec	decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	function_def	table: 0x560724714610	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	stat	table: 0x5607243afab0	stat
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	storage_class_spec	table: 0x560724714a00	decl_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
foi uniqueEq	enum	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	__enum	type_spec
colide flw	enum	table: 0x56072469cf80	type_spec
teve colisao
foi uniqueEq	ID	type_spec
enum ; 
Nao foi sub	table: 0x56072469d5d0	{	type_spec
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x56072469d5d0	type_spec
colide flw	{	table: 0x560724293fc0	compound_stat
teve colisao
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
isPrefixUniqueFlw s = 	enumerator	type_spec
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	initializer	table: 0x5607245311d0	initializer
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	type_spec
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x560724294490	}	compound_stat
foi uniqueEq	struct_or_union	type_spec
register ; __ID ; ) ; signed ; typedef ; void ; short ; volatile ; static ; ] ; int ; auto ; ; ; float ; unsigned ; char ; double ; extern ; const ; } ; long ; { ; 
isPrefixUniqueFlw s = 	struct_or_union	type_spec
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl	table: 0x560724331380	function_def
teve colisao
foi uniqueEq	ID	type_spec
struct ; union ; 
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	type_spec
colide flw	{	table: 0x560724293fc0	compound_stat
colide flw	{	table: 0x56072469c310	type_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x560724294490	}	compound_stat
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	init_declarator	init_declarator_list
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	decl	table: 0x560724470a70	decl
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	init_declarator_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	declarator	init_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
teve colisao
Nao foi sub	table: 0x5607242958f0	=	assignment_operator
isPrefixUniqueFlw s = 	__=	init_declarator
colide flw	=	table: 0x56072452b9f0	enumerator
colide flw	=	table: 0x5607242958f0	assignment_operator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x560724470a70	decl	decl
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	spec_qualifier	table: 0x56072452a0e0	struct_decl
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	decl	table: 0x560724331380	function_def
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
teve colisao
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	struct_declarator	struct_decl
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	:	table: 0x5607243ad210	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	:	table: 0x5607243acb60	stat
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x56072452f930	,	param_type_list
isPrefixUniqueFlw s = 	__,	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x56072469c530	type_spec
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x560724530a20	id_list
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x560724470a70	decl	decl
isPrefixUniqueFlw s = 	spec_qualifier	struct_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	type_qualifier	table: 0x56072452eea0	pointer
colide flw	struct_or_union	table: 0x56072469ddb0	type_spec
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_or_union	table: 0x56072469d2e0	type_spec
colide flw	type_qualifier	table: 0x56072452e880	pointer
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	type_qualifier	table: 0x56072452a710	spec_qualifier_list
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	type_qualifier	table: 0x56072452acc0	spec_qualifier
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	declarator	table: 0x560724331270	function_def
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	decl	table: 0x560724331380	function_def
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	type_qualifier	table: 0x560724714ca0	decl_spec
colide flw	decl_spec	table: 0x560724470960	decl
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	function_def	table: 0x560724714610	function_def
colide flw	decl_spec	table: 0x560724530050	param_decl
teve colisao
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724715050	decl_spec	decl
Nao foi sub	table: 0x560724470a70	decl	decl
Nao foi sub	table: 0x560724715050	decl_spec	decl
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243ad210	:	stat
isPrefixUniqueFlw s = 	__:	struct_declarator
colide flw	:	table: 0x5607243acb60	stat
colide flw	:	table: 0x5607243ad210	stat
colide flw	:	table: 0x560724297720	conditional_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607243ac850	ID	typedef_name
isPrefixUniqueFlw s = 	ID	enumerator
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
teve colisao
Nao foi sub	table: 0x56072469fdd0	=	init_declarator
isPrefixUniqueFlw s = 	__=	enumerator
colide flw	=	table: 0x56072469fdd0	init_declarator
colide flw	=	table: 0x5607242958f0	assignment_operator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243ac850	ID	typedef_name
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x56072452dc30	(	direct_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	declarator	direct_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a6580	[	postfix_exp
isPrefixUniqueFlw s = 	__[	direct_declarator
colide flw	[	table: 0x5607243ab6c0	direct_abstract_declarator
colide flw	[	table: 0x5607246a6580	postfix_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
foi uniqueEq	]	direct_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	param_type_list	direct_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	*	table: 0x56072452ed90	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
teve colisao
Nao foi sub	table: 0x56072452a710	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x560724530230	declarator	param_decl
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
isPrefixUniqueFlw s = 	__*	pointer
colide flw	*	table: 0x5607246a9ef0	unary_operator
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	*	table: 0x56072452e770	pointer
teve colisao
Nao foi sub	table: 0x56072452a710	type_qualifier	spec_qualifier_list
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	param_decl	param_type_list
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	param_type_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a8820	ID	primary_exp
isPrefixUniqueFlw s = 	ID	id_list
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607246a0a00	,	struct_decl
isPrefixUniqueFlw s = 	__,	id_list
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x56072469c530	type_spec
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	__{	initializer
colide flw	{	table: 0x560724293fc0	compound_stat
teve colisao
Nao foi sub	table: 0x560724293fc0	{	compound_stat
isPrefixUniqueFlw s = 	initializer	initializer
colide flw	{	table: 0x560724293fc0	compound_stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	compound_stat	table: 0x5607243ae920	stat
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	stat	table: 0x5607242942b0	compound_stat
teve colisao
Nao foi sub	table: 0x56072452f930	,	param_type_list
isPrefixUniqueFlw s = 	__,	initializer
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x56072452f480	,	param_type_list
Nao foi sub	table: 0x560724294490	}	compound_stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
isPrefixUniqueFlw s = 	spec_qualifier_list	type_name
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	type_name	table: 0x5607246a5970	unary_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	exp	table: 0x5607243b1640	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	abstract_declarator	direct_abstract_declarator
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exp	table: 0x5607243b1640	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	direct_abstract_declarator
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a8e60	primary_exp
colide flw	)	table: 0x5607243b02d0	stat
teve colisao
Nao foi sub	table: 0x56072452d0c0	[	direct_declarator
isPrefixUniqueFlw s = 	__[	direct_abstract_declarator
colide flw	[	table: 0x56072452d0c0	direct_declarator
colide flw	[	table: 0x5607246a6580	postfix_exp
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
foi uniqueEq	]	direct_abstract_declarator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; ] ; int ; [ ; -- ; __CHAR_CONST ; float ; long ; char ; signed ; ) ; const ; double ; unsigned ; } ; 
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	direct_abstract_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452d6e0	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x56072452be30	ID	enumerator
Nao foi sub	table: 0x56072452be30	ID	enumerator
isPrefixUniqueFlw s = 	ID	stat
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x560724297720	:	conditional_exp
isPrefixUniqueFlw s = 	__:	stat
colide flw	:	table: 0x560724297720	conditional_exp
colide flw	:	table: 0x56072452b1a0	struct_declarator
colide flw	:	table: 0x5607243ad210	stat
teve colisao
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607243b4170	;	stat
Nao foi sub	table: 0x5607247140c0	compound_stat	function_def
foi uniqueEq	if	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__if	stat
colide flw	if	table: 0x5607243af670	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__if	table: 0x5607243aeaf0	table: 0x5607243aea70
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
if ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243af780	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x5607243aec00	table: 0x5607243aeaf0
if ; 
Nao foi sub	table: 0x560724532ea0	pointer	abstract_declarator
isPrefixUniqueFlw s = 	exp	stat
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
foi uniqueEq	while	stat
} ; do ; ; ; ) ; : ; { ; else ; 
isPrefixUniqueFlw s = 	__while	stat
colide flw	while	table: 0x5607243b1420	stat
teve colisao
previousEq: 	(	, rule: 	stat	, prev: 	__while	table: 0x5607243b09e0	table: 0x5607243b08d0
} ; do ; ; ; ) ; : ; { ; else ; 
foi uniqueEq	(	stat
while ; 
isPrefixUniqueFlw s = 	__(	stat
colide flw	(	table: 0x5607243b1530	stat
teve colisao
previousEq: 	exp	, rule: 	stat	, prev: 	__(	table: 0x5607243b0af0	table: 0x5607243b09e0
while ; 
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	exp	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	stat
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x5607243b1750	stat
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607246a45a0	cast_exp
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x560724297cc0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x5607245310c0	{	initializer
isPrefixUniqueFlw s = 	__{	compound_stat
colide flw	{	table: 0x5607245310c0	initializer
colide flw	{	table: 0x56072469d5d0	type_spec
colide flw	{	table: 0x56072469c310	type_spec
teve colisao
Nao foi sub	table: 0x56072452ab70	type_spec	spec_qualifier
Nao foi sub	table: 0x5607243ae920	compound_stat	stat
Nao foi sub	table: 0x56072469c9b0	}	type_spec
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	assignment_exp	exp
colide flw	stat	table: 0x5607243afab0	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	exp
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x5607246a6d80	postfix_exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	unary_exp	assignment_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	declarator	table: 0x56072469fc90	init_declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
foi uniqueEq	assignment_operator	assignment_exp
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
isPrefixUniqueFlw s = 	assignment_operator	assignment_exp
colide flw	=	table: 0x56072469fdd0	init_declarator
colide flw	=	table: 0x56072452b9f0	enumerator
teve colisao
previousEq: 	assignment_exp	, rule: 	assignment_exp	, prev: 	assignment_operator	table: 0x5607242952c0	table: 0x5607242951b0
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; __INT_CONST ; void ; short ; __STRING ; volatile ; double ; int ; ] ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; -- ; 
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
foi uniqueEq	=	assignment_operator
++ ; __ENUMERATION_CONST ; __ID ; __FLOAT_CONST ; * ; -- ; void ; short ; __STRING ; volatile ; ] ; int ; double ; __CHAR_CONST ; float ; long ; char ; } ; ) ; const ; signed ; unsigned ; __INT_CONST ; 
isPrefixUniqueFlw s = 	__=	assignment_operator
colide flw	=	table: 0x56072452b9f0	enumerator
colide flw	=	table: 0x56072469fdd0	init_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	logical_and_exp	logical_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	stat	table: 0x5607243ad320	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	inclusive_or_exp	logical_and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243ad320	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	exclusive_or_exp	inclusive_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	const_exp	table: 0x56072452bb00	enumerator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	and_exp	exclusive_or_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	equality_exp	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	+	table: 0x560724531580	additive_exp
teve colisao
Nao foi sub	table: 0x5607246a9d50	&	unary_operator
isPrefixUniqueFlw s = 	__&	and_exp
colide flw	&	table: 0x5607246a9d50	unary_operator
teve colisao
Nao foi sub	table: 0x56072429b940	relational_exp	equality_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	relational_exp	equality_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	+	table: 0x560724531580	additive_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	shift_exp	relational_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b2710	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	+	table: 0x560724531580	additive_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	exp	table: 0x5607243ae520	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607243b1640	stat
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	&	table: 0x56072429b010	and_exp
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	additive_exp	shift_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	+	table: 0x560724531580	additive_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	declarator	table: 0x56072452af90	struct_declarator
teve colisao
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	multiplicative_exp	additive_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	+	table: 0x560724531580	additive_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	&	table: 0x56072429b010	and_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607243b2710	stat
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	exp	table: 0x5607243af890	stat
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	exp	table: 0x5607243ae520	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
teve colisao
Nao foi sub	table: 0x5607246aa0d0	+	unary_operator
Nao foi sub	table: 0x5607246aa220	-	unary_operator
Nao foi sub	table: 0x5607246a8ac0	constant	primary_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	cast_exp	multiplicative_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	--	table: 0x5607246a7f40	postfix_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	unary_operator	table: 0x5607246a5470	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	-	table: 0x560724531720	additive_exp
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	++	table: 0x5607246a7df0	postfix_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	*	table: 0x56072452e770	pointer
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	exp	table: 0x5607243b2710	stat
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	exp	table: 0x5607243af890	stat
colide flw	function_def	table: 0x560724714610	function_def
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	+	table: 0x560724531580	additive_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	init_declarator_list	table: 0x560724715160	decl
teve colisao
Nao foi sub	table: 0x5607246a9ef0	*	unary_operator
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x56072452c940	direct_declarator
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	type_name	cast_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	exp	table: 0x5607243aec00	stat
colide flw	exp	table: 0x5607243af890	stat
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	ID	table: 0x5607246a8820	primary_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	exp	table: 0x5607243b1640	stat
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
isPrefixUniqueFlw s = 	__)	cast_exp
colide flw	)	table: 0x5607243b28f0	stat
colide flw	)	table: 0x56072452cbb0	direct_declarator
colide flw	)	table: 0x56072452d900	direct_declarator
colide flw	)	table: 0x5607243ab520	direct_abstract_declarator
colide flw	)	table: 0x5607243af9a0	stat
colide flw	)	table: 0x5607243aed10	stat
colide flw	)	table: 0x5607243abfd0	direct_abstract_declarator
colide flw	)	table: 0x5607243b0c00	stat
colide flw	)	table: 0x5607246a7490	postfix_exp
colide flw	)	table: 0x56072452df20	direct_declarator
colide flw	)	table: 0x5607243b02d0	stat
colide flw	)	table: 0x5607246a8e60	primary_exp
teve colisao
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x5607246a7df0	++	postfix_exp
isPrefixUniqueFlw s = 	__++	unary_exp
colide flw	++	table: 0x5607246a7df0	postfix_exp
teve colisao
Nao foi sub	table: 0x5607246a6b60	(	postfix_exp
Nao foi sub	table: 0x5607246a7f40	--	postfix_exp
isPrefixUniqueFlw s = 	__--	unary_exp
colide flw	--	table: 0x5607246a7f40	postfix_exp
teve colisao
Nao foi sub	table: 0x5607246a6b60	(	postfix_exp
Nao foi sub	table: 0x560724531580	+	additive_exp
isPrefixUniqueFlw s = 	unary_operator	unary_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	unary_exp	table: 0x5607246a4ea0	unary_exp
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	+	table: 0x560724531580	additive_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	pointer	table: 0x56072452ea60	pointer
colide flw	*	table: 0x5607246a36f0	multiplicative_exp
colide flw	*	table: 0x56072452e770	pointer
colide flw	stat	table: 0x5607243af040	stat
colide flw	stat	table: 0x5607243afab0	stat
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	&	table: 0x56072429b010	and_exp
colide flw	-	table: 0x560724531720	additive_exp
colide flw	pointer	table: 0x560724532ff0	abstract_declarator
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	unary_exp	table: 0x5607246a5250	unary_exp
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	*	table: 0x56072452ed90	pointer
colide flw	declarator	table: 0x560724331270	function_def
colide flw	stat	table: 0x5607243acc70	stat
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	cast_exp	table: 0x5607246a3e20	multiplicative_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	pointer	table: 0x56072452c100	declarator
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	function_def	table: 0x560724714610	function_def
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b0d10	stat
teve colisao
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
Nao foi sub	table: 0x56072452a1f0	struct_decl	struct_decl
isPrefixUniqueFlw s = 	primary_exp	postfix_exp
colide flw	equality_exp	table: 0x56072429b300	and_exp
colide flw	struct_decl	table: 0x56072452a1f0	struct_decl
colide flw	stat	table: 0x5607243afab0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	declarator	table: 0x56072469fc90	init_declarator
colide flw	additive_exp	table: 0x5607246a1d70	shift_exp
colide flw	typedef_name	table: 0x56072469bed0	type_spec
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
colide flw	function_def	table: 0x560724330dc0	external_decl
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b3f90	stat
colide flw	const_exp	table: 0x5607243ad100	stat
colide flw	type_spec	table: 0x560724714b50	decl_spec
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	inclusive_or_exp	table: 0x560724299750	logical_and_exp
colide flw	decl_spec	table: 0x560724715050	decl
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	unary_exp	table: 0x5607242950a0	assignment_exp
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	stat	table: 0x5607242942b0	compound_stat
colide flw	stat	table: 0x5607243b03e0	stat
colide flw	init_declarator_list	table: 0x560724715160	decl
colide flw	ID	table: 0x5607243aca20	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	multiplicative_exp	table: 0x5607245319c0	additive_exp
colide flw	struct_declarator	table: 0x5607244727c0	struct_decl
colide flw	type_name	table: 0x5607246a5970	unary_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	decl	table: 0x5607242940d0	compound_stat
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	exp	table: 0x5607243ae520	stat
colide flw	ID	table: 0x56072452be30	enumerator
colide flw	and_exp	table: 0x56072429a970	exclusive_or_exp
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	initializer	table: 0x56072469fee0	init_declarator
colide flw	external_decl	table: 0x560724330710	translation_unit
colide flw	enumerator	table: 0x56072469c420	type_spec
colide flw	spec_qualifier	table: 0x5607246a04e0	struct_decl
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	decl	table: 0x560724330f10	external_decl
colide flw	ID	table: 0x5607243ac850	typedef_name
colide flw	stat	table: 0x5607243b0d10	stat
colide flw	unary_exp	table: 0x5607246a4ea0	unary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	cast_exp	table: 0x5607246a46b0	cast_exp
colide flw	stat	table: 0x5607243b2a00	stat
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	shift_exp	table: 0x56072429ce70	relational_exp
colide flw	assignment_exp	table: 0x5607246a6e90	postfix_exp
colide flw	stat	table: 0x5607243af040	stat
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	type_spec	table: 0x56072452ab70	spec_qualifier
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	stat	table: 0x5607243acc70	stat
colide flw	declarator	table: 0x5607246a0210	init_declarator
colide flw	abstract_declarator	table: 0x560724532b00	type_name
colide flw	exp	table: 0x5607243b2420	stat
colide flw	struct_declarator	table: 0x5607246a0b10	struct_decl
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	exp	table: 0x5607243b2130	stat
colide flw	logical_or_exp	table: 0x5607242973f0	conditional_exp
colide flw	ID	table: 0x560724530b30	id_list
colide flw	exp	table: 0x5607243b1640	stat
colide flw	declarator	table: 0x56072452af90	struct_declarator
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724532720	initializer
colide flw	decl_spec	table: 0x560724530050	param_decl
colide flw	decl_spec	table: 0x5607247143f0	function_def
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	exclusive_or_exp	table: 0x56072429a0e0	inclusive_or_exp
colide flw	struct_decl	table: 0x56072469d6e0	type_spec
colide flw	const_exp	table: 0x56072452bb00	enumerator
colide flw	exp	table: 0x560724297610	conditional_exp
colide flw	stat	table: 0x5607243ae1f0	stat
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	declarator	table: 0x56072452b5e0	struct_declarator
colide flw	assignment_exp	table: 0x560724294b40	exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	stat	table: 0x5607243ad320	stat
colide flw	type_spec	table: 0x56072452a5c0	spec_qualifier_list
colide flw	assignment_exp	table: 0x5607242952c0	assignment_exp
colide flw	initializer	table: 0x5607245311d0	initializer
colide flw	ID	table: 0x56072452b8b0	enumerator
colide flw	exp	table: 0x5607243af890	stat
colide flw	unary_exp	table: 0x5607246a5250	unary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	initializer	table: 0x560724531c50	initializer
colide flw	declarator	table: 0x560724530230	param_decl
colide flw	decl	table: 0x560724470a70	decl
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	init_declarator	table: 0x56072469f730	init_declarator_list
colide flw	function_def	table: 0x560724714610	function_def
colide flw	cast_exp	table: 0x5607246a3e20	multiplicative_exp
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	relational_exp	table: 0x56072429bec0	equality_exp
colide flw	logical_and_exp	table: 0x560724298fa0	logical_or_exp
colide flw	init_declarator	table: 0x56072469f570	init_declarator_list
colide flw	const_exp	table: 0x56072452b2b0	struct_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	conditional_exp	table: 0x560724297830	conditional_exp
colide flw	enumerator	table: 0x56072469c640	type_spec
colide flw	exp	table: 0x5607246a6690	postfix_exp
colide flw	exp	table: 0x5607243b2710	stat
colide flw	abstract_declarator	table: 0x560724530380	param_decl
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	param_decl	table: 0x56072452f590	param_type_list
colide flw	cast_exp	table: 0x5607246a5580	unary_exp
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	unary_exp	table: 0x5607246a5ac0	unary_exp
teve colisao
foi uniqueEq	[	postfix_exp
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
isPrefixUniqueFlw s = 	__[	postfix_exp
colide flw	[	table: 0x5607243ab6c0	direct_abstract_declarator
colide flw	[	table: 0x56072452d0c0	direct_declarator
teve colisao
previousEq: 	exp	, rule: 	postfix_exp	, prev: 	__[	table: 0x5607246a6690	table: 0x5607246a6580
] ; ++ ; __ENUMERATION_CONST ; __ID ; ) ; -- ; __STRING ; __FLOAT_CONST ; __INT_CONST ; __CHAR_CONST ; 
Nao foi sub	table: 0x5607242973f0	logical_or_exp	conditional_exp
isPrefixUniqueFlw s = 	exp	postfix_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	const_exp	table: 0x5607243ab7d0	direct_abstract_declarator
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	conditional_exp	table: 0x560724298b80	const_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	const_exp	table: 0x56072452d1d0	direct_declarator
colide flw	equality_exp	table: 0x56072429aed0	and_exp
teve colisao
Nao foi sub	table: 0x56072452d3b0	]	direct_declarator
Nao foi sub	table: 0x5607246a4380	(	cast_exp
isPrefixUniqueFlw s = 	__(	postfix_exp
colide flw	(	table: 0x5607246a4380	cast_exp
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x5607246a8c40	primary_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607242955f0	conditional_exp	assignment_exp
isPrefixUniqueFlw s = 	assignment_exp	postfix_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	exp	table: 0x5607243aec00	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607246a8d50	primary_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x56072452f480	,	param_type_list
isPrefixUniqueFlw s = 	__,	postfix_exp
colide flw	,	table: 0x5607246a0a00	struct_decl
colide flw	,	table: 0x560724294a30	exp
colide flw	,	table: 0x560724531330	initializer
colide flw	,	table: 0x56072452f480	param_type_list
colide flw	,	table: 0x560724530a20	id_list
colide flw	,	table: 0x56072469f620	init_declarator_list
colide flw	,	table: 0x56072469c530	type_spec
teve colisao
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x5607246a4d90	++	unary_exp
Nao foi sub	table: 0x5607246a5140	--	unary_exp
Nao foi sub	table: 0x56072452c7c0	ID	direct_declarator
Nao foi sub	table: 0x5607243ab300	(	direct_abstract_declarator
isPrefixUniqueFlw s = 	__(	primary_exp
colide flw	(	table: 0x5607243ab300	direct_abstract_declarator
colide flw	(	table: 0x56072452dc30	direct_declarator
colide flw	(	table: 0x5607246a6b60	postfix_exp
colide flw	(	table: 0x56072452c940	direct_declarator
colide flw	(	table: 0x5607243abce0	direct_abstract_declarator
colide flw	(	table: 0x56072452d6e0	direct_declarator
colide flw	(	table: 0x5607246a4380	cast_exp
teve colisao
Nao foi sub	table: 0x5607245329f0	spec_qualifier_list	type_name
isPrefixUniqueFlw s = 	exp	primary_exp
colide flw	exp	table: 0x5607243b0af0	stat
colide flw	param_type_list	table: 0x5607243abdf0	direct_abstract_declarator
colide flw	spec_qualifier_list	table: 0x5607245329f0	type_name
colide flw	ID	table: 0x56072452c7c0	direct_declarator
colide flw	pointer	table: 0x560724532ea0	abstract_declarator
colide flw	assignment_exp	table: 0x5607246a6c70	postfix_exp
colide flw	additive_exp	table: 0x5607243ada00	shift_exp
colide flw	conditional_exp	table: 0x5607242955f0	assignment_exp
colide flw	logical_and_exp	table: 0x560724298d50	logical_or_exp
colide flw	exp	table: 0x5607243b1640	stat
colide flw	unary_exp	table: 0x5607246a4ac0	cast_exp
colide flw	equality_exp	table: 0x56072429aed0	and_exp
colide flw	direct_declarator	table: 0x56072452c2e0	declarator
colide flw	constant	table: 0x5607246a8ac0	primary_exp
colide flw	shift_exp	table: 0x56072429c420	relational_exp
colide flw	exp	table: 0x5607243af890	stat
colide flw	and_exp	table: 0x56072429a720	exclusive_or_exp
colide flw	type_name	table: 0x5607246a4490	cast_exp
colide flw	direct_abstract_declarator	table: 0x5607243aaf00	abstract_declarator
colide flw	inclusive_or_exp	table: 0x560724299500	logical_and_exp
colide flw	primary_exp	table: 0x5607246a6440	postfix_exp
colide flw	declarator	table: 0x56072452ca50	direct_declarator
colide flw	cast_exp	table: 0x5607246a35b0	multiplicative_exp
colide flw	exp	table: 0x5607243b01c0	stat
colide flw	exclusive_or_exp	table: 0x560724299cb0	inclusive_or_exp
colide flw	ID	table: 0x5607245308e0	id_list
colide flw	*	table: 0x56072452ed90	pointer
colide flw	relational_exp	table: 0x56072429b940	equality_exp
colide flw	postfix_exp	table: 0x5607246a5ed0	unary_exp
colide flw	assignment_exp	table: 0x560724294920	exp
colide flw	exp	table: 0x5607243aec00	stat
colide flw	param_decl	table: 0x56072452f340	param_type_list
colide flw	param_type_list	table: 0x56072452d7f0	direct_declarator
colide flw	id_list	table: 0x56072452dd40	direct_declarator
colide flw	logical_or_exp	table: 0x560724297cc0	conditional_exp
colide flw	multiplicative_exp	table: 0x560724531440	additive_exp
colide flw	abstract_declarator	table: 0x5607243ab410	direct_abstract_declarator
teve colisao
Nao foi sub	table: 0x5607243b28f0	)	stat
Nao foi sub	table: 0x56072429b010	&	and_exp
Nao foi sub	table: 0x56072452ed90	*	pointer
Nao foi sub	table: 0x560724531580	+	additive_exp
Nao foi sub	table: 0x560724531720	-	additive_exp
unique var 	external_decl
Unique usage	external_decl
unique var 	decl
unique var2 	storage_class_spec
upathEq	enum
upathEq	struct_or_union
upathEq	struct_or_union
unique var 	const_exp
unique var 	stat
unique var 	stat
upathEq	if
upathEq	(
unique var 	stat
unique var 	exp
unique var 	stat
unique var 	exp
unique var 	stat
upathEq	while
upathEq	(
unique var 	stat
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	exp
unique var 	stat
unique var 	exp
upathEq	assignment_operator
upathEq	=
unique var 	exp
unique var 	conditional_exp
unique var 	logical_and_exp
unique var 	inclusive_or_exp
unique var 	exclusive_or_exp
unique var 	and_exp
unique var 	relational_exp
unique var 	shift_exp
unique var 	additive_exp
unique var 	unary_exp
upathEq	[
unique var2 	constant
Unique vars: translation_unit, external_decl, 
matchUPath: translation_unit, external_decl, storage_class_spec, type_qualifier, struct_or_union, constant, 
addEq	(	nil	stat
addEq	(	nil	stat
Adding labels: Err_1, Err_2, Err_3, Err_4, Err_5, Err_6, Err_7, Err_8, Err_9, Err_10, Err_11, Err_12, Err_13, Err_14, Err_15, Err_16, Err_17, Err_18, Err_19, Err_20, Err_21, Err_22, Err_23, Err_24, Err_25, Err_26, Err_27, Err_28, Err_29, Err_30, Err_31, Err_32, Err_33, Err_34, Err_35, Err_36, Err_37, Err_38, Err_39, Err_40, Err_41, Err_42, Err_43, Err_44, Err_45, Err_46, Err_47, Err_48, 

Property 	nil
translation_unit <-  SKIP external_decl+^Err_001 !.
external_decl   <-  function_def  /  decl
function_def    <-  declarator decl* compound_stat  /  decl_spec function_def
decl_spec       <-  storage_class_spec  /  type_spec  /  type_qualifier
decl            <-  decl_spec init_declarator_list? ';'  /  decl_spec decl
storage_class_spec <-  'auto'  /  'register'  /  'static'  /  'extern'  /  'typedef'
type_spec       <-  'void'  /  'char'  /  'short'  /  'int'  /  'long'  /  'float'  /  'double'  /  'signed'  /  'unsigned'  /  typedef_name  /  'enum' ID? '{' enumerator (',' enumerator)* '}'  /  'enum' ID^Err_002  /  struct_or_union ID? '{' struct_decl+ '}'  /  struct_or_union ID^Err_003
type_qualifier  <-  'const'  /  'volatile'
struct_or_union <-  'struct'  /  'union'
init_declarator_list <-  init_declarator (',' init_declarator)*
init_declarator <-  declarator '=' initializer  /  declarator
struct_decl     <-  spec_qualifier struct_declarator (',' struct_declarator)* ';'  /  spec_qualifier struct_decl
spec_qualifier_list <-  (type_spec  /  type_qualifier)+
spec_qualifier  <-  type_spec  /  type_qualifier
struct_declarator <-  declarator? ':' const_exp  /  declarator
enumerator      <-  ID '=' const_exp  /  ID
declarator      <-  pointer? direct_declarator
direct_declarator <-  (ID  /  '(' declarator ')') ('[' const_exp? ']'  /  '(' param_type_list ')'  /  '(' id_list? ')')*
pointer         <-  '*' type_qualifier* pointer  /  '*' type_qualifier*
param_type_list <-  param_decl (',' param_decl)* (',' '...')?
param_decl      <-  decl_spec+ (declarator  /  abstract_declarator)?
id_list         <-  ID (',' ID)*
initializer     <-  '{' initializer (',' initializer)* ','? '}'  /  assignment_exp
type_name       <-  spec_qualifier_list abstract_declarator?
abstract_declarator <-  pointer  /  pointer? direct_abstract_declarator
direct_abstract_declarator <-  '(' abstract_declarator ')' ('[' const_exp? ']'  /  '(' param_type_list? ')')*
typedef_name    <-  ID
stat            <-  ID ':' stat  /  'case' const_exp^Err_004 ':'^Err_005 stat^Err_006  /  'default' ':'^Err_007 stat^Err_008  /  exp? ';'  /  compound_stat  /  'if' '('^Err_009 exp ')' stat 'else' stat^Err_010  /  'if' '('^Err_011 exp^Err_012 ')'^Err_013 stat^Err_014  /  'switch' '('^Err_015 exp^Err_016 ')'^Err_017 stat^Err_018  /  'while' '('^Err_019 exp ')' stat  /  'do' stat^Err_020 'while'^Err_021 '('^Err_022 exp^Err_023 ')'^Err_024 ';'^Err_025  /  'for' '('^Err_026 exp? ';'^Err_027 exp? ';'^Err_028 exp? ')'^Err_029 stat^Err_030  /  'goto' ID^Err_031 ';'^Err_032  /  'continue' ';'^Err_033  /  'break' ';'^Err_034  /  'return' exp? ';'^Err_035
compound_stat   <-  '{' decl* stat* '}'
exp             <-  assignment_exp (',' assignment_exp)*
assignment_exp  <-  unary_exp assignment_operator assignment_exp  /  conditional_exp
assignment_operator <-  '=' !'='  /  '*='  /  '/='  /  '%='  /  '+='  /  '-='  /  '<<='  /  '>>='  /  '&='  /  '^='  /  '|='
conditional_exp <-  logical_or_exp '?' exp^Err_036 ':'^Err_037 conditional_exp^Err_038  /  logical_or_exp
const_exp       <-  conditional_exp
logical_or_exp  <-  logical_and_exp ('||' logical_and_exp^Err_039)*
logical_and_exp <-  inclusive_or_exp ('&&' inclusive_or_exp^Err_040)*
inclusive_or_exp <-  exclusive_or_exp ('|' !'|' exclusive_or_exp^Err_041)*
exclusive_or_exp <-  and_exp ('^' and_exp^Err_042)*
and_exp         <-  equality_exp ('&' !'&' equality_exp)*
equality_exp    <-  relational_exp (('=='  /  '!=') relational_exp^Err_043)*
relational_exp  <-  shift_exp (('<='  /  '>='  /  '<'  /  '>') shift_exp^Err_044)*
shift_exp       <-  additive_exp (('<<'  /  '>>') additive_exp^Err_045)*
additive_exp    <-  multiplicative_exp (('+'  /  '-') multiplicative_exp)*
multiplicative_exp <-  cast_exp (('*'  /  '/'  /  '%') cast_exp)*
cast_exp        <-  '(' type_name ')' cast_exp  /  unary_exp
unary_exp       <-  '++' unary_exp  /  '--' unary_exp  /  unary_operator cast_exp  /  'sizeof' (type_name  /  unary_exp)^Err_046  /  postfix_exp
postfix_exp     <-  primary_exp ('[' exp ']'  /  '(' (assignment_exp (',' assignment_exp)*)? ')'  /  '.' ID^Err_047  /  '->' ID^Err_048  /  '++'  /  '--')*
primary_exp     <-  ID  /  STRING  /  constant  /  '(' exp ')'
constant        <-  INT_CONST  /  CHAR_CONST  /  FLOAT_CONST  /  ENUMERATION_CONST
unary_operator  <-  '&'  /  '*'  /  '+'  /  '-'  /  '~'  /  '!'	

Property 	ban
translation_unit <-  SKIP external_decl+^Err_001 !.
external_decl   <-  function_def_ban  /  decl
function_def    <-  (declarator_ban decl_ban*_ban compound_stat_ban  /  decl_spec_ban function_def_ban)_ban
decl_spec       <-  (storage_class_spec_ban  /  (type_spec_ban  /  type_qualifier_ban)_ban)_ban
decl            <-  (decl_spec_ban init_declarator_list_ban?_ban ';'_ban  /  decl_spec_ban decl_ban)_ban
storage_class_spec <-  ('auto'_ban  /  ('register'_ban  /  ('static'_ban  /  ('extern'_ban  /  'typedef'_ban)_ban)_ban)_ban)_ban
type_spec       <-  ('void'_ban  /  ('char'_ban  /  ('short'_ban  /  ('int'_ban  /  ('long'_ban  /  ('float'_ban  /  ('double'_ban  /  ('signed'_ban  /  ('unsigned'_ban  /  (typedef_name_ban  /  ('enum'_ban ID_ban?_ban '{'_ban enumerator_ban (','_ban enumerator_ban)*_ban '}'_ban  /  ('enum'_ban ID_ban^Err_002  /  (struct_or_union_ban ID_ban?_ban '{'_ban struct_decl_ban+_ban '}'_ban  /  struct_or_union_ban ID_ban^Err_003)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban
type_qualifier  <-  ('const'_ban  /  'volatile'_ban)_ban
struct_or_union <-  ('struct'_ban  /  'union'_ban)_ban
init_declarator_list <-  init_declarator_ban (','_ban init_declarator_ban)*_ban
init_declarator <-  (declarator_ban '='_ban initializer_ban  /  declarator_ban)_ban
struct_decl     <-  (spec_qualifier_ban struct_declarator_ban (','_ban struct_declarator_ban)*_ban ';'_ban  /  spec_qualifier_ban struct_decl_ban)_ban
spec_qualifier_list <-  ((type_spec_ban  /  type_qualifier_ban)_ban)+_ban
spec_qualifier  <-  (type_spec_ban  /  type_qualifier_ban)_ban
struct_declarator <-  (declarator_ban?_ban ':'_ban const_exp_ban  /  declarator_ban)_ban
enumerator      <-  (ID_ban '='_ban const_exp_ban  /  ID_ban)_ban
declarator      <-  pointer_ban?_ban direct_declarator_ban
direct_declarator <-  ((ID_ban  /  '('_ban declarator_ban ')'_ban)_ban) (('['_ban const_exp_ban?_ban ']'_ban  /  ('('_ban param_type_list_ban ')'_ban  /  '('_ban id_list_ban?_ban ')'_ban)_ban)_ban)*_ban
pointer         <-  ('*'_ban type_qualifier_ban*_ban pointer_ban  /  '*'_ban type_qualifier_ban*_ban)_ban
param_type_list <-  param_decl_ban (','_ban param_decl_ban)*_ban (','_ban '...'_ban)?_ban
param_decl      <-  decl_spec_ban+_ban ((declarator_ban  /  abstract_declarator_ban)_ban)?_ban
id_list         <-  ID_ban (','_ban ID_ban)*_ban
initializer     <-  ('{'_ban initializer_ban (','_ban initializer_ban)*_ban ','_ban?_ban '}'_ban  /  assignment_exp_ban)_ban
type_name       <-  spec_qualifier_list_ban abstract_declarator_ban?_ban
abstract_declarator <-  (pointer_ban  /  pointer_ban?_ban direct_abstract_declarator_ban)_ban
direct_abstract_declarator <-  '('_ban abstract_declarator_ban ')'_ban (('['_ban const_exp_ban?_ban ']'_ban  /  '('_ban param_type_list_ban?_ban ')'_ban)_ban)*_ban
typedef_name    <-  ID_ban
stat            <-  (ID_ban ':'_ban stat_ban  /  ('case'_ban const_exp^Err_004 ':'^Err_005 stat^Err_006  /  ('default'_ban ':'^Err_007 stat^Err_008  /  (exp_ban?_ban ';'_ban  /  (compound_stat_ban  /  ('if'_ban '('_ban^Err_009 exp_ban ')'_ban stat_ban 'else'_ban stat^Err_010  /  ('if'_ban '('_ban^Err_011 exp^Err_012 ')'^Err_013 stat^Err_014  /  ('switch'_ban '('_ban^Err_015 exp^Err_016 ')'^Err_017 stat^Err_018  /  ('while'_ban '('_ban^Err_019 exp_ban ')'_ban stat_ban  /  ('do'_ban stat^Err_020 'while'^Err_021 '('_ban^Err_022 exp^Err_023 ')'^Err_024 ';'^Err_025  /  ('for'_ban '('_ban^Err_026 exp? ';'^Err_027 exp? ';'^Err_028 exp? ')'^Err_029 stat^Err_030  /  ('goto'_ban ID_ban^Err_031 ';'^Err_032  /  ('continue'_ban ';'^Err_033  /  ('break'_ban ';'^Err_034  /  'return'_ban exp? ';'^Err_035)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban
compound_stat   <-  '{'_ban decl_ban*_ban stat_ban*_ban '}'_ban
exp             <-  assignment_exp_ban (','_ban assignment_exp_ban)*_ban
assignment_exp  <-  (unary_exp_ban assignment_operator_ban assignment_exp_ban  /  conditional_exp_ban)_ban
assignment_operator <-  ('='_ban !'='  /  ('*='_ban  /  ('/='_ban  /  ('%='_ban  /  ('+='_ban  /  ('-='_ban  /  ('<<='_ban  /  ('>>='_ban  /  ('&='_ban  /  ('^='_ban  /  '|='_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban)_ban
conditional_exp <-  (logical_or_exp_ban '?'_ban exp^Err_036 ':'^Err_037 conditional_exp^Err_038  /  logical_or_exp_ban)_ban
const_exp       <-  conditional_exp_ban
logical_or_exp  <-  logical_and_exp_ban ('||'_ban logical_and_exp^Err_039)*_ban
logical_and_exp <-  inclusive_or_exp_ban ('&&'_ban inclusive_or_exp^Err_040)*_ban
inclusive_or_exp <-  exclusive_or_exp_ban ('|'_ban !'|' exclusive_or_exp^Err_041)*_ban
exclusive_or_exp <-  and_exp_ban ('^'_ban and_exp^Err_042)*_ban
and_exp         <-  equality_exp_ban ('&'_ban !'&' equality_exp_ban)*_ban
equality_exp    <-  relational_exp_ban ((('=='_ban  /  '!='_ban)_ban) relational_exp^Err_043)*_ban
relational_exp  <-  shift_exp_ban ((('<='_ban  /  ('>='_ban  /  ('<'_ban  /  '>'_ban)_ban)_ban)_ban) shift_exp^Err_044)*_ban
shift_exp       <-  additive_exp_ban ((('<<'_ban  /  '>>'_ban)_ban) additive_exp^Err_045)*_ban
additive_exp    <-  multiplicative_exp_ban ((('+'_ban  /  '-'_ban)_ban) multiplicative_exp_ban)*_ban
multiplicative_exp <-  cast_exp_ban ((('*'_ban  /  ('/'_ban  /  '%'_ban)_ban)_ban) cast_exp_ban)*_ban
cast_exp        <-  ('('_ban type_name_ban ')'_ban cast_exp_ban  /  unary_exp_ban)_ban
unary_exp       <-  ('++'_ban unary_exp_ban  /  ('--'_ban unary_exp_ban  /  (unary_operator_ban cast_exp_ban  /  ('sizeof'_ban (type_name_ban  /  unary_exp)^Err_046  /  postfix_exp_ban)_ban)_ban)_ban)_ban
postfix_exp     <-  primary_exp_ban (('['_ban exp_ban ']'_ban  /  ('('_ban (assignment_exp_ban (','_ban assignment_exp_ban)*_ban)?_ban ')'_ban  /  ('.'_ban ID_ban^Err_047  /  ('->'_ban ID_ban^Err_048  /  ('++'_ban  /  '--'_ban)_ban)_ban)_ban)_ban)_ban)*_ban
primary_exp     <-  (ID_ban  /  (STRING_ban  /  (constant_ban  /  '('_ban exp_ban ')'_ban)_ban)_ban)_ban
constant        <-  (INT_CONST_ban  /  (CHAR_CONST_ban  /  (FLOAT_CONST_ban  /  ENUMERATION_CONST_ban)_ban)_ban)_ban
unary_operator  <-  ('&'_ban  /  ('*'_ban  /  ('+'_ban  /  ('-'_ban  /  ('~'_ban  /  '!'_ban)_ban)_ban)_ban)_ban)_ban	

End UPathDeep

Yes: 	array01.c
Yes: 	array02.c
Yes: 	array03.c
Yes: 	assignment01.c
Yes: 	decl01.c
Yes: 	dowhile01.c
Yes: 	enum01.c
Yes: 	enum02.c
Yes: 	enum03.c
Yes: 	enum04.c
Yes: 	enum05.c
Yes: 	expand.c
Yes: 	expbinand.c
Yes: 	expbinor.c
Yes: 	expor.c
Yes: 	expor02.c
Yes: 	expunary01.c
Yes: 	expxor.c
Yes: 	for01.c
Yes: 	for02.c
Yes: 	function01.c
Yes: 	function02.c
Yes: 	global01.c
Yes: 	goto01.c
Yes: 	goto02.c
Yes: 	if01.c
Yes: 	if02.c
Yes: 	main01.c
Yes: 	main02.c
Yes: 	pointer01.c
Yes: 	sizeof01.c
Yes: 	struct01.c
Yes: 	struct02.c
Yes: 	struct03.c
Yes: 	struct04.c
Yes: 	switch01.c
Yes: 	switch02.c
Yes: 	switch03.c
Yes: 	switch04.c
Yes: 	ternary01.c
Yes: 	ternary02.c
Yes: 	while01.c
Yes: 	while02.c
Yes: 	while03.c
Yes: 	while04.c
No: 	braces01.c
r = nil lab = fail line: 2 col: 10
No: 	braces02.c
r = nil lab = fail line: 2 col: 25
No: 	braces03.c
r = nil lab = fail line: 3 col: 17
No: 	brack01.c
r = nil lab = fail line: 4 col: 1
No: 	brack02.c
r = nil lab = fail line: 4 col: 15
No: 	brack03.c
r = nil lab = fail line: 5 col: 9
No: 	brackIf01.c
r = nil lab = fail line: 4 col: 8
No: 	brackSwitch01.c
r = nil lab = fail line: 5 col: 12
No: 	brackWhile01.c
r = nil lab = fail line: 4 col: 11
No: 	brackWhile02.c
r = nil lab = fail line: 6 col: 11
No: 	colon01.c
r = nil lab = fail line: 8 col: 13
No: 	colon02.c
r = nil lab = fail line: 4 col: 43
No: 	declAfterComma01.c
r = nil lab = fail line: 2 col: 11
No: 	endComment01.c
r = nil lab = fail line: 7 col: 1
No: 	enumeratorComma01.c
r = nil lab = fail line: 2 col: 12
No: 	exprAnd01.c
r = nil lab = fail line: 4 col: 13
No: 	exprComma01.c
r = nil lab = fail line: 5 col: 45
No: 	exprExcOr01.c
r = nil lab = fail line: 4 col: 14
No: 	exprIncOr01.c
r = nil lab = fail line: 4 col: 14
No: 	exprLogAnd01.c
r = nil lab = fail line: 4 col: 14
No: 	exprLogOr01.c
r = nil lab = fail line: 4 col: 15
No: 	identifier01.c
r = nil lab = fail line: 4 col: 9
No: 	identifier02.c
r = nil lab = fail line: 6 col: 22
No: 	identifier03.c
r = nil lab = fail line: 6 col: 23
No: 	invalidDecl01.c
r = nil lab = fail line: 3 col: 1
No: 	invalidExpr01.c
r = nil lab = fail line: 4 col: 1
No: 	invalidExpr02.c
r = nil lab = fail line: 7 col: 14
No: 	invalidExpr03.c
r = nil lab = fail line: 6 col: 14
No: 	invalidExpr04.c
r = nil lab = fail line: 4 col: 8
No: 	invalidExpr05.c
r = nil lab = fail line: 5 col: 12
No: 	invalidExpr06.c
r = nil lab = fail line: 4 col: 11
No: 	invalidExpr07.c
r = nil lab = fail line: 6 col: 11
No: 	invalidExpr08.c
r = nil lab = fail line: 5 col: 10
No: 	invalidExpr09.c
r = nil lab = fail line: 5 col: 22
No: 	invalidExpr10.c
r = nil lab = fail line: 8 col: 17
No: 	invalidExprCond101.c
r = nil lab = fail line: 4 col: 20
No: 	invalidExprCond201.c
r = nil lab = fail line: 4 col: 24
No: 	invalidExprInc01.c
r = nil lab = fail line: 5 col: 7
No: 	invalidExprUnary01.c
r = nil lab = fail line: 5 col: 10
No: 	invalidSizeof01.c
r = nil lab = fail line: 4 col: 26
No: 	multBrack01.c
r = nil lab = fail line: 9 col: 27
No: 	multEnumeratorBraces01.c
r = nil lab = fail line: 6 col: 9
No: 	multExpr01.c
r = nil lab = fail line: 9 col: 13
No: 	multExpr02.c
r = nil lab = fail line: 9 col: 9
No: 	multExprBraces01.c
r = nil lab = fail line: 8 col: 9
No: 	multSemicolon01.c
r = nil lab = fail line: 8 col: 23
No: 	multStat01.c
r = nil lab = fail line: 10 col: 5
No: 	semicolon01.c
r = nil lab = fail line: 2 col: 24
No: 	semicolon02.c
r = nil lab = fail line: 5 col: 23
No: 	semicolon03.c
r = nil lab = fail line: 7 col: 1
No: 	semicolon04.c
r = nil lab = fail line: 5 col: 1
No: 	semicolon05.c
r = nil lab = fail line: 7 col: 5
No: 	sqBrack01.c
r = nil lab = fail line: 4 col: 13
No: 	stat01.c
r = nil lab = fail line: 5 col: 1
No: 	stat02.c
r = nil lab = fail line: 6 col: 1
No: 	stat03.c
r = nil lab = fail line: 6 col: 1
No: 	statCase01.c
r = nil lab = fail line: 7 col: 5
No: 	statDefault01.c
r = nil lab = fail line: 7 col: 5
No: 	while01.c
r = nil lab = fail line: 6 col: 1
No: 	zeroDecl01.c
r = nil lab = fail line: 4 col: 1
